// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AdministratorField_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChannelPartyField_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DocumentField_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_EntityField_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ManagerField_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OracleSignatureField_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OutpointField_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OutputTagField_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PeriodField_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TargetAddressField_messages_2eproto;
namespace messages {
class PublicMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PublicMessage> _instance;
} _PublicMessage_default_instance_;
class PrivateMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrivateMessage> _instance;
} _PrivateMessage_default_instance_;
class RevertedTxDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RevertedTx> _instance;
} _RevertedTx_default_instance_;
class OfferDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Offer> _instance;
} _Offer_default_instance_;
class SignatureRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SignatureRequest> _instance;
} _SignatureRequest_default_instance_;
class SettlementRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SettlementRequest> _instance;
} _SettlementRequest_default_instance_;
class OutputMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OutputMetadata> _instance;
} _OutputMetadata_default_instance_;
class DistributionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Distribution> _instance;
} _Distribution_default_instance_;
class InitiateRelationshipDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InitiateRelationship> _instance;
} _InitiateRelationship_default_instance_;
class PendingAcceptRelationshipDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PendingAcceptRelationship> _instance;
} _PendingAcceptRelationship_default_instance_;
class AcceptRelationshipDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AcceptRelationship> _instance;
} _AcceptRelationship_default_instance_;
class RelationshipAmendmentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RelationshipAmendment> _instance;
} _RelationshipAmendment_default_instance_;
class InitiateThreadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InitiateThread> _instance;
} _InitiateThread_default_instance_;
class AdministratorFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AdministratorField> _instance;
} _AdministratorField_default_instance_;
class ChannelPartyFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChannelPartyField> _instance;
} _ChannelPartyField_default_instance_;
class DocumentFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DocumentField> _instance;
} _DocumentField_default_instance_;
class EntityFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EntityField> _instance;
} _EntityField_default_instance_;
class IdentityOracleProofFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IdentityOracleProofField> _instance;
} _IdentityOracleProofField_default_instance_;
class ManagerFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ManagerField> _instance;
} _ManagerField_default_instance_;
class OracleSignatureFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OracleSignatureField> _instance;
} _OracleSignatureField_default_instance_;
class OutpointFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OutpointField> _instance;
} _OutpointField_default_instance_;
class OutputTagFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OutputTagField> _instance;
} _OutputTagField_default_instance_;
class PaymailProofFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PaymailProofField> _instance;
} _PaymailProofField_default_instance_;
class PeriodFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PeriodField> _instance;
} _PeriodField_default_instance_;
class TargetAddressFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TargetAddressField> _instance;
} _TargetAddressField_default_instance_;
}  // namespace messages
static void InitDefaultsscc_info_AcceptRelationship_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_AcceptRelationship_default_instance_;
    new (ptr) ::messages::AcceptRelationship();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::AcceptRelationship::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AcceptRelationship_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AcceptRelationship_messages_2eproto}, {}};

static void InitDefaultsscc_info_AdministratorField_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_AdministratorField_default_instance_;
    new (ptr) ::messages::AdministratorField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::AdministratorField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AdministratorField_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AdministratorField_messages_2eproto}, {}};

static void InitDefaultsscc_info_ChannelPartyField_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_ChannelPartyField_default_instance_;
    new (ptr) ::messages::ChannelPartyField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::ChannelPartyField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChannelPartyField_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ChannelPartyField_messages_2eproto}, {}};

static void InitDefaultsscc_info_Distribution_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_Distribution_default_instance_;
    new (ptr) ::messages::Distribution();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::Distribution::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Distribution_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Distribution_messages_2eproto}, {}};

static void InitDefaultsscc_info_DocumentField_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_DocumentField_default_instance_;
    new (ptr) ::messages::DocumentField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::DocumentField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DocumentField_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DocumentField_messages_2eproto}, {}};

static void InitDefaultsscc_info_EntityField_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_EntityField_default_instance_;
    new (ptr) ::messages::EntityField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::EntityField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_EntityField_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_EntityField_messages_2eproto}, {
      &scc_info_AdministratorField_messages_2eproto.base,
      &scc_info_ManagerField_messages_2eproto.base,}};

static void InitDefaultsscc_info_IdentityOracleProofField_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_IdentityOracleProofField_default_instance_;
    new (ptr) ::messages::IdentityOracleProofField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::IdentityOracleProofField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_IdentityOracleProofField_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_IdentityOracleProofField_messages_2eproto}, {
      &scc_info_EntityField_messages_2eproto.base,
      &scc_info_OracleSignatureField_messages_2eproto.base,}};

static void InitDefaultsscc_info_InitiateRelationship_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_InitiateRelationship_default_instance_;
    new (ptr) ::messages::InitiateRelationship();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::InitiateRelationship::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InitiateRelationship_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InitiateRelationship_messages_2eproto}, {
      &scc_info_ChannelPartyField_messages_2eproto.base,}};

static void InitDefaultsscc_info_InitiateThread_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_InitiateThread_default_instance_;
    new (ptr) ::messages::InitiateThread();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::InitiateThread::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InitiateThread_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InitiateThread_messages_2eproto}, {}};

static void InitDefaultsscc_info_ManagerField_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_ManagerField_default_instance_;
    new (ptr) ::messages::ManagerField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::ManagerField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ManagerField_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ManagerField_messages_2eproto}, {}};

static void InitDefaultsscc_info_Offer_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_Offer_default_instance_;
    new (ptr) ::messages::Offer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::Offer::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Offer_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Offer_messages_2eproto}, {}};

static void InitDefaultsscc_info_OracleSignatureField_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_OracleSignatureField_default_instance_;
    new (ptr) ::messages::OracleSignatureField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::OracleSignatureField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OracleSignatureField_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OracleSignatureField_messages_2eproto}, {
      &scc_info_PeriodField_messages_2eproto.base,}};

static void InitDefaultsscc_info_OutpointField_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_OutpointField_default_instance_;
    new (ptr) ::messages::OutpointField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::OutpointField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OutpointField_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OutpointField_messages_2eproto}, {}};

static void InitDefaultsscc_info_OutputMetadata_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_OutputMetadata_default_instance_;
    new (ptr) ::messages::OutputMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::OutputMetadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OutputMetadata_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OutputMetadata_messages_2eproto}, {
      &scc_info_OutputTagField_messages_2eproto.base,}};

static void InitDefaultsscc_info_OutputTagField_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_OutputTagField_default_instance_;
    new (ptr) ::messages::OutputTagField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::OutputTagField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OutputTagField_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OutputTagField_messages_2eproto}, {}};

static void InitDefaultsscc_info_PaymailProofField_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_PaymailProofField_default_instance_;
    new (ptr) ::messages::PaymailProofField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::PaymailProofField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PaymailProofField_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PaymailProofField_messages_2eproto}, {
      &scc_info_OracleSignatureField_messages_2eproto.base,}};

static void InitDefaultsscc_info_PendingAcceptRelationship_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_PendingAcceptRelationship_default_instance_;
    new (ptr) ::messages::PendingAcceptRelationship();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::PendingAcceptRelationship::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PendingAcceptRelationship_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PendingAcceptRelationship_messages_2eproto}, {}};

static void InitDefaultsscc_info_PeriodField_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_PeriodField_default_instance_;
    new (ptr) ::messages::PeriodField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::PeriodField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PeriodField_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PeriodField_messages_2eproto}, {}};

static void InitDefaultsscc_info_PrivateMessage_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_PrivateMessage_default_instance_;
    new (ptr) ::messages::PrivateMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::PrivateMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PrivateMessage_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PrivateMessage_messages_2eproto}, {
      &scc_info_OutpointField_messages_2eproto.base,
      &scc_info_DocumentField_messages_2eproto.base,}};

static void InitDefaultsscc_info_PublicMessage_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_PublicMessage_default_instance_;
    new (ptr) ::messages::PublicMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::PublicMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PublicMessage_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PublicMessage_messages_2eproto}, {
      &scc_info_OutpointField_messages_2eproto.base,
      &scc_info_DocumentField_messages_2eproto.base,}};

static void InitDefaultsscc_info_RelationshipAmendment_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_RelationshipAmendment_default_instance_;
    new (ptr) ::messages::RelationshipAmendment();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::RelationshipAmendment::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RelationshipAmendment_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RelationshipAmendment_messages_2eproto}, {}};

static void InitDefaultsscc_info_RevertedTx_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_RevertedTx_default_instance_;
    new (ptr) ::messages::RevertedTx();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::RevertedTx::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RevertedTx_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RevertedTx_messages_2eproto}, {}};

static void InitDefaultsscc_info_SettlementRequest_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_SettlementRequest_default_instance_;
    new (ptr) ::messages::SettlementRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::SettlementRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SettlementRequest_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SettlementRequest_messages_2eproto}, {
      &scc_info_TargetAddressField_messages_2eproto.base,}};

static void InitDefaultsscc_info_SignatureRequest_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_SignatureRequest_default_instance_;
    new (ptr) ::messages::SignatureRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::SignatureRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignatureRequest_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SignatureRequest_messages_2eproto}, {}};

static void InitDefaultsscc_info_TargetAddressField_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_TargetAddressField_default_instance_;
    new (ptr) ::messages::TargetAddressField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::TargetAddressField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TargetAddressField_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TargetAddressField_messages_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_messages_2eproto[25];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_messages_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_messages_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_messages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::PublicMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::PublicMessage, timestamp_),
  PROTOBUF_FIELD_OFFSET(::messages::PublicMessage, subject_),
  PROTOBUF_FIELD_OFFSET(::messages::PublicMessage, regarding_),
  PROTOBUF_FIELD_OFFSET(::messages::PublicMessage, publicmessage_),
  PROTOBUF_FIELD_OFFSET(::messages::PublicMessage, attachments_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::PrivateMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::PrivateMessage, timestamp_),
  PROTOBUF_FIELD_OFFSET(::messages::PrivateMessage, subject_),
  PROTOBUF_FIELD_OFFSET(::messages::PrivateMessage, regarding_),
  PROTOBUF_FIELD_OFFSET(::messages::PrivateMessage, privatemessage_),
  PROTOBUF_FIELD_OFFSET(::messages::PrivateMessage, attachments_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::RevertedTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::RevertedTx, timestamp_),
  PROTOBUF_FIELD_OFFSET(::messages::RevertedTx, transaction_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::Offer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::Offer, timestamp_),
  PROTOBUF_FIELD_OFFSET(::messages::Offer, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::SignatureRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::SignatureRequest, timestamp_),
  PROTOBUF_FIELD_OFFSET(::messages::SignatureRequest, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::SettlementRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::SettlementRequest, timestamp_),
  PROTOBUF_FIELD_OFFSET(::messages::SettlementRequest, transfertxid_),
  PROTOBUF_FIELD_OFFSET(::messages::SettlementRequest, contractfees_),
  PROTOBUF_FIELD_OFFSET(::messages::SettlementRequest, settlement_),
  PROTOBUF_FIELD_OFFSET(::messages::SettlementRequest, transferfees_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::OutputMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::OutputMetadata, outputdescription_),
  PROTOBUF_FIELD_OFFSET(::messages::OutputMetadata, tags_),
  PROTOBUF_FIELD_OFFSET(::messages::OutputMetadata, customtags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::Distribution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::Distribution, instrumentcode_),
  PROTOBUF_FIELD_OFFSET(::messages::Distribution, timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::InitiateRelationship, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::InitiateRelationship, type_),
  PROTOBUF_FIELD_OFFSET(::messages::InitiateRelationship, seed_),
  PROTOBUF_FIELD_OFFSET(::messages::InitiateRelationship, flag_),
  PROTOBUF_FIELD_OFFSET(::messages::InitiateRelationship, encryptiontype_),
  PROTOBUF_FIELD_OFFSET(::messages::InitiateRelationship, proofofidentitytype_),
  PROTOBUF_FIELD_OFFSET(::messages::InitiateRelationship, proofofidentity_),
  PROTOBUF_FIELD_OFFSET(::messages::InitiateRelationship, channelparties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::PendingAcceptRelationship, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::PendingAcceptRelationship, proofofidentitytype_),
  PROTOBUF_FIELD_OFFSET(::messages::PendingAcceptRelationship, proofofidentity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::AcceptRelationship, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::AcceptRelationship, proofofidentitytype_),
  PROTOBUF_FIELD_OFFSET(::messages::AcceptRelationship, proofofidentity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::RelationshipAmendment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::RelationshipAmendment, seed_),
  PROTOBUF_FIELD_OFFSET(::messages::RelationshipAmendment, baseencryptionsecret_),
  PROTOBUF_FIELD_OFFSET(::messages::RelationshipAmendment, addmemberindexes_),
  PROTOBUF_FIELD_OFFSET(::messages::RelationshipAmendment, dropmemberindexes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::InitiateThread, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::InitiateThread, flag_),
  PROTOBUF_FIELD_OFFSET(::messages::InitiateThread, seed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::AdministratorField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::AdministratorField, type_),
  PROTOBUF_FIELD_OFFSET(::messages::AdministratorField, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::ChannelPartyField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::ChannelPartyField, administrativeaddress_),
  PROTOBUF_FIELD_OFFSET(::messages::ChannelPartyField, outputindex_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::DocumentField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::DocumentField, name_),
  PROTOBUF_FIELD_OFFSET(::messages::DocumentField, type_),
  PROTOBUF_FIELD_OFFSET(::messages::DocumentField, contents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, name_),
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, type_),
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, lei_),
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, unitnumber_),
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, buildingnumber_),
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, street_),
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, suburbcity_),
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, territorystateprovincecode_),
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, countrycode_),
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, postalzipcode_),
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, emailaddress_),
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, phonenumber_),
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, administration_),
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, management_),
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, domainname_),
  PROTOBUF_FIELD_OFFSET(::messages::EntityField, paymailhandle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::IdentityOracleProofField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::IdentityOracleProofField, userid_),
  PROTOBUF_FIELD_OFFSET(::messages::IdentityOracleProofField, entity_),
  PROTOBUF_FIELD_OFFSET(::messages::IdentityOracleProofField, oraclesignature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::ManagerField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::ManagerField, type_),
  PROTOBUF_FIELD_OFFSET(::messages::ManagerField, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::OracleSignatureField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::OracleSignatureField, oracleurl_),
  PROTOBUF_FIELD_OFFSET(::messages::OracleSignatureField, blockheight_),
  PROTOBUF_FIELD_OFFSET(::messages::OracleSignatureField, validityperiod_),
  PROTOBUF_FIELD_OFFSET(::messages::OracleSignatureField, signaturealgorithm_),
  PROTOBUF_FIELD_OFFSET(::messages::OracleSignatureField, signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::OutpointField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::OutpointField, txid_),
  PROTOBUF_FIELD_OFFSET(::messages::OutpointField, outputindex_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::OutputTagField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::OutputTagField, tag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::PaymailProofField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::PaymailProofField, userid_),
  PROTOBUF_FIELD_OFFSET(::messages::PaymailProofField, handle_),
  PROTOBUF_FIELD_OFFSET(::messages::PaymailProofField, oraclesignature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::PeriodField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::PeriodField, begin_),
  PROTOBUF_FIELD_OFFSET(::messages::PeriodField, end_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messages::TargetAddressField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messages::TargetAddressField, address_),
  PROTOBUF_FIELD_OFFSET(::messages::TargetAddressField, quantity_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::messages::PublicMessage)},
  { 10, -1, sizeof(::messages::PrivateMessage)},
  { 20, -1, sizeof(::messages::RevertedTx)},
  { 27, -1, sizeof(::messages::Offer)},
  { 34, -1, sizeof(::messages::SignatureRequest)},
  { 41, -1, sizeof(::messages::SettlementRequest)},
  { 51, -1, sizeof(::messages::OutputMetadata)},
  { 59, -1, sizeof(::messages::Distribution)},
  { 66, -1, sizeof(::messages::InitiateRelationship)},
  { 78, -1, sizeof(::messages::PendingAcceptRelationship)},
  { 85, -1, sizeof(::messages::AcceptRelationship)},
  { 92, -1, sizeof(::messages::RelationshipAmendment)},
  { 101, -1, sizeof(::messages::InitiateThread)},
  { 108, -1, sizeof(::messages::AdministratorField)},
  { 115, -1, sizeof(::messages::ChannelPartyField)},
  { 122, -1, sizeof(::messages::DocumentField)},
  { 130, -1, sizeof(::messages::EntityField)},
  { 151, -1, sizeof(::messages::IdentityOracleProofField)},
  { 159, -1, sizeof(::messages::ManagerField)},
  { 166, -1, sizeof(::messages::OracleSignatureField)},
  { 176, -1, sizeof(::messages::OutpointField)},
  { 183, -1, sizeof(::messages::OutputTagField)},
  { 189, -1, sizeof(::messages::PaymailProofField)},
  { 197, -1, sizeof(::messages::PeriodField)},
  { 204, -1, sizeof(::messages::TargetAddressField)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_PublicMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_PrivateMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_RevertedTx_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_Offer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_SignatureRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_SettlementRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_OutputMetadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_Distribution_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_InitiateRelationship_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_PendingAcceptRelationship_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_AcceptRelationship_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_RelationshipAmendment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_InitiateThread_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_AdministratorField_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_ChannelPartyField_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_DocumentField_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_EntityField_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_IdentityOracleProofField_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_ManagerField_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_OracleSignatureField_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_OutpointField_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_OutputTagField_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_PaymailProofField_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_PeriodField_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messages::_TargetAddressField_default_instance_),
};

const char descriptor_table_protodef_messages_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016messages.proto\022\010messages\"\275\001\n\rPublicMes"
  "sage\022\021\n\tTimestamp\030\001 \001(\004\022\017\n\007Subject\030\002 \001(\t"
  "\022*\n\tRegarding\030\003 \001(\0132\027.messages.OutpointF"
  "ield\022.\n\rPublicMessage\030\004 \001(\0132\027.messages.D"
  "ocumentField\022,\n\013Attachments\030\005 \003(\0132\027.mess"
  "ages.DocumentField\"\277\001\n\016PrivateMessage\022\021\n"
  "\tTimestamp\030\001 \001(\004\022\017\n\007Subject\030\002 \001(\t\022*\n\tReg"
  "arding\030\003 \001(\0132\027.messages.OutpointField\022/\n"
  "\016PrivateMessage\030\004 \001(\0132\027.messages.Documen"
  "tField\022,\n\013Attachments\030\005 \003(\0132\027.messages.D"
  "ocumentField\"4\n\nRevertedTx\022\021\n\tTimestamp\030"
  "\001 \001(\004\022\023\n\013Transaction\030\002 \001(\014\"+\n\005Offer\022\021\n\tT"
  "imestamp\030\001 \001(\004\022\017\n\007Payload\030\002 \001(\014\"6\n\020Signa"
  "tureRequest\022\021\n\tTimestamp\030\001 \001(\004\022\017\n\007Payloa"
  "d\030\002 \001(\014\"\270\001\n\021SettlementRequest\022\021\n\tTimesta"
  "mp\030\001 \001(\004\022\024\n\014TransferTxId\030\002 \001(\014\0222\n\014Contra"
  "ctFees\030\003 \003(\0132\034.messages.TargetAddressFie"
  "ld\022\022\n\nSettlement\030\004 \001(\014\0222\n\014TransferFees\030\005"
  " \003(\0132\034.messages.TargetAddressField\"g\n\016Ou"
  "tputMetadata\022\031\n\021OutputDescription\030\001 \001(\t\022"
  "\014\n\004Tags\030\002 \003(\r\022,\n\nCustomTags\030\003 \003(\0132\030.mess"
  "ages.OutputTagField\"9\n\014Distribution\022\026\n\016I"
  "nstrumentCode\030\001 \001(\014\022\021\n\tTimestamp\030\002 \001(\004\"\303"
  "\001\n\024InitiateRelationship\022\014\n\004Type\030\001 \001(\r\022\014\n"
  "\004Seed\030\002 \001(\014\022\014\n\004Flag\030\003 \001(\014\022\026\n\016EncryptionT"
  "ype\030\004 \001(\r\022\033\n\023ProofOfIdentityType\030\005 \001(\r\022\027"
  "\n\017ProofOfIdentity\030\006 \001(\014\0223\n\016ChannelPartie"
  "s\030\007 \003(\0132\033.messages.ChannelPartyField\"Q\n\031"
  "PendingAcceptRelationship\022\033\n\023ProofOfIden"
  "tityType\030\001 \001(\r\022\027\n\017ProofOfIdentity\030\002 \001(\014\""
  "J\n\022AcceptRelationship\022\033\n\023ProofOfIdentity"
  "Type\030\001 \001(\r\022\027\n\017ProofOfIdentity\030\002 \001(\014\"x\n\025R"
  "elationshipAmendment\022\014\n\004Seed\030\001 \001(\014\022\034\n\024Ba"
  "seEncryptionSecret\030\002 \001(\014\022\030\n\020AddMemberInd"
  "exes\030\003 \001(\r\022\031\n\021DropMemberIndexes\030\004 \001(\r\",\n"
  "\016InitiateThread\022\014\n\004Flag\030\001 \001(\014\022\014\n\004Seed\030\002 "
  "\001(\014\"0\n\022AdministratorField\022\014\n\004Type\030\001 \001(\r\022"
  "\014\n\004Name\030\002 \001(\t\"G\n\021ChannelPartyField\022\035\n\025Ad"
  "ministrativeAddress\030\001 \001(\014\022\023\n\013OutputIndex"
  "\030\002 \001(\r\"=\n\rDocumentField\022\014\n\004Name\030\001 \001(\t\022\014\n"
  "\004Type\030\002 \001(\t\022\020\n\010Contents\030\003 \001(\014\"\224\003\n\013Entity"
  "Field\022\014\n\004Name\030\001 \001(\t\022\014\n\004Type\030\002 \001(\t\022\013\n\003LEI"
  "\030\003 \001(\t\022\022\n\nUnitNumber\030\004 \001(\t\022\026\n\016BuildingNu"
  "mber\030\005 \001(\t\022\016\n\006Street\030\006 \001(\t\022\022\n\nSuburbCity"
  "\030\007 \001(\t\022\"\n\032TerritoryStateProvinceCode\030\010 \001"
  "(\t\022\023\n\013CountryCode\030\t \001(\t\022\025\n\rPostalZIPCode"
  "\030\n \001(\t\022\024\n\014EmailAddress\030\013 \001(\t\022\023\n\013PhoneNum"
  "ber\030\014 \001(\t\0224\n\016Administration\030\r \003(\0132\034.mess"
  "ages.AdministratorField\022*\n\nManagement\030\016 "
  "\003(\0132\026.messages.ManagerField\022\022\n\nDomainNam"
  "e\030\017 \001(\t\022\025\n\rPaymailHandle\030\021 \001(\tJ\004\010\020\020\021\"\212\001\n"
  "\030IdentityOracleProofField\022\016\n\006UserID\030\001 \001("
  "\014\022%\n\006Entity\030\002 \001(\0132\025.messages.EntityField"
  "\0227\n\017OracleSignature\030\003 \001(\0132\036.messages.Ora"
  "cleSignatureField\"*\n\014ManagerField\022\014\n\004Typ"
  "e\030\001 \001(\r\022\014\n\004Name\030\002 \001(\t\"\234\001\n\024OracleSignatur"
  "eField\022\021\n\tOracleURL\030\001 \001(\t\022\023\n\013BlockHeight"
  "\030\002 \001(\r\022-\n\016ValidityPeriod\030\003 \001(\0132\025.message"
  "s.PeriodField\022\032\n\022SignatureAlgorithm\030\004 \001("
  "\r\022\021\n\tSignature\030\005 \001(\014\"2\n\rOutpointField\022\014\n"
  "\004TxId\030\001 \001(\014\022\023\n\013OutputIndex\030\002 \001(\r\"\035\n\016Outp"
  "utTagField\022\013\n\003Tag\030\001 \001(\t\"l\n\021PaymailProofF"
  "ield\022\016\n\006UserID\030\001 \001(\014\022\016\n\006Handle\030\002 \001(\t\0227\n\017"
  "OracleSignature\030\003 \001(\0132\036.messages.OracleS"
  "ignatureField\")\n\013PeriodField\022\r\n\005Begin\030\001 "
  "\001(\004\022\013\n\003End\030\002 \001(\004\"7\n\022TargetAddressField\022\017"
  "\n\007Address\030\001 \001(\014\022\020\n\010Quantity\030\002 \001(\004B9Z7git"
  "hub.com/tokenized/specification/dist/gol"
  "ang/messagesb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_messages_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_messages_2eproto_sccs[25] = {
  &scc_info_AcceptRelationship_messages_2eproto.base,
  &scc_info_AdministratorField_messages_2eproto.base,
  &scc_info_ChannelPartyField_messages_2eproto.base,
  &scc_info_Distribution_messages_2eproto.base,
  &scc_info_DocumentField_messages_2eproto.base,
  &scc_info_EntityField_messages_2eproto.base,
  &scc_info_IdentityOracleProofField_messages_2eproto.base,
  &scc_info_InitiateRelationship_messages_2eproto.base,
  &scc_info_InitiateThread_messages_2eproto.base,
  &scc_info_ManagerField_messages_2eproto.base,
  &scc_info_Offer_messages_2eproto.base,
  &scc_info_OracleSignatureField_messages_2eproto.base,
  &scc_info_OutpointField_messages_2eproto.base,
  &scc_info_OutputMetadata_messages_2eproto.base,
  &scc_info_OutputTagField_messages_2eproto.base,
  &scc_info_PaymailProofField_messages_2eproto.base,
  &scc_info_PendingAcceptRelationship_messages_2eproto.base,
  &scc_info_PeriodField_messages_2eproto.base,
  &scc_info_PrivateMessage_messages_2eproto.base,
  &scc_info_PublicMessage_messages_2eproto.base,
  &scc_info_RelationshipAmendment_messages_2eproto.base,
  &scc_info_RevertedTx_messages_2eproto.base,
  &scc_info_SettlementRequest_messages_2eproto.base,
  &scc_info_SignatureRequest_messages_2eproto.base,
  &scc_info_TargetAddressField_messages_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_messages_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_messages_2eproto = {
  false, false, descriptor_table_protodef_messages_2eproto, "messages.proto", 2740,
  &descriptor_table_messages_2eproto_once, descriptor_table_messages_2eproto_sccs, descriptor_table_messages_2eproto_deps, 25, 0,
  schemas, file_default_instances, TableStruct_messages_2eproto::offsets,
  file_level_metadata_messages_2eproto, 25, file_level_enum_descriptors_messages_2eproto, file_level_service_descriptors_messages_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_messages_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_messages_2eproto)), true);
namespace messages {

// ===================================================================

void PublicMessage::InitAsDefaultInstance() {
  ::messages::_PublicMessage_default_instance_._instance.get_mutable()->regarding_ = const_cast< ::messages::OutpointField*>(
      ::messages::OutpointField::internal_default_instance());
  ::messages::_PublicMessage_default_instance_._instance.get_mutable()->publicmessage_ = const_cast< ::messages::DocumentField*>(
      ::messages::DocumentField::internal_default_instance());
}
class PublicMessage::_Internal {
 public:
  static const ::messages::OutpointField& regarding(const PublicMessage* msg);
  static const ::messages::DocumentField& publicmessage(const PublicMessage* msg);
};

const ::messages::OutpointField&
PublicMessage::_Internal::regarding(const PublicMessage* msg) {
  return *msg->regarding_;
}
const ::messages::DocumentField&
PublicMessage::_Internal::publicmessage(const PublicMessage* msg) {
  return *msg->publicmessage_;
}
PublicMessage::PublicMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  attachments_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.PublicMessage)
}
PublicMessage::PublicMessage(const PublicMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      attachments_(from.attachments_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subject().empty()) {
    subject_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subject(),
      GetArena());
  }
  if (from._internal_has_regarding()) {
    regarding_ = new ::messages::OutpointField(*from.regarding_);
  } else {
    regarding_ = nullptr;
  }
  if (from._internal_has_publicmessage()) {
    publicmessage_ = new ::messages::DocumentField(*from.publicmessage_);
  } else {
    publicmessage_ = nullptr;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:messages.PublicMessage)
}

void PublicMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PublicMessage_messages_2eproto.base);
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&regarding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&regarding_)) + sizeof(timestamp_));
}

PublicMessage::~PublicMessage() {
  // @@protoc_insertion_point(destructor:messages.PublicMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PublicMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  subject_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete regarding_;
  if (this != internal_default_instance()) delete publicmessage_;
}

void PublicMessage::ArenaDtor(void* object) {
  PublicMessage* _this = reinterpret_cast< PublicMessage* >(object);
  (void)_this;
}
void PublicMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PublicMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PublicMessage& PublicMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PublicMessage_messages_2eproto.base);
  return *internal_default_instance();
}


void PublicMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.PublicMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attachments_.Clear();
  subject_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && regarding_ != nullptr) {
    delete regarding_;
  }
  regarding_ = nullptr;
  if (GetArena() == nullptr && publicmessage_ != nullptr) {
    delete publicmessage_;
  }
  publicmessage_ = nullptr;
  timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PublicMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 Timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Subject = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subject();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.PublicMessage.Subject"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .messages.OutpointField Regarding = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_regarding(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .messages.DocumentField PublicMessage = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_publicmessage(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .messages.DocumentField Attachments = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attachments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PublicMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.PublicMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_timestamp(), target);
  }

  // string Subject = 2;
  if (this->subject().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subject().data(), static_cast<int>(this->_internal_subject().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.PublicMessage.Subject");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subject(), target);
  }

  // .messages.OutpointField Regarding = 3;
  if (this->has_regarding()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::regarding(this), target, stream);
  }

  // .messages.DocumentField PublicMessage = 4;
  if (this->has_publicmessage()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::publicmessage(this), target, stream);
  }

  // repeated .messages.DocumentField Attachments = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attachments_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_attachments(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.PublicMessage)
  return target;
}

size_t PublicMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.PublicMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .messages.DocumentField Attachments = 5;
  total_size += 1UL * this->_internal_attachments_size();
  for (const auto& msg : this->attachments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Subject = 2;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subject());
  }

  // .messages.OutpointField Regarding = 3;
  if (this->has_regarding()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *regarding_);
  }

  // .messages.DocumentField PublicMessage = 4;
  if (this->has_publicmessage()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *publicmessage_);
  }

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublicMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.PublicMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PublicMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PublicMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.PublicMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.PublicMessage)
    MergeFrom(*source);
  }
}

void PublicMessage::MergeFrom(const PublicMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.PublicMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attachments_.MergeFrom(from.attachments_);
  if (from.subject().size() > 0) {
    _internal_set_subject(from._internal_subject());
  }
  if (from.has_regarding()) {
    _internal_mutable_regarding()->::messages::OutpointField::MergeFrom(from._internal_regarding());
  }
  if (from.has_publicmessage()) {
    _internal_mutable_publicmessage()->::messages::DocumentField::MergeFrom(from._internal_publicmessage());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void PublicMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.PublicMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublicMessage::CopyFrom(const PublicMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.PublicMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublicMessage::IsInitialized() const {
  return true;
}

void PublicMessage::InternalSwap(PublicMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  attachments_.InternalSwap(&other->attachments_);
  subject_.Swap(&other->subject_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PublicMessage, timestamp_)
      + sizeof(PublicMessage::timestamp_)
      - PROTOBUF_FIELD_OFFSET(PublicMessage, regarding_)>(
          reinterpret_cast<char*>(&regarding_),
          reinterpret_cast<char*>(&other->regarding_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PublicMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrivateMessage::InitAsDefaultInstance() {
  ::messages::_PrivateMessage_default_instance_._instance.get_mutable()->regarding_ = const_cast< ::messages::OutpointField*>(
      ::messages::OutpointField::internal_default_instance());
  ::messages::_PrivateMessage_default_instance_._instance.get_mutable()->privatemessage_ = const_cast< ::messages::DocumentField*>(
      ::messages::DocumentField::internal_default_instance());
}
class PrivateMessage::_Internal {
 public:
  static const ::messages::OutpointField& regarding(const PrivateMessage* msg);
  static const ::messages::DocumentField& privatemessage(const PrivateMessage* msg);
};

const ::messages::OutpointField&
PrivateMessage::_Internal::regarding(const PrivateMessage* msg) {
  return *msg->regarding_;
}
const ::messages::DocumentField&
PrivateMessage::_Internal::privatemessage(const PrivateMessage* msg) {
  return *msg->privatemessage_;
}
PrivateMessage::PrivateMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  attachments_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.PrivateMessage)
}
PrivateMessage::PrivateMessage(const PrivateMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      attachments_(from.attachments_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subject().empty()) {
    subject_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subject(),
      GetArena());
  }
  if (from._internal_has_regarding()) {
    regarding_ = new ::messages::OutpointField(*from.regarding_);
  } else {
    regarding_ = nullptr;
  }
  if (from._internal_has_privatemessage()) {
    privatemessage_ = new ::messages::DocumentField(*from.privatemessage_);
  } else {
    privatemessage_ = nullptr;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:messages.PrivateMessage)
}

void PrivateMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrivateMessage_messages_2eproto.base);
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&regarding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&regarding_)) + sizeof(timestamp_));
}

PrivateMessage::~PrivateMessage() {
  // @@protoc_insertion_point(destructor:messages.PrivateMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrivateMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  subject_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete regarding_;
  if (this != internal_default_instance()) delete privatemessage_;
}

void PrivateMessage::ArenaDtor(void* object) {
  PrivateMessage* _this = reinterpret_cast< PrivateMessage* >(object);
  (void)_this;
}
void PrivateMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrivateMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrivateMessage& PrivateMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrivateMessage_messages_2eproto.base);
  return *internal_default_instance();
}


void PrivateMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.PrivateMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attachments_.Clear();
  subject_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && regarding_ != nullptr) {
    delete regarding_;
  }
  regarding_ = nullptr;
  if (GetArena() == nullptr && privatemessage_ != nullptr) {
    delete privatemessage_;
  }
  privatemessage_ = nullptr;
  timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrivateMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 Timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Subject = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subject();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.PrivateMessage.Subject"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .messages.OutpointField Regarding = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_regarding(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .messages.DocumentField PrivateMessage = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_privatemessage(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .messages.DocumentField Attachments = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attachments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrivateMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.PrivateMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_timestamp(), target);
  }

  // string Subject = 2;
  if (this->subject().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subject().data(), static_cast<int>(this->_internal_subject().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.PrivateMessage.Subject");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subject(), target);
  }

  // .messages.OutpointField Regarding = 3;
  if (this->has_regarding()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::regarding(this), target, stream);
  }

  // .messages.DocumentField PrivateMessage = 4;
  if (this->has_privatemessage()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::privatemessage(this), target, stream);
  }

  // repeated .messages.DocumentField Attachments = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attachments_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_attachments(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.PrivateMessage)
  return target;
}

size_t PrivateMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.PrivateMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .messages.DocumentField Attachments = 5;
  total_size += 1UL * this->_internal_attachments_size();
  for (const auto& msg : this->attachments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Subject = 2;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subject());
  }

  // .messages.OutpointField Regarding = 3;
  if (this->has_regarding()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *regarding_);
  }

  // .messages.DocumentField PrivateMessage = 4;
  if (this->has_privatemessage()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *privatemessage_);
  }

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrivateMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.PrivateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PrivateMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrivateMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.PrivateMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.PrivateMessage)
    MergeFrom(*source);
  }
}

void PrivateMessage::MergeFrom(const PrivateMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.PrivateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attachments_.MergeFrom(from.attachments_);
  if (from.subject().size() > 0) {
    _internal_set_subject(from._internal_subject());
  }
  if (from.has_regarding()) {
    _internal_mutable_regarding()->::messages::OutpointField::MergeFrom(from._internal_regarding());
  }
  if (from.has_privatemessage()) {
    _internal_mutable_privatemessage()->::messages::DocumentField::MergeFrom(from._internal_privatemessage());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void PrivateMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.PrivateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivateMessage::CopyFrom(const PrivateMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.PrivateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrivateMessage::IsInitialized() const {
  return true;
}

void PrivateMessage::InternalSwap(PrivateMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  attachments_.InternalSwap(&other->attachments_);
  subject_.Swap(&other->subject_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PrivateMessage, timestamp_)
      + sizeof(PrivateMessage::timestamp_)
      - PROTOBUF_FIELD_OFFSET(PrivateMessage, regarding_)>(
          reinterpret_cast<char*>(&regarding_),
          reinterpret_cast<char*>(&other->regarding_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PrivateMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RevertedTx::InitAsDefaultInstance() {
}
class RevertedTx::_Internal {
 public:
};

RevertedTx::RevertedTx(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.RevertedTx)
}
RevertedTx::RevertedTx(const RevertedTx& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  transaction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transaction().empty()) {
    transaction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_transaction(),
      GetArena());
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:messages.RevertedTx)
}

void RevertedTx::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RevertedTx_messages_2eproto.base);
  transaction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestamp_ = PROTOBUF_ULONGLONG(0);
}

RevertedTx::~RevertedTx() {
  // @@protoc_insertion_point(destructor:messages.RevertedTx)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RevertedTx::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  transaction_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RevertedTx::ArenaDtor(void* object) {
  RevertedTx* _this = reinterpret_cast< RevertedTx* >(object);
  (void)_this;
}
void RevertedTx::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RevertedTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RevertedTx& RevertedTx::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RevertedTx_messages_2eproto.base);
  return *internal_default_instance();
}


void RevertedTx::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.RevertedTx)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RevertedTx::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 Timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes Transaction = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_transaction();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RevertedTx::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.RevertedTx)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_timestamp(), target);
  }

  // bytes Transaction = 2;
  if (this->transaction().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_transaction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.RevertedTx)
  return target;
}

size_t RevertedTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.RevertedTx)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Transaction = 2;
  if (this->transaction().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_transaction());
  }

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RevertedTx::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.RevertedTx)
  GOOGLE_DCHECK_NE(&from, this);
  const RevertedTx* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RevertedTx>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.RevertedTx)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.RevertedTx)
    MergeFrom(*source);
  }
}

void RevertedTx::MergeFrom(const RevertedTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.RevertedTx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transaction().size() > 0) {
    _internal_set_transaction(from._internal_transaction());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void RevertedTx::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.RevertedTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RevertedTx::CopyFrom(const RevertedTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.RevertedTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RevertedTx::IsInitialized() const {
  return true;
}

void RevertedTx::InternalSwap(RevertedTx* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  transaction_.Swap(&other->transaction_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RevertedTx::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Offer::InitAsDefaultInstance() {
}
class Offer::_Internal {
 public:
};

Offer::Offer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.Offer)
}
Offer::Offer(const Offer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload().empty()) {
    payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_payload(),
      GetArena());
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:messages.Offer)
}

void Offer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Offer_messages_2eproto.base);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestamp_ = PROTOBUF_ULONGLONG(0);
}

Offer::~Offer() {
  // @@protoc_insertion_point(destructor:messages.Offer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Offer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Offer::ArenaDtor(void* object) {
  Offer* _this = reinterpret_cast< Offer* >(object);
  (void)_this;
}
void Offer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Offer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Offer& Offer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Offer_messages_2eproto.base);
  return *internal_default_instance();
}


void Offer::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.Offer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Offer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 Timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes Payload = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Offer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.Offer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_timestamp(), target);
  }

  // bytes Payload = 2;
  if (this->payload().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.Offer)
  return target;
}

size_t Offer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.Offer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Payload = 2;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_payload());
  }

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Offer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.Offer)
  GOOGLE_DCHECK_NE(&from, this);
  const Offer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Offer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.Offer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.Offer)
    MergeFrom(*source);
  }
}

void Offer::MergeFrom(const Offer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.Offer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {
    _internal_set_payload(from._internal_payload());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void Offer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.Offer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Offer::CopyFrom(const Offer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.Offer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Offer::IsInitialized() const {
  return true;
}

void Offer::InternalSwap(Offer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  payload_.Swap(&other->payload_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Offer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SignatureRequest::InitAsDefaultInstance() {
}
class SignatureRequest::_Internal {
 public:
};

SignatureRequest::SignatureRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.SignatureRequest)
}
SignatureRequest::SignatureRequest(const SignatureRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload().empty()) {
    payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_payload(),
      GetArena());
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:messages.SignatureRequest)
}

void SignatureRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SignatureRequest_messages_2eproto.base);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestamp_ = PROTOBUF_ULONGLONG(0);
}

SignatureRequest::~SignatureRequest() {
  // @@protoc_insertion_point(destructor:messages.SignatureRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SignatureRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SignatureRequest::ArenaDtor(void* object) {
  SignatureRequest* _this = reinterpret_cast< SignatureRequest* >(object);
  (void)_this;
}
void SignatureRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SignatureRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignatureRequest& SignatureRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SignatureRequest_messages_2eproto.base);
  return *internal_default_instance();
}


void SignatureRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.SignatureRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SignatureRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 Timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes Payload = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SignatureRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.SignatureRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_timestamp(), target);
  }

  // bytes Payload = 2;
  if (this->payload().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.SignatureRequest)
  return target;
}

size_t SignatureRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.SignatureRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Payload = 2;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_payload());
  }

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignatureRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.SignatureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SignatureRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SignatureRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.SignatureRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.SignatureRequest)
    MergeFrom(*source);
  }
}

void SignatureRequest::MergeFrom(const SignatureRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.SignatureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {
    _internal_set_payload(from._internal_payload());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void SignatureRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.SignatureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignatureRequest::CopyFrom(const SignatureRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.SignatureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignatureRequest::IsInitialized() const {
  return true;
}

void SignatureRequest::InternalSwap(SignatureRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  payload_.Swap(&other->payload_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SignatureRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SettlementRequest::InitAsDefaultInstance() {
}
class SettlementRequest::_Internal {
 public:
};

SettlementRequest::SettlementRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  contractfees_(arena),
  transferfees_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.SettlementRequest)
}
SettlementRequest::SettlementRequest(const SettlementRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      contractfees_(from.contractfees_),
      transferfees_(from.transferfees_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  transfertxid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transfertxid().empty()) {
    transfertxid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_transfertxid(),
      GetArena());
  }
  settlement_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_settlement().empty()) {
    settlement_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_settlement(),
      GetArena());
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:messages.SettlementRequest)
}

void SettlementRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SettlementRequest_messages_2eproto.base);
  transfertxid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  settlement_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestamp_ = PROTOBUF_ULONGLONG(0);
}

SettlementRequest::~SettlementRequest() {
  // @@protoc_insertion_point(destructor:messages.SettlementRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SettlementRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  transfertxid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  settlement_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SettlementRequest::ArenaDtor(void* object) {
  SettlementRequest* _this = reinterpret_cast< SettlementRequest* >(object);
  (void)_this;
}
void SettlementRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SettlementRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SettlementRequest& SettlementRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SettlementRequest_messages_2eproto.base);
  return *internal_default_instance();
}


void SettlementRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.SettlementRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contractfees_.Clear();
  transferfees_.Clear();
  transfertxid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  settlement_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SettlementRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 Timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes TransferTxId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_transfertxid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .messages.TargetAddressField ContractFees = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contractfees(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // bytes Settlement = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_settlement();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .messages.TargetAddressField TransferFees = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_transferfees(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SettlementRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.SettlementRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_timestamp(), target);
  }

  // bytes TransferTxId = 2;
  if (this->transfertxid().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_transfertxid(), target);
  }

  // repeated .messages.TargetAddressField ContractFees = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_contractfees_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_contractfees(i), target, stream);
  }

  // bytes Settlement = 4;
  if (this->settlement().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_settlement(), target);
  }

  // repeated .messages.TargetAddressField TransferFees = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_transferfees_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_transferfees(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.SettlementRequest)
  return target;
}

size_t SettlementRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.SettlementRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .messages.TargetAddressField ContractFees = 3;
  total_size += 1UL * this->_internal_contractfees_size();
  for (const auto& msg : this->contractfees_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .messages.TargetAddressField TransferFees = 5;
  total_size += 1UL * this->_internal_transferfees_size();
  for (const auto& msg : this->transferfees_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes TransferTxId = 2;
  if (this->transfertxid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_transfertxid());
  }

  // bytes Settlement = 4;
  if (this->settlement().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_settlement());
  }

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SettlementRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.SettlementRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SettlementRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SettlementRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.SettlementRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.SettlementRequest)
    MergeFrom(*source);
  }
}

void SettlementRequest::MergeFrom(const SettlementRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.SettlementRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contractfees_.MergeFrom(from.contractfees_);
  transferfees_.MergeFrom(from.transferfees_);
  if (from.transfertxid().size() > 0) {
    _internal_set_transfertxid(from._internal_transfertxid());
  }
  if (from.settlement().size() > 0) {
    _internal_set_settlement(from._internal_settlement());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void SettlementRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.SettlementRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettlementRequest::CopyFrom(const SettlementRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.SettlementRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettlementRequest::IsInitialized() const {
  return true;
}

void SettlementRequest::InternalSwap(SettlementRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  contractfees_.InternalSwap(&other->contractfees_);
  transferfees_.InternalSwap(&other->transferfees_);
  transfertxid_.Swap(&other->transfertxid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  settlement_.Swap(&other->settlement_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SettlementRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OutputMetadata::InitAsDefaultInstance() {
}
class OutputMetadata::_Internal {
 public:
};

OutputMetadata::OutputMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tags_(arena),
  customtags_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.OutputMetadata)
}
OutputMetadata::OutputMetadata(const OutputMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tags_(from.tags_),
      customtags_(from.customtags_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  outputdescription_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_outputdescription().empty()) {
    outputdescription_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_outputdescription(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:messages.OutputMetadata)
}

void OutputMetadata::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OutputMetadata_messages_2eproto.base);
  outputdescription_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

OutputMetadata::~OutputMetadata() {
  // @@protoc_insertion_point(destructor:messages.OutputMetadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OutputMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  outputdescription_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OutputMetadata::ArenaDtor(void* object) {
  OutputMetadata* _this = reinterpret_cast< OutputMetadata* >(object);
  (void)_this;
}
void OutputMetadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OutputMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OutputMetadata& OutputMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OutputMetadata_messages_2eproto.base);
  return *internal_default_instance();
}


void OutputMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.OutputMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  customtags_.Clear();
  outputdescription_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OutputMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string OutputDescription = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_outputdescription();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.OutputMetadata.OutputDescription"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 Tags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_tags(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_tags(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .messages.OutputTagField CustomTags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_customtags(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OutputMetadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.OutputMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string OutputDescription = 1;
  if (this->outputdescription().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_outputdescription().data(), static_cast<int>(this->_internal_outputdescription().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.OutputMetadata.OutputDescription");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_outputdescription(), target);
  }

  // repeated uint32 Tags = 2;
  {
    int byte_size = _tags_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_tags(), byte_size, target);
    }
  }

  // repeated .messages.OutputTagField CustomTags = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_customtags_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_customtags(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.OutputMetadata)
  return target;
}

size_t OutputMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.OutputMetadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 Tags = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->tags_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _tags_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .messages.OutputTagField CustomTags = 3;
  total_size += 1UL * this->_internal_customtags_size();
  for (const auto& msg : this->customtags_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string OutputDescription = 1;
  if (this->outputdescription().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_outputdescription());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OutputMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.OutputMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const OutputMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OutputMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.OutputMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.OutputMetadata)
    MergeFrom(*source);
  }
}

void OutputMetadata::MergeFrom(const OutputMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.OutputMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  customtags_.MergeFrom(from.customtags_);
  if (from.outputdescription().size() > 0) {
    _internal_set_outputdescription(from._internal_outputdescription());
  }
}

void OutputMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.OutputMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutputMetadata::CopyFrom(const OutputMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.OutputMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutputMetadata::IsInitialized() const {
  return true;
}

void OutputMetadata::InternalSwap(OutputMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tags_.InternalSwap(&other->tags_);
  customtags_.InternalSwap(&other->customtags_);
  outputdescription_.Swap(&other->outputdescription_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata OutputMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Distribution::InitAsDefaultInstance() {
}
class Distribution::_Internal {
 public:
};

Distribution::Distribution(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.Distribution)
}
Distribution::Distribution(const Distribution& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instrumentcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instrumentcode().empty()) {
    instrumentcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_instrumentcode(),
      GetArena());
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:messages.Distribution)
}

void Distribution::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Distribution_messages_2eproto.base);
  instrumentcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestamp_ = PROTOBUF_ULONGLONG(0);
}

Distribution::~Distribution() {
  // @@protoc_insertion_point(destructor:messages.Distribution)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Distribution::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instrumentcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Distribution::ArenaDtor(void* object) {
  Distribution* _this = reinterpret_cast< Distribution* >(object);
  (void)_this;
}
void Distribution::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Distribution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Distribution& Distribution::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Distribution_messages_2eproto.base);
  return *internal_default_instance();
}


void Distribution::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.Distribution)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instrumentcode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Distribution::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes InstrumentCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instrumentcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 Timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Distribution::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.Distribution)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes InstrumentCode = 1;
  if (this->instrumentcode().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_instrumentcode(), target);
  }

  // uint64 Timestamp = 2;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.Distribution)
  return target;
}

size_t Distribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.Distribution)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes InstrumentCode = 1;
  if (this->instrumentcode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_instrumentcode());
  }

  // uint64 Timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Distribution::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.Distribution)
  GOOGLE_DCHECK_NE(&from, this);
  const Distribution* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Distribution>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.Distribution)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.Distribution)
    MergeFrom(*source);
  }
}

void Distribution::MergeFrom(const Distribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.Distribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instrumentcode().size() > 0) {
    _internal_set_instrumentcode(from._internal_instrumentcode());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void Distribution::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.Distribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution::CopyFrom(const Distribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.Distribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distribution::IsInitialized() const {
  return true;
}

void Distribution::InternalSwap(Distribution* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  instrumentcode_.Swap(&other->instrumentcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Distribution::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InitiateRelationship::InitAsDefaultInstance() {
}
class InitiateRelationship::_Internal {
 public:
};

InitiateRelationship::InitiateRelationship(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  channelparties_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.InitiateRelationship)
}
InitiateRelationship::InitiateRelationship(const InitiateRelationship& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      channelparties_(from.channelparties_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  seed_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_seed().empty()) {
    seed_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_seed(),
      GetArena());
  }
  flag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_flag().empty()) {
    flag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_flag(),
      GetArena());
  }
  proofofidentity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_proofofidentity().empty()) {
    proofofidentity_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_proofofidentity(),
      GetArena());
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&proofofidentitytype_) -
    reinterpret_cast<char*>(&type_)) + sizeof(proofofidentitytype_));
  // @@protoc_insertion_point(copy_constructor:messages.InitiateRelationship)
}

void InitiateRelationship::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InitiateRelationship_messages_2eproto.base);
  seed_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  proofofidentity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&proofofidentitytype_) -
      reinterpret_cast<char*>(&type_)) + sizeof(proofofidentitytype_));
}

InitiateRelationship::~InitiateRelationship() {
  // @@protoc_insertion_point(destructor:messages.InitiateRelationship)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InitiateRelationship::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  seed_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  proofofidentity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InitiateRelationship::ArenaDtor(void* object) {
  InitiateRelationship* _this = reinterpret_cast< InitiateRelationship* >(object);
  (void)_this;
}
void InitiateRelationship::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InitiateRelationship::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InitiateRelationship& InitiateRelationship::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InitiateRelationship_messages_2eproto.base);
  return *internal_default_instance();
}


void InitiateRelationship::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.InitiateRelationship)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channelparties_.Clear();
  seed_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flag_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  proofofidentity_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&proofofidentitytype_) -
      reinterpret_cast<char*>(&type_)) + sizeof(proofofidentitytype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InitiateRelationship::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 Type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes Seed = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_seed();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes Flag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_flag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 EncryptionType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          encryptiontype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 ProofOfIdentityType = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          proofofidentitytype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes ProofOfIdentity = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_proofofidentity();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .messages.ChannelPartyField ChannelParties = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_channelparties(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InitiateRelationship::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.InitiateRelationship)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_type(), target);
  }

  // bytes Seed = 2;
  if (this->seed().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_seed(), target);
  }

  // bytes Flag = 3;
  if (this->flag().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_flag(), target);
  }

  // uint32 EncryptionType = 4;
  if (this->encryptiontype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_encryptiontype(), target);
  }

  // uint32 ProofOfIdentityType = 5;
  if (this->proofofidentitytype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_proofofidentitytype(), target);
  }

  // bytes ProofOfIdentity = 6;
  if (this->proofofidentity().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_proofofidentity(), target);
  }

  // repeated .messages.ChannelPartyField ChannelParties = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_channelparties_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_channelparties(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.InitiateRelationship)
  return target;
}

size_t InitiateRelationship::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.InitiateRelationship)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .messages.ChannelPartyField ChannelParties = 7;
  total_size += 1UL * this->_internal_channelparties_size();
  for (const auto& msg : this->channelparties_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes Seed = 2;
  if (this->seed().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_seed());
  }

  // bytes Flag = 3;
  if (this->flag().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_flag());
  }

  // bytes ProofOfIdentity = 6;
  if (this->proofofidentity().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_proofofidentity());
  }

  // uint32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_type());
  }

  // uint32 EncryptionType = 4;
  if (this->encryptiontype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_encryptiontype());
  }

  // uint32 ProofOfIdentityType = 5;
  if (this->proofofidentitytype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_proofofidentitytype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InitiateRelationship::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.InitiateRelationship)
  GOOGLE_DCHECK_NE(&from, this);
  const InitiateRelationship* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InitiateRelationship>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.InitiateRelationship)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.InitiateRelationship)
    MergeFrom(*source);
  }
}

void InitiateRelationship::MergeFrom(const InitiateRelationship& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.InitiateRelationship)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channelparties_.MergeFrom(from.channelparties_);
  if (from.seed().size() > 0) {
    _internal_set_seed(from._internal_seed());
  }
  if (from.flag().size() > 0) {
    _internal_set_flag(from._internal_flag());
  }
  if (from.proofofidentity().size() > 0) {
    _internal_set_proofofidentity(from._internal_proofofidentity());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.encryptiontype() != 0) {
    _internal_set_encryptiontype(from._internal_encryptiontype());
  }
  if (from.proofofidentitytype() != 0) {
    _internal_set_proofofidentitytype(from._internal_proofofidentitytype());
  }
}

void InitiateRelationship::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.InitiateRelationship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitiateRelationship::CopyFrom(const InitiateRelationship& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.InitiateRelationship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitiateRelationship::IsInitialized() const {
  return true;
}

void InitiateRelationship::InternalSwap(InitiateRelationship* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  channelparties_.InternalSwap(&other->channelparties_);
  seed_.Swap(&other->seed_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flag_.Swap(&other->flag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  proofofidentity_.Swap(&other->proofofidentity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InitiateRelationship, proofofidentitytype_)
      + sizeof(InitiateRelationship::proofofidentitytype_)
      - PROTOBUF_FIELD_OFFSET(InitiateRelationship, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InitiateRelationship::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PendingAcceptRelationship::InitAsDefaultInstance() {
}
class PendingAcceptRelationship::_Internal {
 public:
};

PendingAcceptRelationship::PendingAcceptRelationship(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.PendingAcceptRelationship)
}
PendingAcceptRelationship::PendingAcceptRelationship(const PendingAcceptRelationship& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  proofofidentity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_proofofidentity().empty()) {
    proofofidentity_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_proofofidentity(),
      GetArena());
  }
  proofofidentitytype_ = from.proofofidentitytype_;
  // @@protoc_insertion_point(copy_constructor:messages.PendingAcceptRelationship)
}

void PendingAcceptRelationship::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PendingAcceptRelationship_messages_2eproto.base);
  proofofidentity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  proofofidentitytype_ = 0u;
}

PendingAcceptRelationship::~PendingAcceptRelationship() {
  // @@protoc_insertion_point(destructor:messages.PendingAcceptRelationship)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PendingAcceptRelationship::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  proofofidentity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PendingAcceptRelationship::ArenaDtor(void* object) {
  PendingAcceptRelationship* _this = reinterpret_cast< PendingAcceptRelationship* >(object);
  (void)_this;
}
void PendingAcceptRelationship::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PendingAcceptRelationship::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PendingAcceptRelationship& PendingAcceptRelationship::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PendingAcceptRelationship_messages_2eproto.base);
  return *internal_default_instance();
}


void PendingAcceptRelationship::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.PendingAcceptRelationship)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  proofofidentity_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  proofofidentitytype_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PendingAcceptRelationship::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 ProofOfIdentityType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          proofofidentitytype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes ProofOfIdentity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_proofofidentity();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PendingAcceptRelationship::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.PendingAcceptRelationship)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ProofOfIdentityType = 1;
  if (this->proofofidentitytype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_proofofidentitytype(), target);
  }

  // bytes ProofOfIdentity = 2;
  if (this->proofofidentity().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_proofofidentity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.PendingAcceptRelationship)
  return target;
}

size_t PendingAcceptRelationship::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.PendingAcceptRelationship)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes ProofOfIdentity = 2;
  if (this->proofofidentity().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_proofofidentity());
  }

  // uint32 ProofOfIdentityType = 1;
  if (this->proofofidentitytype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_proofofidentitytype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PendingAcceptRelationship::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.PendingAcceptRelationship)
  GOOGLE_DCHECK_NE(&from, this);
  const PendingAcceptRelationship* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PendingAcceptRelationship>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.PendingAcceptRelationship)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.PendingAcceptRelationship)
    MergeFrom(*source);
  }
}

void PendingAcceptRelationship::MergeFrom(const PendingAcceptRelationship& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.PendingAcceptRelationship)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.proofofidentity().size() > 0) {
    _internal_set_proofofidentity(from._internal_proofofidentity());
  }
  if (from.proofofidentitytype() != 0) {
    _internal_set_proofofidentitytype(from._internal_proofofidentitytype());
  }
}

void PendingAcceptRelationship::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.PendingAcceptRelationship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PendingAcceptRelationship::CopyFrom(const PendingAcceptRelationship& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.PendingAcceptRelationship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PendingAcceptRelationship::IsInitialized() const {
  return true;
}

void PendingAcceptRelationship::InternalSwap(PendingAcceptRelationship* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  proofofidentity_.Swap(&other->proofofidentity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(proofofidentitytype_, other->proofofidentitytype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PendingAcceptRelationship::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AcceptRelationship::InitAsDefaultInstance() {
}
class AcceptRelationship::_Internal {
 public:
};

AcceptRelationship::AcceptRelationship(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.AcceptRelationship)
}
AcceptRelationship::AcceptRelationship(const AcceptRelationship& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  proofofidentity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_proofofidentity().empty()) {
    proofofidentity_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_proofofidentity(),
      GetArena());
  }
  proofofidentitytype_ = from.proofofidentitytype_;
  // @@protoc_insertion_point(copy_constructor:messages.AcceptRelationship)
}

void AcceptRelationship::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AcceptRelationship_messages_2eproto.base);
  proofofidentity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  proofofidentitytype_ = 0u;
}

AcceptRelationship::~AcceptRelationship() {
  // @@protoc_insertion_point(destructor:messages.AcceptRelationship)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AcceptRelationship::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  proofofidentity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AcceptRelationship::ArenaDtor(void* object) {
  AcceptRelationship* _this = reinterpret_cast< AcceptRelationship* >(object);
  (void)_this;
}
void AcceptRelationship::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AcceptRelationship::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AcceptRelationship& AcceptRelationship::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AcceptRelationship_messages_2eproto.base);
  return *internal_default_instance();
}


void AcceptRelationship::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.AcceptRelationship)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  proofofidentity_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  proofofidentitytype_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AcceptRelationship::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 ProofOfIdentityType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          proofofidentitytype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes ProofOfIdentity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_proofofidentity();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AcceptRelationship::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.AcceptRelationship)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ProofOfIdentityType = 1;
  if (this->proofofidentitytype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_proofofidentitytype(), target);
  }

  // bytes ProofOfIdentity = 2;
  if (this->proofofidentity().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_proofofidentity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.AcceptRelationship)
  return target;
}

size_t AcceptRelationship::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.AcceptRelationship)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes ProofOfIdentity = 2;
  if (this->proofofidentity().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_proofofidentity());
  }

  // uint32 ProofOfIdentityType = 1;
  if (this->proofofidentitytype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_proofofidentitytype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AcceptRelationship::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.AcceptRelationship)
  GOOGLE_DCHECK_NE(&from, this);
  const AcceptRelationship* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AcceptRelationship>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.AcceptRelationship)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.AcceptRelationship)
    MergeFrom(*source);
  }
}

void AcceptRelationship::MergeFrom(const AcceptRelationship& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.AcceptRelationship)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.proofofidentity().size() > 0) {
    _internal_set_proofofidentity(from._internal_proofofidentity());
  }
  if (from.proofofidentitytype() != 0) {
    _internal_set_proofofidentitytype(from._internal_proofofidentitytype());
  }
}

void AcceptRelationship::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.AcceptRelationship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptRelationship::CopyFrom(const AcceptRelationship& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.AcceptRelationship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptRelationship::IsInitialized() const {
  return true;
}

void AcceptRelationship::InternalSwap(AcceptRelationship* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  proofofidentity_.Swap(&other->proofofidentity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(proofofidentitytype_, other->proofofidentitytype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AcceptRelationship::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RelationshipAmendment::InitAsDefaultInstance() {
}
class RelationshipAmendment::_Internal {
 public:
};

RelationshipAmendment::RelationshipAmendment(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.RelationshipAmendment)
}
RelationshipAmendment::RelationshipAmendment(const RelationshipAmendment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  seed_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_seed().empty()) {
    seed_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_seed(),
      GetArena());
  }
  baseencryptionsecret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_baseencryptionsecret().empty()) {
    baseencryptionsecret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_baseencryptionsecret(),
      GetArena());
  }
  ::memcpy(&addmemberindexes_, &from.addmemberindexes_,
    static_cast<size_t>(reinterpret_cast<char*>(&dropmemberindexes_) -
    reinterpret_cast<char*>(&addmemberindexes_)) + sizeof(dropmemberindexes_));
  // @@protoc_insertion_point(copy_constructor:messages.RelationshipAmendment)
}

void RelationshipAmendment::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RelationshipAmendment_messages_2eproto.base);
  seed_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  baseencryptionsecret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&addmemberindexes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dropmemberindexes_) -
      reinterpret_cast<char*>(&addmemberindexes_)) + sizeof(dropmemberindexes_));
}

RelationshipAmendment::~RelationshipAmendment() {
  // @@protoc_insertion_point(destructor:messages.RelationshipAmendment)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RelationshipAmendment::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  seed_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  baseencryptionsecret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RelationshipAmendment::ArenaDtor(void* object) {
  RelationshipAmendment* _this = reinterpret_cast< RelationshipAmendment* >(object);
  (void)_this;
}
void RelationshipAmendment::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RelationshipAmendment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RelationshipAmendment& RelationshipAmendment::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RelationshipAmendment_messages_2eproto.base);
  return *internal_default_instance();
}


void RelationshipAmendment::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.RelationshipAmendment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seed_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  baseencryptionsecret_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&addmemberindexes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dropmemberindexes_) -
      reinterpret_cast<char*>(&addmemberindexes_)) + sizeof(dropmemberindexes_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RelationshipAmendment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes Seed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_seed();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes BaseEncryptionSecret = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_baseencryptionsecret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 AddMemberIndexes = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          addmemberindexes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 DropMemberIndexes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          dropmemberindexes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RelationshipAmendment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.RelationshipAmendment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Seed = 1;
  if (this->seed().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_seed(), target);
  }

  // bytes BaseEncryptionSecret = 2;
  if (this->baseencryptionsecret().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_baseencryptionsecret(), target);
  }

  // uint32 AddMemberIndexes = 3;
  if (this->addmemberindexes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_addmemberindexes(), target);
  }

  // uint32 DropMemberIndexes = 4;
  if (this->dropmemberindexes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_dropmemberindexes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.RelationshipAmendment)
  return target;
}

size_t RelationshipAmendment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.RelationshipAmendment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Seed = 1;
  if (this->seed().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_seed());
  }

  // bytes BaseEncryptionSecret = 2;
  if (this->baseencryptionsecret().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_baseencryptionsecret());
  }

  // uint32 AddMemberIndexes = 3;
  if (this->addmemberindexes() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_addmemberindexes());
  }

  // uint32 DropMemberIndexes = 4;
  if (this->dropmemberindexes() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_dropmemberindexes());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RelationshipAmendment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.RelationshipAmendment)
  GOOGLE_DCHECK_NE(&from, this);
  const RelationshipAmendment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RelationshipAmendment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.RelationshipAmendment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.RelationshipAmendment)
    MergeFrom(*source);
  }
}

void RelationshipAmendment::MergeFrom(const RelationshipAmendment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.RelationshipAmendment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seed().size() > 0) {
    _internal_set_seed(from._internal_seed());
  }
  if (from.baseencryptionsecret().size() > 0) {
    _internal_set_baseencryptionsecret(from._internal_baseencryptionsecret());
  }
  if (from.addmemberindexes() != 0) {
    _internal_set_addmemberindexes(from._internal_addmemberindexes());
  }
  if (from.dropmemberindexes() != 0) {
    _internal_set_dropmemberindexes(from._internal_dropmemberindexes());
  }
}

void RelationshipAmendment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.RelationshipAmendment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RelationshipAmendment::CopyFrom(const RelationshipAmendment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.RelationshipAmendment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelationshipAmendment::IsInitialized() const {
  return true;
}

void RelationshipAmendment::InternalSwap(RelationshipAmendment* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  seed_.Swap(&other->seed_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  baseencryptionsecret_.Swap(&other->baseencryptionsecret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RelationshipAmendment, dropmemberindexes_)
      + sizeof(RelationshipAmendment::dropmemberindexes_)
      - PROTOBUF_FIELD_OFFSET(RelationshipAmendment, addmemberindexes_)>(
          reinterpret_cast<char*>(&addmemberindexes_),
          reinterpret_cast<char*>(&other->addmemberindexes_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RelationshipAmendment::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InitiateThread::InitAsDefaultInstance() {
}
class InitiateThread::_Internal {
 public:
};

InitiateThread::InitiateThread(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.InitiateThread)
}
InitiateThread::InitiateThread(const InitiateThread& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  flag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_flag().empty()) {
    flag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_flag(),
      GetArena());
  }
  seed_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_seed().empty()) {
    seed_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_seed(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:messages.InitiateThread)
}

void InitiateThread::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InitiateThread_messages_2eproto.base);
  flag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  seed_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

InitiateThread::~InitiateThread() {
  // @@protoc_insertion_point(destructor:messages.InitiateThread)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InitiateThread::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  flag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  seed_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InitiateThread::ArenaDtor(void* object) {
  InitiateThread* _this = reinterpret_cast< InitiateThread* >(object);
  (void)_this;
}
void InitiateThread::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InitiateThread::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InitiateThread& InitiateThread::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InitiateThread_messages_2eproto.base);
  return *internal_default_instance();
}


void InitiateThread::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.InitiateThread)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flag_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  seed_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InitiateThread::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes Flag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_flag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes Seed = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_seed();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InitiateThread::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.InitiateThread)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Flag = 1;
  if (this->flag().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_flag(), target);
  }

  // bytes Seed = 2;
  if (this->seed().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_seed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.InitiateThread)
  return target;
}

size_t InitiateThread::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.InitiateThread)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Flag = 1;
  if (this->flag().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_flag());
  }

  // bytes Seed = 2;
  if (this->seed().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_seed());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InitiateThread::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.InitiateThread)
  GOOGLE_DCHECK_NE(&from, this);
  const InitiateThread* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InitiateThread>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.InitiateThread)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.InitiateThread)
    MergeFrom(*source);
  }
}

void InitiateThread::MergeFrom(const InitiateThread& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.InitiateThread)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.flag().size() > 0) {
    _internal_set_flag(from._internal_flag());
  }
  if (from.seed().size() > 0) {
    _internal_set_seed(from._internal_seed());
  }
}

void InitiateThread::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.InitiateThread)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitiateThread::CopyFrom(const InitiateThread& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.InitiateThread)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitiateThread::IsInitialized() const {
  return true;
}

void InitiateThread::InternalSwap(InitiateThread* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  flag_.Swap(&other->flag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  seed_.Swap(&other->seed_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata InitiateThread::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AdministratorField::InitAsDefaultInstance() {
}
class AdministratorField::_Internal {
 public:
};

AdministratorField::AdministratorField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.AdministratorField)
}
AdministratorField::AdministratorField(const AdministratorField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:messages.AdministratorField)
}

void AdministratorField::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AdministratorField_messages_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0u;
}

AdministratorField::~AdministratorField() {
  // @@protoc_insertion_point(destructor:messages.AdministratorField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AdministratorField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AdministratorField::ArenaDtor(void* object) {
  AdministratorField* _this = reinterpret_cast< AdministratorField* >(object);
  (void)_this;
}
void AdministratorField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AdministratorField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AdministratorField& AdministratorField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AdministratorField_messages_2eproto.base);
  return *internal_default_instance();
}


void AdministratorField::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.AdministratorField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AdministratorField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 Type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.AdministratorField.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AdministratorField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.AdministratorField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_type(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.AdministratorField.Name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.AdministratorField)
  return target;
}

size_t AdministratorField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.AdministratorField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdministratorField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.AdministratorField)
  GOOGLE_DCHECK_NE(&from, this);
  const AdministratorField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AdministratorField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.AdministratorField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.AdministratorField)
    MergeFrom(*source);
  }
}

void AdministratorField::MergeFrom(const AdministratorField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.AdministratorField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void AdministratorField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.AdministratorField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdministratorField::CopyFrom(const AdministratorField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.AdministratorField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdministratorField::IsInitialized() const {
  return true;
}

void AdministratorField::InternalSwap(AdministratorField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AdministratorField::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ChannelPartyField::InitAsDefaultInstance() {
}
class ChannelPartyField::_Internal {
 public:
};

ChannelPartyField::ChannelPartyField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.ChannelPartyField)
}
ChannelPartyField::ChannelPartyField(const ChannelPartyField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  administrativeaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_administrativeaddress().empty()) {
    administrativeaddress_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_administrativeaddress(),
      GetArena());
  }
  outputindex_ = from.outputindex_;
  // @@protoc_insertion_point(copy_constructor:messages.ChannelPartyField)
}

void ChannelPartyField::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChannelPartyField_messages_2eproto.base);
  administrativeaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  outputindex_ = 0u;
}

ChannelPartyField::~ChannelPartyField() {
  // @@protoc_insertion_point(destructor:messages.ChannelPartyField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChannelPartyField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  administrativeaddress_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ChannelPartyField::ArenaDtor(void* object) {
  ChannelPartyField* _this = reinterpret_cast< ChannelPartyField* >(object);
  (void)_this;
}
void ChannelPartyField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChannelPartyField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChannelPartyField& ChannelPartyField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChannelPartyField_messages_2eproto.base);
  return *internal_default_instance();
}


void ChannelPartyField::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.ChannelPartyField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  administrativeaddress_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  outputindex_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChannelPartyField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes AdministrativeAddress = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_administrativeaddress();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 OutputIndex = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          outputindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChannelPartyField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.ChannelPartyField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes AdministrativeAddress = 1;
  if (this->administrativeaddress().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_administrativeaddress(), target);
  }

  // uint32 OutputIndex = 2;
  if (this->outputindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_outputindex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.ChannelPartyField)
  return target;
}

size_t ChannelPartyField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.ChannelPartyField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes AdministrativeAddress = 1;
  if (this->administrativeaddress().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_administrativeaddress());
  }

  // uint32 OutputIndex = 2;
  if (this->outputindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_outputindex());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChannelPartyField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.ChannelPartyField)
  GOOGLE_DCHECK_NE(&from, this);
  const ChannelPartyField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChannelPartyField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.ChannelPartyField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.ChannelPartyField)
    MergeFrom(*source);
  }
}

void ChannelPartyField::MergeFrom(const ChannelPartyField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.ChannelPartyField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.administrativeaddress().size() > 0) {
    _internal_set_administrativeaddress(from._internal_administrativeaddress());
  }
  if (from.outputindex() != 0) {
    _internal_set_outputindex(from._internal_outputindex());
  }
}

void ChannelPartyField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.ChannelPartyField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChannelPartyField::CopyFrom(const ChannelPartyField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.ChannelPartyField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChannelPartyField::IsInitialized() const {
  return true;
}

void ChannelPartyField::InternalSwap(ChannelPartyField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  administrativeaddress_.Swap(&other->administrativeaddress_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(outputindex_, other->outputindex_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChannelPartyField::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DocumentField::InitAsDefaultInstance() {
}
class DocumentField::_Internal {
 public:
};

DocumentField::DocumentField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.DocumentField)
}
DocumentField::DocumentField(const DocumentField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  contents_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_contents().empty()) {
    contents_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_contents(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:messages.DocumentField)
}

void DocumentField::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DocumentField_messages_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contents_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DocumentField::~DocumentField() {
  // @@protoc_insertion_point(destructor:messages.DocumentField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DocumentField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contents_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DocumentField::ArenaDtor(void* object) {
  DocumentField* _this = reinterpret_cast< DocumentField* >(object);
  (void)_this;
}
void DocumentField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DocumentField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DocumentField& DocumentField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DocumentField_messages_2eproto.base);
  return *internal_default_instance();
}


void DocumentField::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.DocumentField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  contents_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DocumentField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string Name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.DocumentField.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.DocumentField.Type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes Contents = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_contents();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DocumentField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.DocumentField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.DocumentField.Name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string Type = 2;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.DocumentField.Type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // bytes Contents = 3;
  if (this->contents().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_contents(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.DocumentField)
  return target;
}

size_t DocumentField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.DocumentField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // bytes Contents = 3;
  if (this->contents().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_contents());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DocumentField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.DocumentField)
  GOOGLE_DCHECK_NE(&from, this);
  const DocumentField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DocumentField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.DocumentField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.DocumentField)
    MergeFrom(*source);
  }
}

void DocumentField::MergeFrom(const DocumentField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.DocumentField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.contents().size() > 0) {
    _internal_set_contents(from._internal_contents());
  }
}

void DocumentField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.DocumentField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DocumentField::CopyFrom(const DocumentField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.DocumentField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DocumentField::IsInitialized() const {
  return true;
}

void DocumentField::InternalSwap(DocumentField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  contents_.Swap(&other->contents_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DocumentField::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EntityField::InitAsDefaultInstance() {
}
class EntityField::_Internal {
 public:
};

EntityField::EntityField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  administration_(arena),
  management_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.EntityField)
}
EntityField::EntityField(const EntityField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      administration_(from.administration_),
      management_(from.management_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  lei_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lei().empty()) {
    lei_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_lei(),
      GetArena());
  }
  unitnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_unitnumber().empty()) {
    unitnumber_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_unitnumber(),
      GetArena());
  }
  buildingnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buildingnumber().empty()) {
    buildingnumber_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_buildingnumber(),
      GetArena());
  }
  street_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_street().empty()) {
    street_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_street(),
      GetArena());
  }
  suburbcity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_suburbcity().empty()) {
    suburbcity_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_suburbcity(),
      GetArena());
  }
  territorystateprovincecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_territorystateprovincecode().empty()) {
    territorystateprovincecode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_territorystateprovincecode(),
      GetArena());
  }
  countrycode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_countrycode().empty()) {
    countrycode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_countrycode(),
      GetArena());
  }
  postalzipcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_postalzipcode().empty()) {
    postalzipcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_postalzipcode(),
      GetArena());
  }
  emailaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_emailaddress().empty()) {
    emailaddress_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_emailaddress(),
      GetArena());
  }
  phonenumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_phonenumber().empty()) {
    phonenumber_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_phonenumber(),
      GetArena());
  }
  domainname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domainname().empty()) {
    domainname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_domainname(),
      GetArena());
  }
  paymailhandle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_paymailhandle().empty()) {
    paymailhandle_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_paymailhandle(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:messages.EntityField)
}

void EntityField::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EntityField_messages_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lei_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  unitnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buildingnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  street_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  suburbcity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  territorystateprovincecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  countrycode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  postalzipcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  phonenumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domainname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  paymailhandle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

EntityField::~EntityField() {
  // @@protoc_insertion_point(destructor:messages.EntityField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EntityField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lei_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  unitnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buildingnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  street_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  suburbcity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  territorystateprovincecode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  countrycode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  postalzipcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  phonenumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domainname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  paymailhandle_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EntityField::ArenaDtor(void* object) {
  EntityField* _this = reinterpret_cast< EntityField* >(object);
  (void)_this;
}
void EntityField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EntityField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EntityField& EntityField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EntityField_messages_2eproto.base);
  return *internal_default_instance();
}


void EntityField::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.EntityField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  administration_.Clear();
  management_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  lei_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  unitnumber_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buildingnumber_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  street_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  suburbcity_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  territorystateprovincecode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  countrycode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  postalzipcode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  emailaddress_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  phonenumber_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  domainname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  paymailhandle_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EntityField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string Name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.EntityField.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.EntityField.Type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string LEI = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_lei();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.EntityField.LEI"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string UnitNumber = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_unitnumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.EntityField.UnitNumber"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string BuildingNumber = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_buildingnumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.EntityField.BuildingNumber"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Street = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_street();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.EntityField.Street"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string SuburbCity = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_suburbcity();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.EntityField.SuburbCity"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string TerritoryStateProvinceCode = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_territorystateprovincecode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.EntityField.TerritoryStateProvinceCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string CountryCode = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_countrycode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.EntityField.CountryCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string PostalZIPCode = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_postalzipcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.EntityField.PostalZIPCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string EmailAddress = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_emailaddress();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.EntityField.EmailAddress"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string PhoneNumber = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_phonenumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.EntityField.PhoneNumber"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .messages.AdministratorField Administration = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_administration(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .messages.ManagerField Management = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_management(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else goto handle_unusual;
        continue;
      // string DomainName = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_domainname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.EntityField.DomainName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string PaymailHandle = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          auto str = _internal_mutable_paymailhandle();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.EntityField.PaymailHandle"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EntityField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.EntityField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.EntityField.Name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string Type = 2;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.EntityField.Type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // string LEI = 3;
  if (this->lei().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lei().data(), static_cast<int>(this->_internal_lei().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.EntityField.LEI");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_lei(), target);
  }

  // string UnitNumber = 4;
  if (this->unitnumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unitnumber().data(), static_cast<int>(this->_internal_unitnumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.EntityField.UnitNumber");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_unitnumber(), target);
  }

  // string BuildingNumber = 5;
  if (this->buildingnumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buildingnumber().data(), static_cast<int>(this->_internal_buildingnumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.EntityField.BuildingNumber");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_buildingnumber(), target);
  }

  // string Street = 6;
  if (this->street().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_street().data(), static_cast<int>(this->_internal_street().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.EntityField.Street");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_street(), target);
  }

  // string SuburbCity = 7;
  if (this->suburbcity().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_suburbcity().data(), static_cast<int>(this->_internal_suburbcity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.EntityField.SuburbCity");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_suburbcity(), target);
  }

  // string TerritoryStateProvinceCode = 8;
  if (this->territorystateprovincecode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_territorystateprovincecode().data(), static_cast<int>(this->_internal_territorystateprovincecode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.EntityField.TerritoryStateProvinceCode");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_territorystateprovincecode(), target);
  }

  // string CountryCode = 9;
  if (this->countrycode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_countrycode().data(), static_cast<int>(this->_internal_countrycode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.EntityField.CountryCode");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_countrycode(), target);
  }

  // string PostalZIPCode = 10;
  if (this->postalzipcode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_postalzipcode().data(), static_cast<int>(this->_internal_postalzipcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.EntityField.PostalZIPCode");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_postalzipcode(), target);
  }

  // string EmailAddress = 11;
  if (this->emailaddress().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_emailaddress().data(), static_cast<int>(this->_internal_emailaddress().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.EntityField.EmailAddress");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_emailaddress(), target);
  }

  // string PhoneNumber = 12;
  if (this->phonenumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_phonenumber().data(), static_cast<int>(this->_internal_phonenumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.EntityField.PhoneNumber");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_phonenumber(), target);
  }

  // repeated .messages.AdministratorField Administration = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_administration_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, this->_internal_administration(i), target, stream);
  }

  // repeated .messages.ManagerField Management = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_management_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, this->_internal_management(i), target, stream);
  }

  // string DomainName = 15;
  if (this->domainname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domainname().data(), static_cast<int>(this->_internal_domainname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.EntityField.DomainName");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_domainname(), target);
  }

  // string PaymailHandle = 17;
  if (this->paymailhandle().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_paymailhandle().data(), static_cast<int>(this->_internal_paymailhandle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.EntityField.PaymailHandle");
    target = stream->WriteStringMaybeAliased(
        17, this->_internal_paymailhandle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.EntityField)
  return target;
}

size_t EntityField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.EntityField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .messages.AdministratorField Administration = 13;
  total_size += 1UL * this->_internal_administration_size();
  for (const auto& msg : this->administration_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .messages.ManagerField Management = 14;
  total_size += 1UL * this->_internal_management_size();
  for (const auto& msg : this->management_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string LEI = 3;
  if (this->lei().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lei());
  }

  // string UnitNumber = 4;
  if (this->unitnumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unitnumber());
  }

  // string BuildingNumber = 5;
  if (this->buildingnumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buildingnumber());
  }

  // string Street = 6;
  if (this->street().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_street());
  }

  // string SuburbCity = 7;
  if (this->suburbcity().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_suburbcity());
  }

  // string TerritoryStateProvinceCode = 8;
  if (this->territorystateprovincecode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_territorystateprovincecode());
  }

  // string CountryCode = 9;
  if (this->countrycode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_countrycode());
  }

  // string PostalZIPCode = 10;
  if (this->postalzipcode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_postalzipcode());
  }

  // string EmailAddress = 11;
  if (this->emailaddress().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_emailaddress());
  }

  // string PhoneNumber = 12;
  if (this->phonenumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_phonenumber());
  }

  // string DomainName = 15;
  if (this->domainname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domainname());
  }

  // string PaymailHandle = 17;
  if (this->paymailhandle().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_paymailhandle());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.EntityField)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EntityField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.EntityField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.EntityField)
    MergeFrom(*source);
  }
}

void EntityField::MergeFrom(const EntityField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.EntityField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  administration_.MergeFrom(from.administration_);
  management_.MergeFrom(from.management_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.lei().size() > 0) {
    _internal_set_lei(from._internal_lei());
  }
  if (from.unitnumber().size() > 0) {
    _internal_set_unitnumber(from._internal_unitnumber());
  }
  if (from.buildingnumber().size() > 0) {
    _internal_set_buildingnumber(from._internal_buildingnumber());
  }
  if (from.street().size() > 0) {
    _internal_set_street(from._internal_street());
  }
  if (from.suburbcity().size() > 0) {
    _internal_set_suburbcity(from._internal_suburbcity());
  }
  if (from.territorystateprovincecode().size() > 0) {
    _internal_set_territorystateprovincecode(from._internal_territorystateprovincecode());
  }
  if (from.countrycode().size() > 0) {
    _internal_set_countrycode(from._internal_countrycode());
  }
  if (from.postalzipcode().size() > 0) {
    _internal_set_postalzipcode(from._internal_postalzipcode());
  }
  if (from.emailaddress().size() > 0) {
    _internal_set_emailaddress(from._internal_emailaddress());
  }
  if (from.phonenumber().size() > 0) {
    _internal_set_phonenumber(from._internal_phonenumber());
  }
  if (from.domainname().size() > 0) {
    _internal_set_domainname(from._internal_domainname());
  }
  if (from.paymailhandle().size() > 0) {
    _internal_set_paymailhandle(from._internal_paymailhandle());
  }
}

void EntityField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.EntityField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityField::CopyFrom(const EntityField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.EntityField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityField::IsInitialized() const {
  return true;
}

void EntityField::InternalSwap(EntityField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  administration_.InternalSwap(&other->administration_);
  management_.InternalSwap(&other->management_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  lei_.Swap(&other->lei_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  unitnumber_.Swap(&other->unitnumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buildingnumber_.Swap(&other->buildingnumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  street_.Swap(&other->street_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  suburbcity_.Swap(&other->suburbcity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  territorystateprovincecode_.Swap(&other->territorystateprovincecode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  countrycode_.Swap(&other->countrycode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  postalzipcode_.Swap(&other->postalzipcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  emailaddress_.Swap(&other->emailaddress_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  phonenumber_.Swap(&other->phonenumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  domainname_.Swap(&other->domainname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  paymailhandle_.Swap(&other->paymailhandle_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata EntityField::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IdentityOracleProofField::InitAsDefaultInstance() {
  ::messages::_IdentityOracleProofField_default_instance_._instance.get_mutable()->entity_ = const_cast< ::messages::EntityField*>(
      ::messages::EntityField::internal_default_instance());
  ::messages::_IdentityOracleProofField_default_instance_._instance.get_mutable()->oraclesignature_ = const_cast< ::messages::OracleSignatureField*>(
      ::messages::OracleSignatureField::internal_default_instance());
}
class IdentityOracleProofField::_Internal {
 public:
  static const ::messages::EntityField& entity(const IdentityOracleProofField* msg);
  static const ::messages::OracleSignatureField& oraclesignature(const IdentityOracleProofField* msg);
};

const ::messages::EntityField&
IdentityOracleProofField::_Internal::entity(const IdentityOracleProofField* msg) {
  return *msg->entity_;
}
const ::messages::OracleSignatureField&
IdentityOracleProofField::_Internal::oraclesignature(const IdentityOracleProofField* msg) {
  return *msg->oraclesignature_;
}
IdentityOracleProofField::IdentityOracleProofField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.IdentityOracleProofField)
}
IdentityOracleProofField::IdentityOracleProofField(const IdentityOracleProofField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_userid().empty()) {
    userid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_userid(),
      GetArena());
  }
  if (from._internal_has_entity()) {
    entity_ = new ::messages::EntityField(*from.entity_);
  } else {
    entity_ = nullptr;
  }
  if (from._internal_has_oraclesignature()) {
    oraclesignature_ = new ::messages::OracleSignatureField(*from.oraclesignature_);
  } else {
    oraclesignature_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:messages.IdentityOracleProofField)
}

void IdentityOracleProofField::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IdentityOracleProofField_messages_2eproto.base);
  userid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&entity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oraclesignature_) -
      reinterpret_cast<char*>(&entity_)) + sizeof(oraclesignature_));
}

IdentityOracleProofField::~IdentityOracleProofField() {
  // @@protoc_insertion_point(destructor:messages.IdentityOracleProofField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IdentityOracleProofField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  userid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete entity_;
  if (this != internal_default_instance()) delete oraclesignature_;
}

void IdentityOracleProofField::ArenaDtor(void* object) {
  IdentityOracleProofField* _this = reinterpret_cast< IdentityOracleProofField* >(object);
  (void)_this;
}
void IdentityOracleProofField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IdentityOracleProofField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IdentityOracleProofField& IdentityOracleProofField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IdentityOracleProofField_messages_2eproto.base);
  return *internal_default_instance();
}


void IdentityOracleProofField::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.IdentityOracleProofField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && entity_ != nullptr) {
    delete entity_;
  }
  entity_ = nullptr;
  if (GetArena() == nullptr && oraclesignature_ != nullptr) {
    delete oraclesignature_;
  }
  oraclesignature_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IdentityOracleProofField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes UserID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_userid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .messages.EntityField Entity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_entity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .messages.OracleSignatureField OracleSignature = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_oraclesignature(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IdentityOracleProofField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.IdentityOracleProofField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes UserID = 1;
  if (this->userid().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_userid(), target);
  }

  // .messages.EntityField Entity = 2;
  if (this->has_entity()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::entity(this), target, stream);
  }

  // .messages.OracleSignatureField OracleSignature = 3;
  if (this->has_oraclesignature()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::oraclesignature(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.IdentityOracleProofField)
  return target;
}

size_t IdentityOracleProofField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.IdentityOracleProofField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes UserID = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_userid());
  }

  // .messages.EntityField Entity = 2;
  if (this->has_entity()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *entity_);
  }

  // .messages.OracleSignatureField OracleSignature = 3;
  if (this->has_oraclesignature()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oraclesignature_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdentityOracleProofField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.IdentityOracleProofField)
  GOOGLE_DCHECK_NE(&from, this);
  const IdentityOracleProofField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IdentityOracleProofField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.IdentityOracleProofField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.IdentityOracleProofField)
    MergeFrom(*source);
  }
}

void IdentityOracleProofField::MergeFrom(const IdentityOracleProofField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.IdentityOracleProofField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from.has_entity()) {
    _internal_mutable_entity()->::messages::EntityField::MergeFrom(from._internal_entity());
  }
  if (from.has_oraclesignature()) {
    _internal_mutable_oraclesignature()->::messages::OracleSignatureField::MergeFrom(from._internal_oraclesignature());
  }
}

void IdentityOracleProofField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.IdentityOracleProofField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdentityOracleProofField::CopyFrom(const IdentityOracleProofField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.IdentityOracleProofField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdentityOracleProofField::IsInitialized() const {
  return true;
}

void IdentityOracleProofField::InternalSwap(IdentityOracleProofField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  userid_.Swap(&other->userid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IdentityOracleProofField, oraclesignature_)
      + sizeof(IdentityOracleProofField::oraclesignature_)
      - PROTOBUF_FIELD_OFFSET(IdentityOracleProofField, entity_)>(
          reinterpret_cast<char*>(&entity_),
          reinterpret_cast<char*>(&other->entity_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IdentityOracleProofField::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ManagerField::InitAsDefaultInstance() {
}
class ManagerField::_Internal {
 public:
};

ManagerField::ManagerField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.ManagerField)
}
ManagerField::ManagerField(const ManagerField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:messages.ManagerField)
}

void ManagerField::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ManagerField_messages_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0u;
}

ManagerField::~ManagerField() {
  // @@protoc_insertion_point(destructor:messages.ManagerField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ManagerField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ManagerField::ArenaDtor(void* object) {
  ManagerField* _this = reinterpret_cast< ManagerField* >(object);
  (void)_this;
}
void ManagerField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ManagerField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ManagerField& ManagerField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ManagerField_messages_2eproto.base);
  return *internal_default_instance();
}


void ManagerField::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.ManagerField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ManagerField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 Type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.ManagerField.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ManagerField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.ManagerField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_type(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.ManagerField.Name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.ManagerField)
  return target;
}

size_t ManagerField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.ManagerField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ManagerField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.ManagerField)
  GOOGLE_DCHECK_NE(&from, this);
  const ManagerField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ManagerField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.ManagerField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.ManagerField)
    MergeFrom(*source);
  }
}

void ManagerField::MergeFrom(const ManagerField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.ManagerField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void ManagerField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.ManagerField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManagerField::CopyFrom(const ManagerField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.ManagerField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManagerField::IsInitialized() const {
  return true;
}

void ManagerField::InternalSwap(ManagerField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ManagerField::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OracleSignatureField::InitAsDefaultInstance() {
  ::messages::_OracleSignatureField_default_instance_._instance.get_mutable()->validityperiod_ = const_cast< ::messages::PeriodField*>(
      ::messages::PeriodField::internal_default_instance());
}
class OracleSignatureField::_Internal {
 public:
  static const ::messages::PeriodField& validityperiod(const OracleSignatureField* msg);
};

const ::messages::PeriodField&
OracleSignatureField::_Internal::validityperiod(const OracleSignatureField* msg) {
  return *msg->validityperiod_;
}
OracleSignatureField::OracleSignatureField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.OracleSignatureField)
}
OracleSignatureField::OracleSignatureField(const OracleSignatureField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  oracleurl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_oracleurl().empty()) {
    oracleurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_oracleurl(),
      GetArena());
  }
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_signature().empty()) {
    signature_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_signature(),
      GetArena());
  }
  if (from._internal_has_validityperiod()) {
    validityperiod_ = new ::messages::PeriodField(*from.validityperiod_);
  } else {
    validityperiod_ = nullptr;
  }
  ::memcpy(&blockheight_, &from.blockheight_,
    static_cast<size_t>(reinterpret_cast<char*>(&signaturealgorithm_) -
    reinterpret_cast<char*>(&blockheight_)) + sizeof(signaturealgorithm_));
  // @@protoc_insertion_point(copy_constructor:messages.OracleSignatureField)
}

void OracleSignatureField::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OracleSignatureField_messages_2eproto.base);
  oracleurl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&validityperiod_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&signaturealgorithm_) -
      reinterpret_cast<char*>(&validityperiod_)) + sizeof(signaturealgorithm_));
}

OracleSignatureField::~OracleSignatureField() {
  // @@protoc_insertion_point(destructor:messages.OracleSignatureField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OracleSignatureField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  oracleurl_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete validityperiod_;
}

void OracleSignatureField::ArenaDtor(void* object) {
  OracleSignatureField* _this = reinterpret_cast< OracleSignatureField* >(object);
  (void)_this;
}
void OracleSignatureField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OracleSignatureField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OracleSignatureField& OracleSignatureField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OracleSignatureField_messages_2eproto.base);
  return *internal_default_instance();
}


void OracleSignatureField::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.OracleSignatureField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oracleurl_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  signature_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && validityperiod_ != nullptr) {
    delete validityperiod_;
  }
  validityperiod_ = nullptr;
  ::memset(&blockheight_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&signaturealgorithm_) -
      reinterpret_cast<char*>(&blockheight_)) + sizeof(signaturealgorithm_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OracleSignatureField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string OracleURL = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_oracleurl();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.OracleSignatureField.OracleURL"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 BlockHeight = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          blockheight_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .messages.PeriodField ValidityPeriod = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_validityperiod(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 SignatureAlgorithm = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          signaturealgorithm_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes Signature = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_signature();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OracleSignatureField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.OracleSignatureField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string OracleURL = 1;
  if (this->oracleurl().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oracleurl().data(), static_cast<int>(this->_internal_oracleurl().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.OracleSignatureField.OracleURL");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_oracleurl(), target);
  }

  // uint32 BlockHeight = 2;
  if (this->blockheight() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_blockheight(), target);
  }

  // .messages.PeriodField ValidityPeriod = 3;
  if (this->has_validityperiod()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::validityperiod(this), target, stream);
  }

  // uint32 SignatureAlgorithm = 4;
  if (this->signaturealgorithm() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_signaturealgorithm(), target);
  }

  // bytes Signature = 5;
  if (this->signature().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_signature(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.OracleSignatureField)
  return target;
}

size_t OracleSignatureField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.OracleSignatureField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string OracleURL = 1;
  if (this->oracleurl().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oracleurl());
  }

  // bytes Signature = 5;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_signature());
  }

  // .messages.PeriodField ValidityPeriod = 3;
  if (this->has_validityperiod()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *validityperiod_);
  }

  // uint32 BlockHeight = 2;
  if (this->blockheight() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_blockheight());
  }

  // uint32 SignatureAlgorithm = 4;
  if (this->signaturealgorithm() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_signaturealgorithm());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OracleSignatureField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.OracleSignatureField)
  GOOGLE_DCHECK_NE(&from, this);
  const OracleSignatureField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OracleSignatureField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.OracleSignatureField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.OracleSignatureField)
    MergeFrom(*source);
  }
}

void OracleSignatureField::MergeFrom(const OracleSignatureField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.OracleSignatureField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oracleurl().size() > 0) {
    _internal_set_oracleurl(from._internal_oracleurl());
  }
  if (from.signature().size() > 0) {
    _internal_set_signature(from._internal_signature());
  }
  if (from.has_validityperiod()) {
    _internal_mutable_validityperiod()->::messages::PeriodField::MergeFrom(from._internal_validityperiod());
  }
  if (from.blockheight() != 0) {
    _internal_set_blockheight(from._internal_blockheight());
  }
  if (from.signaturealgorithm() != 0) {
    _internal_set_signaturealgorithm(from._internal_signaturealgorithm());
  }
}

void OracleSignatureField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.OracleSignatureField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OracleSignatureField::CopyFrom(const OracleSignatureField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.OracleSignatureField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OracleSignatureField::IsInitialized() const {
  return true;
}

void OracleSignatureField::InternalSwap(OracleSignatureField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  oracleurl_.Swap(&other->oracleurl_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  signature_.Swap(&other->signature_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OracleSignatureField, signaturealgorithm_)
      + sizeof(OracleSignatureField::signaturealgorithm_)
      - PROTOBUF_FIELD_OFFSET(OracleSignatureField, validityperiod_)>(
          reinterpret_cast<char*>(&validityperiod_),
          reinterpret_cast<char*>(&other->validityperiod_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OracleSignatureField::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OutpointField::InitAsDefaultInstance() {
}
class OutpointField::_Internal {
 public:
};

OutpointField::OutpointField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.OutpointField)
}
OutpointField::OutpointField(const OutpointField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  txid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_txid().empty()) {
    txid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_txid(),
      GetArena());
  }
  outputindex_ = from.outputindex_;
  // @@protoc_insertion_point(copy_constructor:messages.OutpointField)
}

void OutpointField::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OutpointField_messages_2eproto.base);
  txid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  outputindex_ = 0u;
}

OutpointField::~OutpointField() {
  // @@protoc_insertion_point(destructor:messages.OutpointField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OutpointField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  txid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OutpointField::ArenaDtor(void* object) {
  OutpointField* _this = reinterpret_cast< OutpointField* >(object);
  (void)_this;
}
void OutpointField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OutpointField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OutpointField& OutpointField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OutpointField_messages_2eproto.base);
  return *internal_default_instance();
}


void OutpointField::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.OutpointField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  outputindex_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OutpointField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes TxId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_txid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 OutputIndex = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          outputindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OutpointField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.OutpointField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes TxId = 1;
  if (this->txid().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_txid(), target);
  }

  // uint32 OutputIndex = 2;
  if (this->outputindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_outputindex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.OutpointField)
  return target;
}

size_t OutpointField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.OutpointField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes TxId = 1;
  if (this->txid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_txid());
  }

  // uint32 OutputIndex = 2;
  if (this->outputindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_outputindex());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OutpointField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.OutpointField)
  GOOGLE_DCHECK_NE(&from, this);
  const OutpointField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OutpointField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.OutpointField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.OutpointField)
    MergeFrom(*source);
  }
}

void OutpointField::MergeFrom(const OutpointField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.OutpointField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.txid().size() > 0) {
    _internal_set_txid(from._internal_txid());
  }
  if (from.outputindex() != 0) {
    _internal_set_outputindex(from._internal_outputindex());
  }
}

void OutpointField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.OutpointField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutpointField::CopyFrom(const OutpointField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.OutpointField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutpointField::IsInitialized() const {
  return true;
}

void OutpointField::InternalSwap(OutpointField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  txid_.Swap(&other->txid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(outputindex_, other->outputindex_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OutpointField::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OutputTagField::InitAsDefaultInstance() {
}
class OutputTagField::_Internal {
 public:
};

OutputTagField::OutputTagField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.OutputTagField)
}
OutputTagField::OutputTagField(const OutputTagField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tag().empty()) {
    tag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_tag(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:messages.OutputTagField)
}

void OutputTagField::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OutputTagField_messages_2eproto.base);
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

OutputTagField::~OutputTagField() {
  // @@protoc_insertion_point(destructor:messages.OutputTagField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OutputTagField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  tag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OutputTagField::ArenaDtor(void* object) {
  OutputTagField* _this = reinterpret_cast< OutputTagField* >(object);
  (void)_this;
}
void OutputTagField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OutputTagField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OutputTagField& OutputTagField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OutputTagField_messages_2eproto.base);
  return *internal_default_instance();
}


void OutputTagField::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.OutputTagField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tag_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OutputTagField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string Tag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_tag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.OutputTagField.Tag"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OutputTagField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.OutputTagField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Tag = 1;
  if (this->tag().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tag().data(), static_cast<int>(this->_internal_tag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.OutputTagField.Tag");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.OutputTagField)
  return target;
}

size_t OutputTagField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.OutputTagField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Tag = 1;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tag());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OutputTagField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.OutputTagField)
  GOOGLE_DCHECK_NE(&from, this);
  const OutputTagField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OutputTagField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.OutputTagField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.OutputTagField)
    MergeFrom(*source);
  }
}

void OutputTagField::MergeFrom(const OutputTagField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.OutputTagField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tag().size() > 0) {
    _internal_set_tag(from._internal_tag());
  }
}

void OutputTagField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.OutputTagField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutputTagField::CopyFrom(const OutputTagField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.OutputTagField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutputTagField::IsInitialized() const {
  return true;
}

void OutputTagField::InternalSwap(OutputTagField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tag_.Swap(&other->tag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata OutputTagField::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PaymailProofField::InitAsDefaultInstance() {
  ::messages::_PaymailProofField_default_instance_._instance.get_mutable()->oraclesignature_ = const_cast< ::messages::OracleSignatureField*>(
      ::messages::OracleSignatureField::internal_default_instance());
}
class PaymailProofField::_Internal {
 public:
  static const ::messages::OracleSignatureField& oraclesignature(const PaymailProofField* msg);
};

const ::messages::OracleSignatureField&
PaymailProofField::_Internal::oraclesignature(const PaymailProofField* msg) {
  return *msg->oraclesignature_;
}
PaymailProofField::PaymailProofField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.PaymailProofField)
}
PaymailProofField::PaymailProofField(const PaymailProofField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_userid().empty()) {
    userid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_userid(),
      GetArena());
  }
  handle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_handle().empty()) {
    handle_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_handle(),
      GetArena());
  }
  if (from._internal_has_oraclesignature()) {
    oraclesignature_ = new ::messages::OracleSignatureField(*from.oraclesignature_);
  } else {
    oraclesignature_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:messages.PaymailProofField)
}

void PaymailProofField::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PaymailProofField_messages_2eproto.base);
  userid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  handle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oraclesignature_ = nullptr;
}

PaymailProofField::~PaymailProofField() {
  // @@protoc_insertion_point(destructor:messages.PaymailProofField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaymailProofField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  userid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  handle_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete oraclesignature_;
}

void PaymailProofField::ArenaDtor(void* object) {
  PaymailProofField* _this = reinterpret_cast< PaymailProofField* >(object);
  (void)_this;
}
void PaymailProofField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymailProofField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PaymailProofField& PaymailProofField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PaymailProofField_messages_2eproto.base);
  return *internal_default_instance();
}


void PaymailProofField::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.PaymailProofField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  handle_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && oraclesignature_ != nullptr) {
    delete oraclesignature_;
  }
  oraclesignature_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymailProofField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes UserID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_userid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Handle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_handle();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messages.PaymailProofField.Handle"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .messages.OracleSignatureField OracleSignature = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_oraclesignature(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymailProofField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.PaymailProofField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes UserID = 1;
  if (this->userid().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_userid(), target);
  }

  // string Handle = 2;
  if (this->handle().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_handle().data(), static_cast<int>(this->_internal_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messages.PaymailProofField.Handle");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_handle(), target);
  }

  // .messages.OracleSignatureField OracleSignature = 3;
  if (this->has_oraclesignature()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::oraclesignature(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.PaymailProofField)
  return target;
}

size_t PaymailProofField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.PaymailProofField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes UserID = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_userid());
  }

  // string Handle = 2;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_handle());
  }

  // .messages.OracleSignatureField OracleSignature = 3;
  if (this->has_oraclesignature()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oraclesignature_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaymailProofField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.PaymailProofField)
  GOOGLE_DCHECK_NE(&from, this);
  const PaymailProofField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaymailProofField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.PaymailProofField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.PaymailProofField)
    MergeFrom(*source);
  }
}

void PaymailProofField::MergeFrom(const PaymailProofField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.PaymailProofField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from.handle().size() > 0) {
    _internal_set_handle(from._internal_handle());
  }
  if (from.has_oraclesignature()) {
    _internal_mutable_oraclesignature()->::messages::OracleSignatureField::MergeFrom(from._internal_oraclesignature());
  }
}

void PaymailProofField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.PaymailProofField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymailProofField::CopyFrom(const PaymailProofField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.PaymailProofField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymailProofField::IsInitialized() const {
  return true;
}

void PaymailProofField::InternalSwap(PaymailProofField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  userid_.Swap(&other->userid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  handle_.Swap(&other->handle_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(oraclesignature_, other->oraclesignature_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymailProofField::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PeriodField::InitAsDefaultInstance() {
}
class PeriodField::_Internal {
 public:
};

PeriodField::PeriodField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.PeriodField)
}
PeriodField::PeriodField(const PeriodField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&begin_, &from.begin_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_) -
    reinterpret_cast<char*>(&begin_)) + sizeof(end_));
  // @@protoc_insertion_point(copy_constructor:messages.PeriodField)
}

void PeriodField::SharedCtor() {
  ::memset(&begin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&begin_)) + sizeof(end_));
}

PeriodField::~PeriodField() {
  // @@protoc_insertion_point(destructor:messages.PeriodField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PeriodField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PeriodField::ArenaDtor(void* object) {
  PeriodField* _this = reinterpret_cast< PeriodField* >(object);
  (void)_this;
}
void PeriodField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PeriodField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PeriodField& PeriodField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PeriodField_messages_2eproto.base);
  return *internal_default_instance();
}


void PeriodField::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.PeriodField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&begin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&begin_)) + sizeof(end_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PeriodField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 Begin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          begin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 End = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          end_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PeriodField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.PeriodField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Begin = 1;
  if (this->begin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_begin(), target);
  }

  // uint64 End = 2;
  if (this->end() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_end(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.PeriodField)
  return target;
}

size_t PeriodField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.PeriodField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 Begin = 1;
  if (this->begin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_begin());
  }

  // uint64 End = 2;
  if (this->end() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_end());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PeriodField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.PeriodField)
  GOOGLE_DCHECK_NE(&from, this);
  const PeriodField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PeriodField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.PeriodField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.PeriodField)
    MergeFrom(*source);
  }
}

void PeriodField::MergeFrom(const PeriodField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.PeriodField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.begin() != 0) {
    _internal_set_begin(from._internal_begin());
  }
  if (from.end() != 0) {
    _internal_set_end(from._internal_end());
  }
}

void PeriodField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.PeriodField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PeriodField::CopyFrom(const PeriodField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.PeriodField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PeriodField::IsInitialized() const {
  return true;
}

void PeriodField::InternalSwap(PeriodField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PeriodField, end_)
      + sizeof(PeriodField::end_)
      - PROTOBUF_FIELD_OFFSET(PeriodField, begin_)>(
          reinterpret_cast<char*>(&begin_),
          reinterpret_cast<char*>(&other->begin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PeriodField::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TargetAddressField::InitAsDefaultInstance() {
}
class TargetAddressField::_Internal {
 public:
};

TargetAddressField::TargetAddressField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.TargetAddressField)
}
TargetAddressField::TargetAddressField(const TargetAddressField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_address().empty()) {
    address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_address(),
      GetArena());
  }
  quantity_ = from.quantity_;
  // @@protoc_insertion_point(copy_constructor:messages.TargetAddressField)
}

void TargetAddressField::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TargetAddressField_messages_2eproto.base);
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  quantity_ = PROTOBUF_ULONGLONG(0);
}

TargetAddressField::~TargetAddressField() {
  // @@protoc_insertion_point(destructor:messages.TargetAddressField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TargetAddressField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TargetAddressField::ArenaDtor(void* object) {
  TargetAddressField* _this = reinterpret_cast< TargetAddressField* >(object);
  (void)_this;
}
void TargetAddressField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TargetAddressField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TargetAddressField& TargetAddressField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TargetAddressField_messages_2eproto.base);
  return *internal_default_instance();
}


void TargetAddressField::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.TargetAddressField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  quantity_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TargetAddressField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes Address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 Quantity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          quantity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TargetAddressField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.TargetAddressField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Address = 1;
  if (this->address().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_address(), target);
  }

  // uint64 Quantity = 2;
  if (this->quantity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_quantity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.TargetAddressField)
  return target;
}

size_t TargetAddressField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.TargetAddressField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_address());
  }

  // uint64 Quantity = 2;
  if (this->quantity() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_quantity());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetAddressField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messages.TargetAddressField)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetAddressField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TargetAddressField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messages.TargetAddressField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messages.TargetAddressField)
    MergeFrom(*source);
  }
}

void TargetAddressField::MergeFrom(const TargetAddressField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.TargetAddressField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {
    _internal_set_address(from._internal_address());
  }
  if (from.quantity() != 0) {
    _internal_set_quantity(from._internal_quantity());
  }
}

void TargetAddressField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messages.TargetAddressField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetAddressField::CopyFrom(const TargetAddressField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.TargetAddressField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetAddressField::IsInitialized() const {
  return true;
}

void TargetAddressField::InternalSwap(TargetAddressField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  address_.Swap(&other->address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(quantity_, other->quantity_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TargetAddressField::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace messages
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::messages::PublicMessage* Arena::CreateMaybeMessage< ::messages::PublicMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::PublicMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::PrivateMessage* Arena::CreateMaybeMessage< ::messages::PrivateMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::PrivateMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::RevertedTx* Arena::CreateMaybeMessage< ::messages::RevertedTx >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::RevertedTx >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::Offer* Arena::CreateMaybeMessage< ::messages::Offer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::Offer >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::SignatureRequest* Arena::CreateMaybeMessage< ::messages::SignatureRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::SignatureRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::SettlementRequest* Arena::CreateMaybeMessage< ::messages::SettlementRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::SettlementRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::OutputMetadata* Arena::CreateMaybeMessage< ::messages::OutputMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::OutputMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::Distribution* Arena::CreateMaybeMessage< ::messages::Distribution >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::Distribution >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::InitiateRelationship* Arena::CreateMaybeMessage< ::messages::InitiateRelationship >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::InitiateRelationship >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::PendingAcceptRelationship* Arena::CreateMaybeMessage< ::messages::PendingAcceptRelationship >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::PendingAcceptRelationship >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::AcceptRelationship* Arena::CreateMaybeMessage< ::messages::AcceptRelationship >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::AcceptRelationship >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::RelationshipAmendment* Arena::CreateMaybeMessage< ::messages::RelationshipAmendment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::RelationshipAmendment >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::InitiateThread* Arena::CreateMaybeMessage< ::messages::InitiateThread >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::InitiateThread >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::AdministratorField* Arena::CreateMaybeMessage< ::messages::AdministratorField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::AdministratorField >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::ChannelPartyField* Arena::CreateMaybeMessage< ::messages::ChannelPartyField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::ChannelPartyField >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::DocumentField* Arena::CreateMaybeMessage< ::messages::DocumentField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::DocumentField >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::EntityField* Arena::CreateMaybeMessage< ::messages::EntityField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::EntityField >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::IdentityOracleProofField* Arena::CreateMaybeMessage< ::messages::IdentityOracleProofField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::IdentityOracleProofField >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::ManagerField* Arena::CreateMaybeMessage< ::messages::ManagerField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::ManagerField >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::OracleSignatureField* Arena::CreateMaybeMessage< ::messages::OracleSignatureField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::OracleSignatureField >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::OutpointField* Arena::CreateMaybeMessage< ::messages::OutpointField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::OutpointField >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::OutputTagField* Arena::CreateMaybeMessage< ::messages::OutputTagField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::OutputTagField >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::PaymailProofField* Arena::CreateMaybeMessage< ::messages::PaymailProofField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::PaymailProofField >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::PeriodField* Arena::CreateMaybeMessage< ::messages::PeriodField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::PeriodField >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::TargetAddressField* Arena::CreateMaybeMessage< ::messages::TargetAddressField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messages::TargetAddressField >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
