// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: instruments.proto

#include "instruments.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_instruments_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgeRestrictionField_instruments_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_instruments_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CurrencyValueField_instruments_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_instruments_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FixedCurrencyValueField_instruments_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_instruments_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RateField_instruments_2eproto;
namespace instruments {
class MembershipDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Membership> _instance;
} _Membership_default_instance_;
class CurrencyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Currency> _instance;
} _Currency_default_instance_;
class ShareCommonDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShareCommon> _instance;
} _ShareCommon_default_instance_;
class BondFixedRateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BondFixedRate> _instance;
} _BondFixedRate_default_instance_;
class DiscountCouponDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DiscountCoupon> _instance;
} _DiscountCoupon_default_instance_;
class DeprecatedLoyaltyPointsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeprecatedLoyaltyPoints> _instance;
} _DeprecatedLoyaltyPoints_default_instance_;
class TicketAdmissionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TicketAdmission> _instance;
} _TicketAdmission_default_instance_;
class CasinoChipDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CasinoChip> _instance;
} _CasinoChip_default_instance_;
class InformationServiceLicenseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InformationServiceLicense> _instance;
} _InformationServiceLicense_default_instance_;
class CreditNoteDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreditNote> _instance;
} _CreditNote_default_instance_;
class RewardPointDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RewardPoint> _instance;
} _RewardPoint_default_instance_;
class AgeRestrictionFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AgeRestrictionField> _instance;
} _AgeRestrictionField_default_instance_;
class CurrencyValueFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CurrencyValueField> _instance;
} _CurrencyValueField_default_instance_;
class FixedCurrencyValueFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FixedCurrencyValueField> _instance;
} _FixedCurrencyValueField_default_instance_;
class RateFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RateField> _instance;
} _RateField_default_instance_;
}  // namespace instruments
static void InitDefaultsscc_info_AgeRestrictionField_instruments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::instruments::_AgeRestrictionField_default_instance_;
    new (ptr) ::instruments::AgeRestrictionField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::instruments::AgeRestrictionField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgeRestrictionField_instruments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AgeRestrictionField_instruments_2eproto}, {}};

static void InitDefaultsscc_info_BondFixedRate_instruments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::instruments::_BondFixedRate_default_instance_;
    new (ptr) ::instruments::BondFixedRate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::instruments::BondFixedRate::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_BondFixedRate_instruments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_BondFixedRate_instruments_2eproto}, {
      &scc_info_CurrencyValueField_instruments_2eproto.base,
      &scc_info_RateField_instruments_2eproto.base,
      &scc_info_AgeRestrictionField_instruments_2eproto.base,}};

static void InitDefaultsscc_info_CasinoChip_instruments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::instruments::_CasinoChip_default_instance_;
    new (ptr) ::instruments::CasinoChip();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::instruments::CasinoChip::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CasinoChip_instruments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CasinoChip_instruments_2eproto}, {
      &scc_info_AgeRestrictionField_instruments_2eproto.base,
      &scc_info_CurrencyValueField_instruments_2eproto.base,}};

static void InitDefaultsscc_info_CreditNote_instruments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::instruments::_CreditNote_default_instance_;
    new (ptr) ::instruments::CreditNote();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::instruments::CreditNote::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreditNote_instruments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreditNote_instruments_2eproto}, {
      &scc_info_FixedCurrencyValueField_instruments_2eproto.base,}};

static void InitDefaultsscc_info_Currency_instruments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::instruments::_Currency_default_instance_;
    new (ptr) ::instruments::Currency();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::instruments::Currency::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Currency_instruments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Currency_instruments_2eproto}, {}};

static void InitDefaultsscc_info_CurrencyValueField_instruments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::instruments::_CurrencyValueField_default_instance_;
    new (ptr) ::instruments::CurrencyValueField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::instruments::CurrencyValueField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CurrencyValueField_instruments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CurrencyValueField_instruments_2eproto}, {}};

static void InitDefaultsscc_info_DeprecatedLoyaltyPoints_instruments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::instruments::_DeprecatedLoyaltyPoints_default_instance_;
    new (ptr) ::instruments::DeprecatedLoyaltyPoints();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::instruments::DeprecatedLoyaltyPoints::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeprecatedLoyaltyPoints_instruments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeprecatedLoyaltyPoints_instruments_2eproto}, {
      &scc_info_AgeRestrictionField_instruments_2eproto.base,}};

static void InitDefaultsscc_info_DiscountCoupon_instruments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::instruments::_DiscountCoupon_default_instance_;
    new (ptr) ::instruments::DiscountCoupon();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::instruments::DiscountCoupon::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DiscountCoupon_instruments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DiscountCoupon_instruments_2eproto}, {
      &scc_info_CurrencyValueField_instruments_2eproto.base,}};

static void InitDefaultsscc_info_FixedCurrencyValueField_instruments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::instruments::_FixedCurrencyValueField_default_instance_;
    new (ptr) ::instruments::FixedCurrencyValueField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::instruments::FixedCurrencyValueField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FixedCurrencyValueField_instruments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FixedCurrencyValueField_instruments_2eproto}, {}};

static void InitDefaultsscc_info_InformationServiceLicense_instruments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::instruments::_InformationServiceLicense_default_instance_;
    new (ptr) ::instruments::InformationServiceLicense();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::instruments::InformationServiceLicense::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InformationServiceLicense_instruments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InformationServiceLicense_instruments_2eproto}, {
      &scc_info_AgeRestrictionField_instruments_2eproto.base,}};

static void InitDefaultsscc_info_Membership_instruments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::instruments::_Membership_default_instance_;
    new (ptr) ::instruments::Membership();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::instruments::Membership::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Membership_instruments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Membership_instruments_2eproto}, {
      &scc_info_AgeRestrictionField_instruments_2eproto.base,}};

static void InitDefaultsscc_info_RateField_instruments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::instruments::_RateField_default_instance_;
    new (ptr) ::instruments::RateField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::instruments::RateField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RateField_instruments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RateField_instruments_2eproto}, {}};

static void InitDefaultsscc_info_RewardPoint_instruments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::instruments::_RewardPoint_default_instance_;
    new (ptr) ::instruments::RewardPoint();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::instruments::RewardPoint::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RewardPoint_instruments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RewardPoint_instruments_2eproto}, {
      &scc_info_AgeRestrictionField_instruments_2eproto.base,}};

static void InitDefaultsscc_info_ShareCommon_instruments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::instruments::_ShareCommon_default_instance_;
    new (ptr) ::instruments::ShareCommon();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::instruments::ShareCommon::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ShareCommon_instruments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ShareCommon_instruments_2eproto}, {}};

static void InitDefaultsscc_info_TicketAdmission_instruments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::instruments::_TicketAdmission_default_instance_;
    new (ptr) ::instruments::TicketAdmission();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::instruments::TicketAdmission::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TicketAdmission_instruments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TicketAdmission_instruments_2eproto}, {
      &scc_info_AgeRestrictionField_instruments_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_instruments_2eproto[15];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_instruments_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_instruments_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_instruments_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instruments::Membership, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::instruments::Membership, agerestriction_),
  PROTOBUF_FIELD_OFFSET(::instruments::Membership, validfrom_),
  PROTOBUF_FIELD_OFFSET(::instruments::Membership, expirationtimestamp_),
  PROTOBUF_FIELD_OFFSET(::instruments::Membership, id_),
  PROTOBUF_FIELD_OFFSET(::instruments::Membership, membershipclass_),
  PROTOBUF_FIELD_OFFSET(::instruments::Membership, roletype_),
  PROTOBUF_FIELD_OFFSET(::instruments::Membership, membershiptype_),
  PROTOBUF_FIELD_OFFSET(::instruments::Membership, description_),
  PROTOBUF_FIELD_OFFSET(::instruments::Membership, transferspermitted_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instruments::Currency, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::instruments::Currency, currencycode_),
  PROTOBUF_FIELD_OFFSET(::instruments::Currency, monetaryauthority_),
  PROTOBUF_FIELD_OFFSET(::instruments::Currency, precision_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instruments::ShareCommon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::instruments::ShareCommon, ticker_),
  PROTOBUF_FIELD_OFFSET(::instruments::ShareCommon, isin_),
  PROTOBUF_FIELD_OFFSET(::instruments::ShareCommon, description_),
  PROTOBUF_FIELD_OFFSET(::instruments::ShareCommon, transferspermitted_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instruments::BondFixedRate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::instruments::BondFixedRate, name_),
  PROTOBUF_FIELD_OFFSET(::instruments::BondFixedRate, bondtype_),
  PROTOBUF_FIELD_OFFSET(::instruments::BondFixedRate, isin_),
  PROTOBUF_FIELD_OFFSET(::instruments::BondFixedRate, collateral_),
  PROTOBUF_FIELD_OFFSET(::instruments::BondFixedRate, parvalue_),
  PROTOBUF_FIELD_OFFSET(::instruments::BondFixedRate, interestrate_),
  PROTOBUF_FIELD_OFFSET(::instruments::BondFixedRate, interestpaymentinitialdate_),
  PROTOBUF_FIELD_OFFSET(::instruments::BondFixedRate, interestpaymentdatedeltas_),
  PROTOBUF_FIELD_OFFSET(::instruments::BondFixedRate, latepaymentpenaltyrate_),
  PROTOBUF_FIELD_OFFSET(::instruments::BondFixedRate, latepaymentwindow_),
  PROTOBUF_FIELD_OFFSET(::instruments::BondFixedRate, latepaymentpenaltyperiod_),
  PROTOBUF_FIELD_OFFSET(::instruments::BondFixedRate, maturitydate_),
  PROTOBUF_FIELD_OFFSET(::instruments::BondFixedRate, agerestriction_),
  PROTOBUF_FIELD_OFFSET(::instruments::BondFixedRate, transferspermitted_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instruments::DiscountCoupon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::instruments::DiscountCoupon, redeemingentity_),
  PROTOBUF_FIELD_OFFSET(::instruments::DiscountCoupon, validfromtimestamp_),
  PROTOBUF_FIELD_OFFSET(::instruments::DiscountCoupon, expirationtimestamp_),
  PROTOBUF_FIELD_OFFSET(::instruments::DiscountCoupon, couponname_),
  PROTOBUF_FIELD_OFFSET(::instruments::DiscountCoupon, transferspermitted_),
  PROTOBUF_FIELD_OFFSET(::instruments::DiscountCoupon, facevalue_),
  PROTOBUF_FIELD_OFFSET(::instruments::DiscountCoupon, redemptionvenue_),
  PROTOBUF_FIELD_OFFSET(::instruments::DiscountCoupon, details_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instruments::DeprecatedLoyaltyPoints, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::instruments::DeprecatedLoyaltyPoints, agerestriction_),
  PROTOBUF_FIELD_OFFSET(::instruments::DeprecatedLoyaltyPoints, programname_),
  PROTOBUF_FIELD_OFFSET(::instruments::DeprecatedLoyaltyPoints, expirationtimestamp_),
  PROTOBUF_FIELD_OFFSET(::instruments::DeprecatedLoyaltyPoints, details_),
  PROTOBUF_FIELD_OFFSET(::instruments::DeprecatedLoyaltyPoints, transferspermitted_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instruments::TicketAdmission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::instruments::TicketAdmission, agerestriction_),
  PROTOBUF_FIELD_OFFSET(::instruments::TicketAdmission, venue_),
  PROTOBUF_FIELD_OFFSET(::instruments::TicketAdmission, area_),
  PROTOBUF_FIELD_OFFSET(::instruments::TicketAdmission, seat_),
  PROTOBUF_FIELD_OFFSET(::instruments::TicketAdmission, eventstarttimestamp_),
  PROTOBUF_FIELD_OFFSET(::instruments::TicketAdmission, eventname_),
  PROTOBUF_FIELD_OFFSET(::instruments::TicketAdmission, transferspermitted_),
  PROTOBUF_FIELD_OFFSET(::instruments::TicketAdmission, details_),
  PROTOBUF_FIELD_OFFSET(::instruments::TicketAdmission, section_),
  PROTOBUF_FIELD_OFFSET(::instruments::TicketAdmission, row_),
  PROTOBUF_FIELD_OFFSET(::instruments::TicketAdmission, eventendtimestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instruments::CasinoChip, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::instruments::CasinoChip, usetype_),
  PROTOBUF_FIELD_OFFSET(::instruments::CasinoChip, agerestriction_),
  PROTOBUF_FIELD_OFFSET(::instruments::CasinoChip, expirationtimestamp_),
  PROTOBUF_FIELD_OFFSET(::instruments::CasinoChip, transferspermitted_),
  PROTOBUF_FIELD_OFFSET(::instruments::CasinoChip, casinoname_),
  PROTOBUF_FIELD_OFFSET(::instruments::CasinoChip, facevalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instruments::InformationServiceLicense, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::instruments::InformationServiceLicense, agerestriction_),
  PROTOBUF_FIELD_OFFSET(::instruments::InformationServiceLicense, expirationtimestamp_),
  PROTOBUF_FIELD_OFFSET(::instruments::InformationServiceLicense, servicename_),
  PROTOBUF_FIELD_OFFSET(::instruments::InformationServiceLicense, transferspermitted_),
  PROTOBUF_FIELD_OFFSET(::instruments::InformationServiceLicense, url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instruments::CreditNote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::instruments::CreditNote, facevalue_),
  PROTOBUF_FIELD_OFFSET(::instruments::CreditNote, expirationtimestamp_),
  PROTOBUF_FIELD_OFFSET(::instruments::CreditNote, transferspermitted_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instruments::RewardPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::instruments::RewardPoint, agerestriction_),
  PROTOBUF_FIELD_OFFSET(::instruments::RewardPoint, programname_),
  PROTOBUF_FIELD_OFFSET(::instruments::RewardPoint, expirationtimestamp_),
  PROTOBUF_FIELD_OFFSET(::instruments::RewardPoint, details_),
  PROTOBUF_FIELD_OFFSET(::instruments::RewardPoint, transferspermitted_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instruments::AgeRestrictionField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::instruments::AgeRestrictionField, lower_),
  PROTOBUF_FIELD_OFFSET(::instruments::AgeRestrictionField, upper_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instruments::CurrencyValueField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::instruments::CurrencyValueField, value_),
  PROTOBUF_FIELD_OFFSET(::instruments::CurrencyValueField, currencycode_),
  PROTOBUF_FIELD_OFFSET(::instruments::CurrencyValueField, precision_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instruments::FixedCurrencyValueField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::instruments::FixedCurrencyValueField, value_),
  PROTOBUF_FIELD_OFFSET(::instruments::FixedCurrencyValueField, currencycode_),
  PROTOBUF_FIELD_OFFSET(::instruments::FixedCurrencyValueField, precision_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instruments::RateField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::instruments::RateField, precision_),
  PROTOBUF_FIELD_OFFSET(::instruments::RateField, value_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::instruments::Membership)},
  { 14, -1, sizeof(::instruments::Currency)},
  { 22, -1, sizeof(::instruments::ShareCommon)},
  { 31, -1, sizeof(::instruments::BondFixedRate)},
  { 50, -1, sizeof(::instruments::DiscountCoupon)},
  { 63, -1, sizeof(::instruments::DeprecatedLoyaltyPoints)},
  { 73, -1, sizeof(::instruments::TicketAdmission)},
  { 89, -1, sizeof(::instruments::CasinoChip)},
  { 100, -1, sizeof(::instruments::InformationServiceLicense)},
  { 110, -1, sizeof(::instruments::CreditNote)},
  { 118, -1, sizeof(::instruments::RewardPoint)},
  { 128, -1, sizeof(::instruments::AgeRestrictionField)},
  { 135, -1, sizeof(::instruments::CurrencyValueField)},
  { 143, -1, sizeof(::instruments::FixedCurrencyValueField)},
  { 151, -1, sizeof(::instruments::RateField)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::instruments::_Membership_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::instruments::_Currency_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::instruments::_ShareCommon_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::instruments::_BondFixedRate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::instruments::_DiscountCoupon_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::instruments::_DeprecatedLoyaltyPoints_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::instruments::_TicketAdmission_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::instruments::_CasinoChip_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::instruments::_InformationServiceLicense_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::instruments::_CreditNote_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::instruments::_RewardPoint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::instruments::_AgeRestrictionField_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::instruments::_CurrencyValueField_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::instruments::_FixedCurrencyValueField_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::instruments::_RateField_default_instance_),
};

const char descriptor_table_protodef_instruments_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021instruments.proto\022\013instruments\"\366\001\n\nMem"
  "bership\0228\n\016AgeRestriction\030\001 \001(\0132 .instru"
  "ments.AgeRestrictionField\022\021\n\tValidFrom\030\002"
  " \001(\004\022\033\n\023ExpirationTimestamp\030\003 \001(\004\022\n\n\002ID\030"
  "\004 \001(\t\022\027\n\017MembershipClass\030\005 \001(\t\022\020\n\010RoleTy"
  "pe\030\006 \001(\t\022\026\n\016MembershipType\030\007 \001(\t\022\023\n\013Desc"
  "ription\030\010 \001(\t\022\032\n\022TransfersPermitted\030\t \001("
  "\010\"T\n\010Currency\022\024\n\014CurrencyCode\030\001 \001(\t\022\031\n\021M"
  "onetaryAuthority\030\002 \001(\t\022\021\n\tPrecision\030\004 \001("
  "\004J\004\010\003\020\004\"\\\n\013ShareCommon\022\016\n\006Ticker\030\001 \001(\t\022\014"
  "\n\004ISIN\030\002 \001(\t\022\023\n\013Description\030\003 \001(\t\022\032\n\022Tra"
  "nsfersPermitted\030\004 \001(\010\"\332\003\n\rBondFixedRate\022"
  "\014\n\004Name\030\001 \001(\t\022\020\n\010BondType\030\002 \001(\t\022\014\n\004ISIN\030"
  "\003 \001(\t\022\022\n\nCollateral\030\004 \001(\t\0221\n\010ParValue\030\005 "
  "\001(\0132\037.instruments.CurrencyValueField\022,\n\014"
  "InterestRate\030\006 \001(\0132\026.instruments.RateFie"
  "ld\022\"\n\032InterestPaymentInitialDate\030\007 \001(\004\022!"
  "\n\031InterestPaymentDateDeltas\030\010 \003(\004\0226\n\026Lat"
  "ePaymentPenaltyRate\030\t \001(\0132\026.instruments."
  "RateField\022\031\n\021LatePaymentWindow\030\n \001(\004\022 \n\030"
  "LatePaymentPenaltyPeriod\030\013 \001(\004\022\024\n\014Maturi"
  "tyDate\030\014 \001(\004\0228\n\016AgeRestriction\030\r \001(\0132 .i"
  "nstruments.AgeRestrictionField\022\032\n\022Transf"
  "ersPermitted\030\016 \001(\010\"\202\002\n\016DiscountCoupon\022\027\n"
  "\017RedeemingEntity\030\001 \001(\t\022\032\n\022ValidFromTimes"
  "tamp\030\002 \001(\004\022\033\n\023ExpirationTimestamp\030\003 \001(\004\022"
  "\022\n\nCouponName\030\006 \001(\t\022\032\n\022TransfersPermitte"
  "d\030\010 \001(\010\0222\n\tFaceValue\030\t \001(\0132\037.instruments"
  ".CurrencyValueField\022\027\n\017RedemptionVenue\030\n"
  " \001(\t\022\017\n\007Details\030\013 \001(\tJ\004\010\004\020\005J\004\010\005\020\006J\004\010\007\020\010\""
  "\270\001\n\027DeprecatedLoyaltyPoints\0228\n\016AgeRestri"
  "ction\030\001 \001(\0132 .instruments.AgeRestriction"
  "Field\022\023\n\013ProgramName\030\002 \001(\t\022\033\n\023Expiration"
  "Timestamp\030\004 \001(\004\022\017\n\007Details\030\005 \001(\t\022\032\n\022Tran"
  "sfersPermitted\030\006 \001(\010J\004\010\003\020\004\"\244\002\n\017TicketAdm"
  "ission\0228\n\016AgeRestriction\030\001 \001(\0132 .instrum"
  "ents.AgeRestrictionField\022\r\n\005Venue\030\003 \001(\t\022"
  "\014\n\004Area\030\005 \001(\t\022\014\n\004Seat\030\006 \001(\t\022\033\n\023EventStar"
  "tTimestamp\030\007 \001(\004\022\021\n\tEventName\030\n \001(\t\022\032\n\022T"
  "ransfersPermitted\030\013 \001(\010\022\017\n\007Details\030\014 \001(\t"
  "\022\017\n\007Section\030\r \001(\t\022\013\n\003Row\030\016 \001(\t\022\031\n\021EventE"
  "ndTimestamp\030\017 \001(\004J\004\010\002\020\003J\004\010\004\020\005J\004\010\010\020\tJ\004\010\t\020"
  "\n\"\352\001\n\nCasinoChip\022\017\n\007UseType\030\002 \001(\t\0228\n\016Age"
  "Restriction\030\003 \001(\0132 .instruments.AgeRestr"
  "ictionField\022\033\n\023ExpirationTimestamp\030\005 \001(\004"
  "\022\032\n\022TransfersPermitted\030\007 \001(\010\022\022\n\nCasinoNa"
  "me\030\010 \001(\t\0222\n\tFaceValue\030\t \001(\0132\037.instrument"
  "s.CurrencyValueFieldJ\004\010\001\020\002J\004\010\004\020\005J\004\010\006\020\007\"\260"
  "\001\n\031InformationServiceLicense\0228\n\016AgeRestr"
  "iction\030\001 \001(\0132 .instruments.AgeRestrictio"
  "nField\022\033\n\023ExpirationTimestamp\030\002 \001(\004\022\023\n\013S"
  "erviceName\030\003 \001(\t\022\032\n\022TransfersPermitted\030\004"
  " \001(\010\022\013\n\003URL\030\005 \001(\t\"\204\001\n\nCreditNote\0227\n\tFace"
  "Value\030\002 \001(\0132$.instruments.FixedCurrencyV"
  "alueField\022\033\n\023ExpirationTimestamp\030\003 \001(\004\022\032"
  "\n\022TransfersPermitted\030\004 \001(\010J\004\010\001\020\002\"\254\001\n\013Rew"
  "ardPoint\0228\n\016AgeRestriction\030\001 \001(\0132 .instr"
  "uments.AgeRestrictionField\022\023\n\013ProgramNam"
  "e\030\002 \001(\t\022\033\n\023ExpirationTimestamp\030\004 \001(\004\022\017\n\007"
  "Details\030\005 \001(\t\022\032\n\022TransfersPermitted\030\006 \001("
  "\010J\004\010\003\020\004\"3\n\023AgeRestrictionField\022\r\n\005Lower\030"
  "\001 \001(\r\022\r\n\005Upper\030\002 \001(\r\"L\n\022CurrencyValueFie"
  "ld\022\r\n\005Value\030\001 \001(\004\022\024\n\014CurrencyCode\030\002 \001(\t\022"
  "\021\n\tPrecision\030\003 \001(\r\"Q\n\027FixedCurrencyValue"
  "Field\022\r\n\005Value\030\001 \001(\004\022\024\n\014CurrencyCode\030\002 \001"
  "(\t\022\021\n\tPrecision\030\003 \001(\r\"-\n\tRateField\022\021\n\tPr"
  "ecision\030\001 \001(\r\022\r\n\005Value\030\002 \001(\004B<Z:github.c"
  "om/tokenized/specification/dist/golang/i"
  "nstrumentsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_instruments_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_instruments_2eproto_sccs[15] = {
  &scc_info_AgeRestrictionField_instruments_2eproto.base,
  &scc_info_BondFixedRate_instruments_2eproto.base,
  &scc_info_CasinoChip_instruments_2eproto.base,
  &scc_info_CreditNote_instruments_2eproto.base,
  &scc_info_Currency_instruments_2eproto.base,
  &scc_info_CurrencyValueField_instruments_2eproto.base,
  &scc_info_DeprecatedLoyaltyPoints_instruments_2eproto.base,
  &scc_info_DiscountCoupon_instruments_2eproto.base,
  &scc_info_FixedCurrencyValueField_instruments_2eproto.base,
  &scc_info_InformationServiceLicense_instruments_2eproto.base,
  &scc_info_Membership_instruments_2eproto.base,
  &scc_info_RateField_instruments_2eproto.base,
  &scc_info_RewardPoint_instruments_2eproto.base,
  &scc_info_ShareCommon_instruments_2eproto.base,
  &scc_info_TicketAdmission_instruments_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_instruments_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_instruments_2eproto = {
  false, false, descriptor_table_protodef_instruments_2eproto, "instruments.proto", 2738,
  &descriptor_table_instruments_2eproto_once, descriptor_table_instruments_2eproto_sccs, descriptor_table_instruments_2eproto_deps, 15, 0,
  schemas, file_default_instances, TableStruct_instruments_2eproto::offsets,
  file_level_metadata_instruments_2eproto, 15, file_level_enum_descriptors_instruments_2eproto, file_level_service_descriptors_instruments_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_instruments_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_instruments_2eproto)), true);
namespace instruments {

// ===================================================================

void Membership::InitAsDefaultInstance() {
  ::instruments::_Membership_default_instance_._instance.get_mutable()->agerestriction_ = const_cast< ::instruments::AgeRestrictionField*>(
      ::instruments::AgeRestrictionField::internal_default_instance());
}
class Membership::_Internal {
 public:
  static const ::instruments::AgeRestrictionField& agerestriction(const Membership* msg);
};

const ::instruments::AgeRestrictionField&
Membership::_Internal::agerestriction(const Membership* msg) {
  return *msg->agerestriction_;
}
Membership::Membership(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:instruments.Membership)
}
Membership::Membership(const Membership& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  membershipclass_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_membershipclass().empty()) {
    membershipclass_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_membershipclass(),
      GetArena());
  }
  roletype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_roletype().empty()) {
    roletype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_roletype(),
      GetArena());
  }
  membershiptype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_membershiptype().empty()) {
    membershiptype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_membershiptype(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  if (from._internal_has_agerestriction()) {
    agerestriction_ = new ::instruments::AgeRestrictionField(*from.agerestriction_);
  } else {
    agerestriction_ = nullptr;
  }
  ::memcpy(&validfrom_, &from.validfrom_,
    static_cast<size_t>(reinterpret_cast<char*>(&transferspermitted_) -
    reinterpret_cast<char*>(&validfrom_)) + sizeof(transferspermitted_));
  // @@protoc_insertion_point(copy_constructor:instruments.Membership)
}

void Membership::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Membership_instruments_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  membershipclass_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roletype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  membershiptype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&agerestriction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transferspermitted_) -
      reinterpret_cast<char*>(&agerestriction_)) + sizeof(transferspermitted_));
}

Membership::~Membership() {
  // @@protoc_insertion_point(destructor:instruments.Membership)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Membership::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  membershipclass_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roletype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  membershiptype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete agerestriction_;
}

void Membership::ArenaDtor(void* object) {
  Membership* _this = reinterpret_cast< Membership* >(object);
  (void)_this;
}
void Membership::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Membership::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Membership& Membership::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Membership_instruments_2eproto.base);
  return *internal_default_instance();
}


void Membership::Clear() {
// @@protoc_insertion_point(message_clear_start:instruments.Membership)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  membershipclass_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roletype_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  membershiptype_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && agerestriction_ != nullptr) {
    delete agerestriction_;
  }
  agerestriction_ = nullptr;
  ::memset(&validfrom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transferspermitted_) -
      reinterpret_cast<char*>(&validfrom_)) + sizeof(transferspermitted_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Membership::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .instruments.AgeRestrictionField AgeRestriction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_agerestriction(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 ValidFrom = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          validfrom_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 ExpirationTimestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          expirationtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ID = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.Membership.ID"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string MembershipClass = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_membershipclass();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.Membership.MembershipClass"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string RoleType = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_roletype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.Membership.RoleType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string MembershipType = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_membershiptype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.Membership.MembershipType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Description = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.Membership.Description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool TransfersPermitted = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          transferspermitted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Membership::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instruments.Membership)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .instruments.AgeRestrictionField AgeRestriction = 1;
  if (this->has_agerestriction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::agerestriction(this), target, stream);
  }

  // uint64 ValidFrom = 2;
  if (this->validfrom() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_validfrom(), target);
  }

  // uint64 ExpirationTimestamp = 3;
  if (this->expirationtimestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_expirationtimestamp(), target);
  }

  // string ID = 4;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.Membership.ID");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_id(), target);
  }

  // string MembershipClass = 5;
  if (this->membershipclass().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_membershipclass().data(), static_cast<int>(this->_internal_membershipclass().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.Membership.MembershipClass");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_membershipclass(), target);
  }

  // string RoleType = 6;
  if (this->roletype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roletype().data(), static_cast<int>(this->_internal_roletype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.Membership.RoleType");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_roletype(), target);
  }

  // string MembershipType = 7;
  if (this->membershiptype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_membershiptype().data(), static_cast<int>(this->_internal_membershiptype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.Membership.MembershipType");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_membershiptype(), target);
  }

  // string Description = 8;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.Membership.Description");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_description(), target);
  }

  // bool TransfersPermitted = 9;
  if (this->transferspermitted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_transferspermitted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instruments.Membership)
  return target;
}

size_t Membership::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instruments.Membership)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ID = 4;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string MembershipClass = 5;
  if (this->membershipclass().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_membershipclass());
  }

  // string RoleType = 6;
  if (this->roletype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roletype());
  }

  // string MembershipType = 7;
  if (this->membershiptype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_membershiptype());
  }

  // string Description = 8;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .instruments.AgeRestrictionField AgeRestriction = 1;
  if (this->has_agerestriction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *agerestriction_);
  }

  // uint64 ValidFrom = 2;
  if (this->validfrom() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_validfrom());
  }

  // uint64 ExpirationTimestamp = 3;
  if (this->expirationtimestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_expirationtimestamp());
  }

  // bool TransfersPermitted = 9;
  if (this->transferspermitted() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Membership::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:instruments.Membership)
  GOOGLE_DCHECK_NE(&from, this);
  const Membership* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Membership>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:instruments.Membership)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:instruments.Membership)
    MergeFrom(*source);
  }
}

void Membership::MergeFrom(const Membership& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:instruments.Membership)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.membershipclass().size() > 0) {
    _internal_set_membershipclass(from._internal_membershipclass());
  }
  if (from.roletype().size() > 0) {
    _internal_set_roletype(from._internal_roletype());
  }
  if (from.membershiptype().size() > 0) {
    _internal_set_membershiptype(from._internal_membershiptype());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.has_agerestriction()) {
    _internal_mutable_agerestriction()->::instruments::AgeRestrictionField::MergeFrom(from._internal_agerestriction());
  }
  if (from.validfrom() != 0) {
    _internal_set_validfrom(from._internal_validfrom());
  }
  if (from.expirationtimestamp() != 0) {
    _internal_set_expirationtimestamp(from._internal_expirationtimestamp());
  }
  if (from.transferspermitted() != 0) {
    _internal_set_transferspermitted(from._internal_transferspermitted());
  }
}

void Membership::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:instruments.Membership)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Membership::CopyFrom(const Membership& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instruments.Membership)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Membership::IsInitialized() const {
  return true;
}

void Membership::InternalSwap(Membership* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  membershipclass_.Swap(&other->membershipclass_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  roletype_.Swap(&other->roletype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  membershiptype_.Swap(&other->membershiptype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Membership, transferspermitted_)
      + sizeof(Membership::transferspermitted_)
      - PROTOBUF_FIELD_OFFSET(Membership, agerestriction_)>(
          reinterpret_cast<char*>(&agerestriction_),
          reinterpret_cast<char*>(&other->agerestriction_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Membership::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Currency::InitAsDefaultInstance() {
}
class Currency::_Internal {
 public:
};

Currency::Currency(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:instruments.Currency)
}
Currency::Currency(const Currency& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  currencycode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_currencycode().empty()) {
    currencycode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_currencycode(),
      GetArena());
  }
  monetaryauthority_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_monetaryauthority().empty()) {
    monetaryauthority_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_monetaryauthority(),
      GetArena());
  }
  precision_ = from.precision_;
  // @@protoc_insertion_point(copy_constructor:instruments.Currency)
}

void Currency::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Currency_instruments_2eproto.base);
  currencycode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  monetaryauthority_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  precision_ = PROTOBUF_ULONGLONG(0);
}

Currency::~Currency() {
  // @@protoc_insertion_point(destructor:instruments.Currency)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Currency::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  currencycode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  monetaryauthority_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Currency::ArenaDtor(void* object) {
  Currency* _this = reinterpret_cast< Currency* >(object);
  (void)_this;
}
void Currency::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Currency::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Currency& Currency::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Currency_instruments_2eproto.base);
  return *internal_default_instance();
}


void Currency::Clear() {
// @@protoc_insertion_point(message_clear_start:instruments.Currency)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currencycode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  monetaryauthority_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  precision_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Currency::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string CurrencyCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_currencycode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.Currency.CurrencyCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string MonetaryAuthority = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_monetaryauthority();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.Currency.MonetaryAuthority"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 Precision = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          precision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Currency::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instruments.Currency)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string CurrencyCode = 1;
  if (this->currencycode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currencycode().data(), static_cast<int>(this->_internal_currencycode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.Currency.CurrencyCode");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_currencycode(), target);
  }

  // string MonetaryAuthority = 2;
  if (this->monetaryauthority().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_monetaryauthority().data(), static_cast<int>(this->_internal_monetaryauthority().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.Currency.MonetaryAuthority");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_monetaryauthority(), target);
  }

  // uint64 Precision = 4;
  if (this->precision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_precision(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instruments.Currency)
  return target;
}

size_t Currency::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instruments.Currency)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string CurrencyCode = 1;
  if (this->currencycode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currencycode());
  }

  // string MonetaryAuthority = 2;
  if (this->monetaryauthority().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_monetaryauthority());
  }

  // uint64 Precision = 4;
  if (this->precision() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_precision());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Currency::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:instruments.Currency)
  GOOGLE_DCHECK_NE(&from, this);
  const Currency* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Currency>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:instruments.Currency)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:instruments.Currency)
    MergeFrom(*source);
  }
}

void Currency::MergeFrom(const Currency& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:instruments.Currency)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.currencycode().size() > 0) {
    _internal_set_currencycode(from._internal_currencycode());
  }
  if (from.monetaryauthority().size() > 0) {
    _internal_set_monetaryauthority(from._internal_monetaryauthority());
  }
  if (from.precision() != 0) {
    _internal_set_precision(from._internal_precision());
  }
}

void Currency::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:instruments.Currency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Currency::CopyFrom(const Currency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instruments.Currency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Currency::IsInitialized() const {
  return true;
}

void Currency::InternalSwap(Currency* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  currencycode_.Swap(&other->currencycode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  monetaryauthority_.Swap(&other->monetaryauthority_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(precision_, other->precision_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Currency::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShareCommon::InitAsDefaultInstance() {
}
class ShareCommon::_Internal {
 public:
};

ShareCommon::ShareCommon(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:instruments.ShareCommon)
}
ShareCommon::ShareCommon(const ShareCommon& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ticker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ticker().empty()) {
    ticker_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ticker(),
      GetArena());
  }
  isin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_isin().empty()) {
    isin_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_isin(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  transferspermitted_ = from.transferspermitted_;
  // @@protoc_insertion_point(copy_constructor:instruments.ShareCommon)
}

void ShareCommon::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShareCommon_instruments_2eproto.base);
  ticker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  isin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transferspermitted_ = false;
}

ShareCommon::~ShareCommon() {
  // @@protoc_insertion_point(destructor:instruments.ShareCommon)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShareCommon::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ticker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  isin_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ShareCommon::ArenaDtor(void* object) {
  ShareCommon* _this = reinterpret_cast< ShareCommon* >(object);
  (void)_this;
}
void ShareCommon::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShareCommon::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShareCommon& ShareCommon::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShareCommon_instruments_2eproto.base);
  return *internal_default_instance();
}


void ShareCommon::Clear() {
// @@protoc_insertion_point(message_clear_start:instruments.ShareCommon)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ticker_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  isin_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  transferspermitted_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareCommon::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string Ticker = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ticker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.ShareCommon.Ticker"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ISIN = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_isin();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.ShareCommon.ISIN"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.ShareCommon.Description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool TransfersPermitted = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          transferspermitted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShareCommon::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instruments.ShareCommon)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Ticker = 1;
  if (this->ticker().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ticker().data(), static_cast<int>(this->_internal_ticker().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.ShareCommon.Ticker");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ticker(), target);
  }

  // string ISIN = 2;
  if (this->isin().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_isin().data(), static_cast<int>(this->_internal_isin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.ShareCommon.ISIN");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_isin(), target);
  }

  // string Description = 3;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.ShareCommon.Description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // bool TransfersPermitted = 4;
  if (this->transferspermitted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_transferspermitted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instruments.ShareCommon)
  return target;
}

size_t ShareCommon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instruments.ShareCommon)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Ticker = 1;
  if (this->ticker().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ticker());
  }

  // string ISIN = 2;
  if (this->isin().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_isin());
  }

  // string Description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // bool TransfersPermitted = 4;
  if (this->transferspermitted() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShareCommon::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:instruments.ShareCommon)
  GOOGLE_DCHECK_NE(&from, this);
  const ShareCommon* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShareCommon>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:instruments.ShareCommon)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:instruments.ShareCommon)
    MergeFrom(*source);
  }
}

void ShareCommon::MergeFrom(const ShareCommon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:instruments.ShareCommon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ticker().size() > 0) {
    _internal_set_ticker(from._internal_ticker());
  }
  if (from.isin().size() > 0) {
    _internal_set_isin(from._internal_isin());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.transferspermitted() != 0) {
    _internal_set_transferspermitted(from._internal_transferspermitted());
  }
}

void ShareCommon::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:instruments.ShareCommon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareCommon::CopyFrom(const ShareCommon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instruments.ShareCommon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareCommon::IsInitialized() const {
  return true;
}

void ShareCommon::InternalSwap(ShareCommon* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ticker_.Swap(&other->ticker_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  isin_.Swap(&other->isin_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(transferspermitted_, other->transferspermitted_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareCommon::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BondFixedRate::InitAsDefaultInstance() {
  ::instruments::_BondFixedRate_default_instance_._instance.get_mutable()->parvalue_ = const_cast< ::instruments::CurrencyValueField*>(
      ::instruments::CurrencyValueField::internal_default_instance());
  ::instruments::_BondFixedRate_default_instance_._instance.get_mutable()->interestrate_ = const_cast< ::instruments::RateField*>(
      ::instruments::RateField::internal_default_instance());
  ::instruments::_BondFixedRate_default_instance_._instance.get_mutable()->latepaymentpenaltyrate_ = const_cast< ::instruments::RateField*>(
      ::instruments::RateField::internal_default_instance());
  ::instruments::_BondFixedRate_default_instance_._instance.get_mutable()->agerestriction_ = const_cast< ::instruments::AgeRestrictionField*>(
      ::instruments::AgeRestrictionField::internal_default_instance());
}
class BondFixedRate::_Internal {
 public:
  static const ::instruments::CurrencyValueField& parvalue(const BondFixedRate* msg);
  static const ::instruments::RateField& interestrate(const BondFixedRate* msg);
  static const ::instruments::RateField& latepaymentpenaltyrate(const BondFixedRate* msg);
  static const ::instruments::AgeRestrictionField& agerestriction(const BondFixedRate* msg);
};

const ::instruments::CurrencyValueField&
BondFixedRate::_Internal::parvalue(const BondFixedRate* msg) {
  return *msg->parvalue_;
}
const ::instruments::RateField&
BondFixedRate::_Internal::interestrate(const BondFixedRate* msg) {
  return *msg->interestrate_;
}
const ::instruments::RateField&
BondFixedRate::_Internal::latepaymentpenaltyrate(const BondFixedRate* msg) {
  return *msg->latepaymentpenaltyrate_;
}
const ::instruments::AgeRestrictionField&
BondFixedRate::_Internal::agerestriction(const BondFixedRate* msg) {
  return *msg->agerestriction_;
}
BondFixedRate::BondFixedRate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  interestpaymentdatedeltas_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:instruments.BondFixedRate)
}
BondFixedRate::BondFixedRate(const BondFixedRate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      interestpaymentdatedeltas_(from.interestpaymentdatedeltas_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  bondtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bondtype().empty()) {
    bondtype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_bondtype(),
      GetArena());
  }
  isin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_isin().empty()) {
    isin_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_isin(),
      GetArena());
  }
  collateral_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collateral().empty()) {
    collateral_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_collateral(),
      GetArena());
  }
  if (from._internal_has_parvalue()) {
    parvalue_ = new ::instruments::CurrencyValueField(*from.parvalue_);
  } else {
    parvalue_ = nullptr;
  }
  if (from._internal_has_interestrate()) {
    interestrate_ = new ::instruments::RateField(*from.interestrate_);
  } else {
    interestrate_ = nullptr;
  }
  if (from._internal_has_latepaymentpenaltyrate()) {
    latepaymentpenaltyrate_ = new ::instruments::RateField(*from.latepaymentpenaltyrate_);
  } else {
    latepaymentpenaltyrate_ = nullptr;
  }
  if (from._internal_has_agerestriction()) {
    agerestriction_ = new ::instruments::AgeRestrictionField(*from.agerestriction_);
  } else {
    agerestriction_ = nullptr;
  }
  ::memcpy(&interestpaymentinitialdate_, &from.interestpaymentinitialdate_,
    static_cast<size_t>(reinterpret_cast<char*>(&transferspermitted_) -
    reinterpret_cast<char*>(&interestpaymentinitialdate_)) + sizeof(transferspermitted_));
  // @@protoc_insertion_point(copy_constructor:instruments.BondFixedRate)
}

void BondFixedRate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BondFixedRate_instruments_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bondtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  isin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collateral_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&parvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transferspermitted_) -
      reinterpret_cast<char*>(&parvalue_)) + sizeof(transferspermitted_));
}

BondFixedRate::~BondFixedRate() {
  // @@protoc_insertion_point(destructor:instruments.BondFixedRate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BondFixedRate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bondtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  isin_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  collateral_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete parvalue_;
  if (this != internal_default_instance()) delete interestrate_;
  if (this != internal_default_instance()) delete latepaymentpenaltyrate_;
  if (this != internal_default_instance()) delete agerestriction_;
}

void BondFixedRate::ArenaDtor(void* object) {
  BondFixedRate* _this = reinterpret_cast< BondFixedRate* >(object);
  (void)_this;
}
void BondFixedRate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BondFixedRate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BondFixedRate& BondFixedRate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BondFixedRate_instruments_2eproto.base);
  return *internal_default_instance();
}


void BondFixedRate::Clear() {
// @@protoc_insertion_point(message_clear_start:instruments.BondFixedRate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interestpaymentdatedeltas_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  bondtype_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  isin_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  collateral_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && parvalue_ != nullptr) {
    delete parvalue_;
  }
  parvalue_ = nullptr;
  if (GetArena() == nullptr && interestrate_ != nullptr) {
    delete interestrate_;
  }
  interestrate_ = nullptr;
  if (GetArena() == nullptr && latepaymentpenaltyrate_ != nullptr) {
    delete latepaymentpenaltyrate_;
  }
  latepaymentpenaltyrate_ = nullptr;
  if (GetArena() == nullptr && agerestriction_ != nullptr) {
    delete agerestriction_;
  }
  agerestriction_ = nullptr;
  ::memset(&interestpaymentinitialdate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transferspermitted_) -
      reinterpret_cast<char*>(&interestpaymentinitialdate_)) + sizeof(transferspermitted_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BondFixedRate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string Name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.BondFixedRate.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string BondType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_bondtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.BondFixedRate.BondType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ISIN = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_isin();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.BondFixedRate.ISIN"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Collateral = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_collateral();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.BondFixedRate.Collateral"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .instruments.CurrencyValueField ParValue = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_parvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .instruments.RateField InterestRate = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_interestrate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 InterestPaymentInitialDate = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          interestpaymentinitialdate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 InterestPaymentDateDeltas = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_interestpaymentdatedeltas(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64) {
          _internal_add_interestpaymentdatedeltas(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .instruments.RateField LatePaymentPenaltyRate = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_latepaymentpenaltyrate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 LatePaymentWindow = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          latepaymentwindow_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 LatePaymentPenaltyPeriod = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          latepaymentpenaltyperiod_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 MaturityDate = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          maturitydate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .instruments.AgeRestrictionField AgeRestriction = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_agerestriction(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool TransfersPermitted = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          transferspermitted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BondFixedRate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instruments.BondFixedRate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.BondFixedRate.Name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string BondType = 2;
  if (this->bondtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bondtype().data(), static_cast<int>(this->_internal_bondtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.BondFixedRate.BondType");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_bondtype(), target);
  }

  // string ISIN = 3;
  if (this->isin().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_isin().data(), static_cast<int>(this->_internal_isin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.BondFixedRate.ISIN");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_isin(), target);
  }

  // string Collateral = 4;
  if (this->collateral().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collateral().data(), static_cast<int>(this->_internal_collateral().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.BondFixedRate.Collateral");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_collateral(), target);
  }

  // .instruments.CurrencyValueField ParValue = 5;
  if (this->has_parvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::parvalue(this), target, stream);
  }

  // .instruments.RateField InterestRate = 6;
  if (this->has_interestrate()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::interestrate(this), target, stream);
  }

  // uint64 InterestPaymentInitialDate = 7;
  if (this->interestpaymentinitialdate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_interestpaymentinitialdate(), target);
  }

  // repeated uint64 InterestPaymentDateDeltas = 8;
  {
    int byte_size = _interestpaymentdatedeltas_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          8, _internal_interestpaymentdatedeltas(), byte_size, target);
    }
  }

  // .instruments.RateField LatePaymentPenaltyRate = 9;
  if (this->has_latepaymentpenaltyrate()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::latepaymentpenaltyrate(this), target, stream);
  }

  // uint64 LatePaymentWindow = 10;
  if (this->latepaymentwindow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(10, this->_internal_latepaymentwindow(), target);
  }

  // uint64 LatePaymentPenaltyPeriod = 11;
  if (this->latepaymentpenaltyperiod() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(11, this->_internal_latepaymentpenaltyperiod(), target);
  }

  // uint64 MaturityDate = 12;
  if (this->maturitydate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(12, this->_internal_maturitydate(), target);
  }

  // .instruments.AgeRestrictionField AgeRestriction = 13;
  if (this->has_agerestriction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::agerestriction(this), target, stream);
  }

  // bool TransfersPermitted = 14;
  if (this->transferspermitted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->_internal_transferspermitted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instruments.BondFixedRate)
  return target;
}

size_t BondFixedRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instruments.BondFixedRate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 InterestPaymentDateDeltas = 8;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->interestpaymentdatedeltas_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _interestpaymentdatedeltas_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string BondType = 2;
  if (this->bondtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bondtype());
  }

  // string ISIN = 3;
  if (this->isin().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_isin());
  }

  // string Collateral = 4;
  if (this->collateral().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collateral());
  }

  // .instruments.CurrencyValueField ParValue = 5;
  if (this->has_parvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *parvalue_);
  }

  // .instruments.RateField InterestRate = 6;
  if (this->has_interestrate()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *interestrate_);
  }

  // .instruments.RateField LatePaymentPenaltyRate = 9;
  if (this->has_latepaymentpenaltyrate()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *latepaymentpenaltyrate_);
  }

  // .instruments.AgeRestrictionField AgeRestriction = 13;
  if (this->has_agerestriction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *agerestriction_);
  }

  // uint64 InterestPaymentInitialDate = 7;
  if (this->interestpaymentinitialdate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_interestpaymentinitialdate());
  }

  // uint64 LatePaymentWindow = 10;
  if (this->latepaymentwindow() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_latepaymentwindow());
  }

  // uint64 LatePaymentPenaltyPeriod = 11;
  if (this->latepaymentpenaltyperiod() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_latepaymentpenaltyperiod());
  }

  // uint64 MaturityDate = 12;
  if (this->maturitydate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_maturitydate());
  }

  // bool TransfersPermitted = 14;
  if (this->transferspermitted() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BondFixedRate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:instruments.BondFixedRate)
  GOOGLE_DCHECK_NE(&from, this);
  const BondFixedRate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BondFixedRate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:instruments.BondFixedRate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:instruments.BondFixedRate)
    MergeFrom(*source);
  }
}

void BondFixedRate::MergeFrom(const BondFixedRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:instruments.BondFixedRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  interestpaymentdatedeltas_.MergeFrom(from.interestpaymentdatedeltas_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.bondtype().size() > 0) {
    _internal_set_bondtype(from._internal_bondtype());
  }
  if (from.isin().size() > 0) {
    _internal_set_isin(from._internal_isin());
  }
  if (from.collateral().size() > 0) {
    _internal_set_collateral(from._internal_collateral());
  }
  if (from.has_parvalue()) {
    _internal_mutable_parvalue()->::instruments::CurrencyValueField::MergeFrom(from._internal_parvalue());
  }
  if (from.has_interestrate()) {
    _internal_mutable_interestrate()->::instruments::RateField::MergeFrom(from._internal_interestrate());
  }
  if (from.has_latepaymentpenaltyrate()) {
    _internal_mutable_latepaymentpenaltyrate()->::instruments::RateField::MergeFrom(from._internal_latepaymentpenaltyrate());
  }
  if (from.has_agerestriction()) {
    _internal_mutable_agerestriction()->::instruments::AgeRestrictionField::MergeFrom(from._internal_agerestriction());
  }
  if (from.interestpaymentinitialdate() != 0) {
    _internal_set_interestpaymentinitialdate(from._internal_interestpaymentinitialdate());
  }
  if (from.latepaymentwindow() != 0) {
    _internal_set_latepaymentwindow(from._internal_latepaymentwindow());
  }
  if (from.latepaymentpenaltyperiod() != 0) {
    _internal_set_latepaymentpenaltyperiod(from._internal_latepaymentpenaltyperiod());
  }
  if (from.maturitydate() != 0) {
    _internal_set_maturitydate(from._internal_maturitydate());
  }
  if (from.transferspermitted() != 0) {
    _internal_set_transferspermitted(from._internal_transferspermitted());
  }
}

void BondFixedRate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:instruments.BondFixedRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BondFixedRate::CopyFrom(const BondFixedRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instruments.BondFixedRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BondFixedRate::IsInitialized() const {
  return true;
}

void BondFixedRate::InternalSwap(BondFixedRate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  interestpaymentdatedeltas_.InternalSwap(&other->interestpaymentdatedeltas_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  bondtype_.Swap(&other->bondtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  isin_.Swap(&other->isin_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  collateral_.Swap(&other->collateral_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BondFixedRate, transferspermitted_)
      + sizeof(BondFixedRate::transferspermitted_)
      - PROTOBUF_FIELD_OFFSET(BondFixedRate, parvalue_)>(
          reinterpret_cast<char*>(&parvalue_),
          reinterpret_cast<char*>(&other->parvalue_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BondFixedRate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DiscountCoupon::InitAsDefaultInstance() {
  ::instruments::_DiscountCoupon_default_instance_._instance.get_mutable()->facevalue_ = const_cast< ::instruments::CurrencyValueField*>(
      ::instruments::CurrencyValueField::internal_default_instance());
}
class DiscountCoupon::_Internal {
 public:
  static const ::instruments::CurrencyValueField& facevalue(const DiscountCoupon* msg);
};

const ::instruments::CurrencyValueField&
DiscountCoupon::_Internal::facevalue(const DiscountCoupon* msg) {
  return *msg->facevalue_;
}
DiscountCoupon::DiscountCoupon(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:instruments.DiscountCoupon)
}
DiscountCoupon::DiscountCoupon(const DiscountCoupon& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  redeemingentity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redeemingentity().empty()) {
    redeemingentity_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_redeemingentity(),
      GetArena());
  }
  couponname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_couponname().empty()) {
    couponname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_couponname(),
      GetArena());
  }
  redemptionvenue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redemptionvenue().empty()) {
    redemptionvenue_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_redemptionvenue(),
      GetArena());
  }
  details_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_details().empty()) {
    details_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_details(),
      GetArena());
  }
  if (from._internal_has_facevalue()) {
    facevalue_ = new ::instruments::CurrencyValueField(*from.facevalue_);
  } else {
    facevalue_ = nullptr;
  }
  ::memcpy(&validfromtimestamp_, &from.validfromtimestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&transferspermitted_) -
    reinterpret_cast<char*>(&validfromtimestamp_)) + sizeof(transferspermitted_));
  // @@protoc_insertion_point(copy_constructor:instruments.DiscountCoupon)
}

void DiscountCoupon::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DiscountCoupon_instruments_2eproto.base);
  redeemingentity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  couponname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redemptionvenue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  details_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&facevalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transferspermitted_) -
      reinterpret_cast<char*>(&facevalue_)) + sizeof(transferspermitted_));
}

DiscountCoupon::~DiscountCoupon() {
  // @@protoc_insertion_point(destructor:instruments.DiscountCoupon)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DiscountCoupon::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  redeemingentity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  couponname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redemptionvenue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  details_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete facevalue_;
}

void DiscountCoupon::ArenaDtor(void* object) {
  DiscountCoupon* _this = reinterpret_cast< DiscountCoupon* >(object);
  (void)_this;
}
void DiscountCoupon::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DiscountCoupon::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DiscountCoupon& DiscountCoupon::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DiscountCoupon_instruments_2eproto.base);
  return *internal_default_instance();
}


void DiscountCoupon::Clear() {
// @@protoc_insertion_point(message_clear_start:instruments.DiscountCoupon)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  redeemingentity_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  couponname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  redemptionvenue_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  details_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && facevalue_ != nullptr) {
    delete facevalue_;
  }
  facevalue_ = nullptr;
  ::memset(&validfromtimestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transferspermitted_) -
      reinterpret_cast<char*>(&validfromtimestamp_)) + sizeof(transferspermitted_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DiscountCoupon::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string RedeemingEntity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_redeemingentity();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.DiscountCoupon.RedeemingEntity"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 ValidFromTimestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          validfromtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 ExpirationTimestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          expirationtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string CouponName = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_couponname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.DiscountCoupon.CouponName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool TransfersPermitted = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          transferspermitted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .instruments.CurrencyValueField FaceValue = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_facevalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string RedemptionVenue = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_redemptionvenue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.DiscountCoupon.RedemptionVenue"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Details = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_details();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.DiscountCoupon.Details"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DiscountCoupon::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instruments.DiscountCoupon)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string RedeemingEntity = 1;
  if (this->redeemingentity().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redeemingentity().data(), static_cast<int>(this->_internal_redeemingentity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.DiscountCoupon.RedeemingEntity");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_redeemingentity(), target);
  }

  // uint64 ValidFromTimestamp = 2;
  if (this->validfromtimestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_validfromtimestamp(), target);
  }

  // uint64 ExpirationTimestamp = 3;
  if (this->expirationtimestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_expirationtimestamp(), target);
  }

  // string CouponName = 6;
  if (this->couponname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_couponname().data(), static_cast<int>(this->_internal_couponname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.DiscountCoupon.CouponName");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_couponname(), target);
  }

  // bool TransfersPermitted = 8;
  if (this->transferspermitted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_transferspermitted(), target);
  }

  // .instruments.CurrencyValueField FaceValue = 9;
  if (this->has_facevalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::facevalue(this), target, stream);
  }

  // string RedemptionVenue = 10;
  if (this->redemptionvenue().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redemptionvenue().data(), static_cast<int>(this->_internal_redemptionvenue().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.DiscountCoupon.RedemptionVenue");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_redemptionvenue(), target);
  }

  // string Details = 11;
  if (this->details().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_details().data(), static_cast<int>(this->_internal_details().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.DiscountCoupon.Details");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_details(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instruments.DiscountCoupon)
  return target;
}

size_t DiscountCoupon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instruments.DiscountCoupon)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string RedeemingEntity = 1;
  if (this->redeemingentity().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redeemingentity());
  }

  // string CouponName = 6;
  if (this->couponname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_couponname());
  }

  // string RedemptionVenue = 10;
  if (this->redemptionvenue().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redemptionvenue());
  }

  // string Details = 11;
  if (this->details().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_details());
  }

  // .instruments.CurrencyValueField FaceValue = 9;
  if (this->has_facevalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *facevalue_);
  }

  // uint64 ValidFromTimestamp = 2;
  if (this->validfromtimestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_validfromtimestamp());
  }

  // uint64 ExpirationTimestamp = 3;
  if (this->expirationtimestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_expirationtimestamp());
  }

  // bool TransfersPermitted = 8;
  if (this->transferspermitted() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiscountCoupon::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:instruments.DiscountCoupon)
  GOOGLE_DCHECK_NE(&from, this);
  const DiscountCoupon* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DiscountCoupon>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:instruments.DiscountCoupon)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:instruments.DiscountCoupon)
    MergeFrom(*source);
  }
}

void DiscountCoupon::MergeFrom(const DiscountCoupon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:instruments.DiscountCoupon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.redeemingentity().size() > 0) {
    _internal_set_redeemingentity(from._internal_redeemingentity());
  }
  if (from.couponname().size() > 0) {
    _internal_set_couponname(from._internal_couponname());
  }
  if (from.redemptionvenue().size() > 0) {
    _internal_set_redemptionvenue(from._internal_redemptionvenue());
  }
  if (from.details().size() > 0) {
    _internal_set_details(from._internal_details());
  }
  if (from.has_facevalue()) {
    _internal_mutable_facevalue()->::instruments::CurrencyValueField::MergeFrom(from._internal_facevalue());
  }
  if (from.validfromtimestamp() != 0) {
    _internal_set_validfromtimestamp(from._internal_validfromtimestamp());
  }
  if (from.expirationtimestamp() != 0) {
    _internal_set_expirationtimestamp(from._internal_expirationtimestamp());
  }
  if (from.transferspermitted() != 0) {
    _internal_set_transferspermitted(from._internal_transferspermitted());
  }
}

void DiscountCoupon::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:instruments.DiscountCoupon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscountCoupon::CopyFrom(const DiscountCoupon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instruments.DiscountCoupon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscountCoupon::IsInitialized() const {
  return true;
}

void DiscountCoupon::InternalSwap(DiscountCoupon* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  redeemingentity_.Swap(&other->redeemingentity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  couponname_.Swap(&other->couponname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  redemptionvenue_.Swap(&other->redemptionvenue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  details_.Swap(&other->details_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DiscountCoupon, transferspermitted_)
      + sizeof(DiscountCoupon::transferspermitted_)
      - PROTOBUF_FIELD_OFFSET(DiscountCoupon, facevalue_)>(
          reinterpret_cast<char*>(&facevalue_),
          reinterpret_cast<char*>(&other->facevalue_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DiscountCoupon::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeprecatedLoyaltyPoints::InitAsDefaultInstance() {
  ::instruments::_DeprecatedLoyaltyPoints_default_instance_._instance.get_mutable()->agerestriction_ = const_cast< ::instruments::AgeRestrictionField*>(
      ::instruments::AgeRestrictionField::internal_default_instance());
}
class DeprecatedLoyaltyPoints::_Internal {
 public:
  static const ::instruments::AgeRestrictionField& agerestriction(const DeprecatedLoyaltyPoints* msg);
};

const ::instruments::AgeRestrictionField&
DeprecatedLoyaltyPoints::_Internal::agerestriction(const DeprecatedLoyaltyPoints* msg) {
  return *msg->agerestriction_;
}
DeprecatedLoyaltyPoints::DeprecatedLoyaltyPoints(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:instruments.DeprecatedLoyaltyPoints)
}
DeprecatedLoyaltyPoints::DeprecatedLoyaltyPoints(const DeprecatedLoyaltyPoints& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  programname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_programname().empty()) {
    programname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_programname(),
      GetArena());
  }
  details_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_details().empty()) {
    details_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_details(),
      GetArena());
  }
  if (from._internal_has_agerestriction()) {
    agerestriction_ = new ::instruments::AgeRestrictionField(*from.agerestriction_);
  } else {
    agerestriction_ = nullptr;
  }
  ::memcpy(&expirationtimestamp_, &from.expirationtimestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&transferspermitted_) -
    reinterpret_cast<char*>(&expirationtimestamp_)) + sizeof(transferspermitted_));
  // @@protoc_insertion_point(copy_constructor:instruments.DeprecatedLoyaltyPoints)
}

void DeprecatedLoyaltyPoints::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeprecatedLoyaltyPoints_instruments_2eproto.base);
  programname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  details_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&agerestriction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transferspermitted_) -
      reinterpret_cast<char*>(&agerestriction_)) + sizeof(transferspermitted_));
}

DeprecatedLoyaltyPoints::~DeprecatedLoyaltyPoints() {
  // @@protoc_insertion_point(destructor:instruments.DeprecatedLoyaltyPoints)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeprecatedLoyaltyPoints::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  programname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  details_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete agerestriction_;
}

void DeprecatedLoyaltyPoints::ArenaDtor(void* object) {
  DeprecatedLoyaltyPoints* _this = reinterpret_cast< DeprecatedLoyaltyPoints* >(object);
  (void)_this;
}
void DeprecatedLoyaltyPoints::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeprecatedLoyaltyPoints::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeprecatedLoyaltyPoints& DeprecatedLoyaltyPoints::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeprecatedLoyaltyPoints_instruments_2eproto.base);
  return *internal_default_instance();
}


void DeprecatedLoyaltyPoints::Clear() {
// @@protoc_insertion_point(message_clear_start:instruments.DeprecatedLoyaltyPoints)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  programname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  details_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && agerestriction_ != nullptr) {
    delete agerestriction_;
  }
  agerestriction_ = nullptr;
  ::memset(&expirationtimestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transferspermitted_) -
      reinterpret_cast<char*>(&expirationtimestamp_)) + sizeof(transferspermitted_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeprecatedLoyaltyPoints::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .instruments.AgeRestrictionField AgeRestriction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_agerestriction(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ProgramName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_programname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.DeprecatedLoyaltyPoints.ProgramName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 ExpirationTimestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          expirationtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Details = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_details();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.DeprecatedLoyaltyPoints.Details"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool TransfersPermitted = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          transferspermitted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeprecatedLoyaltyPoints::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instruments.DeprecatedLoyaltyPoints)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .instruments.AgeRestrictionField AgeRestriction = 1;
  if (this->has_agerestriction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::agerestriction(this), target, stream);
  }

  // string ProgramName = 2;
  if (this->programname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_programname().data(), static_cast<int>(this->_internal_programname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.DeprecatedLoyaltyPoints.ProgramName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_programname(), target);
  }

  // uint64 ExpirationTimestamp = 4;
  if (this->expirationtimestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_expirationtimestamp(), target);
  }

  // string Details = 5;
  if (this->details().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_details().data(), static_cast<int>(this->_internal_details().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.DeprecatedLoyaltyPoints.Details");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_details(), target);
  }

  // bool TransfersPermitted = 6;
  if (this->transferspermitted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_transferspermitted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instruments.DeprecatedLoyaltyPoints)
  return target;
}

size_t DeprecatedLoyaltyPoints::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instruments.DeprecatedLoyaltyPoints)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ProgramName = 2;
  if (this->programname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_programname());
  }

  // string Details = 5;
  if (this->details().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_details());
  }

  // .instruments.AgeRestrictionField AgeRestriction = 1;
  if (this->has_agerestriction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *agerestriction_);
  }

  // uint64 ExpirationTimestamp = 4;
  if (this->expirationtimestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_expirationtimestamp());
  }

  // bool TransfersPermitted = 6;
  if (this->transferspermitted() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeprecatedLoyaltyPoints::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:instruments.DeprecatedLoyaltyPoints)
  GOOGLE_DCHECK_NE(&from, this);
  const DeprecatedLoyaltyPoints* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeprecatedLoyaltyPoints>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:instruments.DeprecatedLoyaltyPoints)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:instruments.DeprecatedLoyaltyPoints)
    MergeFrom(*source);
  }
}

void DeprecatedLoyaltyPoints::MergeFrom(const DeprecatedLoyaltyPoints& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:instruments.DeprecatedLoyaltyPoints)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.programname().size() > 0) {
    _internal_set_programname(from._internal_programname());
  }
  if (from.details().size() > 0) {
    _internal_set_details(from._internal_details());
  }
  if (from.has_agerestriction()) {
    _internal_mutable_agerestriction()->::instruments::AgeRestrictionField::MergeFrom(from._internal_agerestriction());
  }
  if (from.expirationtimestamp() != 0) {
    _internal_set_expirationtimestamp(from._internal_expirationtimestamp());
  }
  if (from.transferspermitted() != 0) {
    _internal_set_transferspermitted(from._internal_transferspermitted());
  }
}

void DeprecatedLoyaltyPoints::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:instruments.DeprecatedLoyaltyPoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeprecatedLoyaltyPoints::CopyFrom(const DeprecatedLoyaltyPoints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instruments.DeprecatedLoyaltyPoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeprecatedLoyaltyPoints::IsInitialized() const {
  return true;
}

void DeprecatedLoyaltyPoints::InternalSwap(DeprecatedLoyaltyPoints* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  programname_.Swap(&other->programname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  details_.Swap(&other->details_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeprecatedLoyaltyPoints, transferspermitted_)
      + sizeof(DeprecatedLoyaltyPoints::transferspermitted_)
      - PROTOBUF_FIELD_OFFSET(DeprecatedLoyaltyPoints, agerestriction_)>(
          reinterpret_cast<char*>(&agerestriction_),
          reinterpret_cast<char*>(&other->agerestriction_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeprecatedLoyaltyPoints::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TicketAdmission::InitAsDefaultInstance() {
  ::instruments::_TicketAdmission_default_instance_._instance.get_mutable()->agerestriction_ = const_cast< ::instruments::AgeRestrictionField*>(
      ::instruments::AgeRestrictionField::internal_default_instance());
}
class TicketAdmission::_Internal {
 public:
  static const ::instruments::AgeRestrictionField& agerestriction(const TicketAdmission* msg);
};

const ::instruments::AgeRestrictionField&
TicketAdmission::_Internal::agerestriction(const TicketAdmission* msg) {
  return *msg->agerestriction_;
}
TicketAdmission::TicketAdmission(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:instruments.TicketAdmission)
}
TicketAdmission::TicketAdmission(const TicketAdmission& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  venue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_venue().empty()) {
    venue_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_venue(),
      GetArena());
  }
  area_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_area().empty()) {
    area_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_area(),
      GetArena());
  }
  seat_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_seat().empty()) {
    seat_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_seat(),
      GetArena());
  }
  eventname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_eventname().empty()) {
    eventname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_eventname(),
      GetArena());
  }
  details_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_details().empty()) {
    details_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_details(),
      GetArena());
  }
  section_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_section().empty()) {
    section_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_section(),
      GetArena());
  }
  row_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_row().empty()) {
    row_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_row(),
      GetArena());
  }
  if (from._internal_has_agerestriction()) {
    agerestriction_ = new ::instruments::AgeRestrictionField(*from.agerestriction_);
  } else {
    agerestriction_ = nullptr;
  }
  ::memcpy(&eventstarttimestamp_, &from.eventstarttimestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&eventendtimestamp_) -
    reinterpret_cast<char*>(&eventstarttimestamp_)) + sizeof(eventendtimestamp_));
  // @@protoc_insertion_point(copy_constructor:instruments.TicketAdmission)
}

void TicketAdmission::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TicketAdmission_instruments_2eproto.base);
  venue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  area_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  seat_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  eventname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  details_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  section_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  row_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&agerestriction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eventendtimestamp_) -
      reinterpret_cast<char*>(&agerestriction_)) + sizeof(eventendtimestamp_));
}

TicketAdmission::~TicketAdmission() {
  // @@protoc_insertion_point(destructor:instruments.TicketAdmission)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TicketAdmission::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  venue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  area_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  seat_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  eventname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  details_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  section_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  row_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete agerestriction_;
}

void TicketAdmission::ArenaDtor(void* object) {
  TicketAdmission* _this = reinterpret_cast< TicketAdmission* >(object);
  (void)_this;
}
void TicketAdmission::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TicketAdmission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TicketAdmission& TicketAdmission::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TicketAdmission_instruments_2eproto.base);
  return *internal_default_instance();
}


void TicketAdmission::Clear() {
// @@protoc_insertion_point(message_clear_start:instruments.TicketAdmission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  venue_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  area_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  seat_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  eventname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  details_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  section_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  row_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && agerestriction_ != nullptr) {
    delete agerestriction_;
  }
  agerestriction_ = nullptr;
  ::memset(&eventstarttimestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eventendtimestamp_) -
      reinterpret_cast<char*>(&eventstarttimestamp_)) + sizeof(eventendtimestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TicketAdmission::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .instruments.AgeRestrictionField AgeRestriction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_agerestriction(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Venue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_venue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.TicketAdmission.Venue"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Area = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_area();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.TicketAdmission.Area"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Seat = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_seat();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.TicketAdmission.Seat"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 EventStartTimestamp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          eventstarttimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string EventName = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_eventname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.TicketAdmission.EventName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool TransfersPermitted = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          transferspermitted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Details = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_details();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.TicketAdmission.Details"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Section = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_section();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.TicketAdmission.Section"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Row = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_row();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.TicketAdmission.Row"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 EventEndTimestamp = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          eventendtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TicketAdmission::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instruments.TicketAdmission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .instruments.AgeRestrictionField AgeRestriction = 1;
  if (this->has_agerestriction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::agerestriction(this), target, stream);
  }

  // string Venue = 3;
  if (this->venue().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_venue().data(), static_cast<int>(this->_internal_venue().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.TicketAdmission.Venue");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_venue(), target);
  }

  // string Area = 5;
  if (this->area().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_area().data(), static_cast<int>(this->_internal_area().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.TicketAdmission.Area");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_area(), target);
  }

  // string Seat = 6;
  if (this->seat().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_seat().data(), static_cast<int>(this->_internal_seat().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.TicketAdmission.Seat");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_seat(), target);
  }

  // uint64 EventStartTimestamp = 7;
  if (this->eventstarttimestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_eventstarttimestamp(), target);
  }

  // string EventName = 10;
  if (this->eventname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_eventname().data(), static_cast<int>(this->_internal_eventname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.TicketAdmission.EventName");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_eventname(), target);
  }

  // bool TransfersPermitted = 11;
  if (this->transferspermitted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_transferspermitted(), target);
  }

  // string Details = 12;
  if (this->details().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_details().data(), static_cast<int>(this->_internal_details().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.TicketAdmission.Details");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_details(), target);
  }

  // string Section = 13;
  if (this->section().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_section().data(), static_cast<int>(this->_internal_section().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.TicketAdmission.Section");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_section(), target);
  }

  // string Row = 14;
  if (this->row().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_row().data(), static_cast<int>(this->_internal_row().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.TicketAdmission.Row");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_row(), target);
  }

  // uint64 EventEndTimestamp = 15;
  if (this->eventendtimestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(15, this->_internal_eventendtimestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instruments.TicketAdmission)
  return target;
}

size_t TicketAdmission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instruments.TicketAdmission)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Venue = 3;
  if (this->venue().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_venue());
  }

  // string Area = 5;
  if (this->area().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_area());
  }

  // string Seat = 6;
  if (this->seat().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_seat());
  }

  // string EventName = 10;
  if (this->eventname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_eventname());
  }

  // string Details = 12;
  if (this->details().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_details());
  }

  // string Section = 13;
  if (this->section().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_section());
  }

  // string Row = 14;
  if (this->row().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_row());
  }

  // .instruments.AgeRestrictionField AgeRestriction = 1;
  if (this->has_agerestriction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *agerestriction_);
  }

  // uint64 EventStartTimestamp = 7;
  if (this->eventstarttimestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_eventstarttimestamp());
  }

  // bool TransfersPermitted = 11;
  if (this->transferspermitted() != 0) {
    total_size += 1 + 1;
  }

  // uint64 EventEndTimestamp = 15;
  if (this->eventendtimestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_eventendtimestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TicketAdmission::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:instruments.TicketAdmission)
  GOOGLE_DCHECK_NE(&from, this);
  const TicketAdmission* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TicketAdmission>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:instruments.TicketAdmission)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:instruments.TicketAdmission)
    MergeFrom(*source);
  }
}

void TicketAdmission::MergeFrom(const TicketAdmission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:instruments.TicketAdmission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.venue().size() > 0) {
    _internal_set_venue(from._internal_venue());
  }
  if (from.area().size() > 0) {
    _internal_set_area(from._internal_area());
  }
  if (from.seat().size() > 0) {
    _internal_set_seat(from._internal_seat());
  }
  if (from.eventname().size() > 0) {
    _internal_set_eventname(from._internal_eventname());
  }
  if (from.details().size() > 0) {
    _internal_set_details(from._internal_details());
  }
  if (from.section().size() > 0) {
    _internal_set_section(from._internal_section());
  }
  if (from.row().size() > 0) {
    _internal_set_row(from._internal_row());
  }
  if (from.has_agerestriction()) {
    _internal_mutable_agerestriction()->::instruments::AgeRestrictionField::MergeFrom(from._internal_agerestriction());
  }
  if (from.eventstarttimestamp() != 0) {
    _internal_set_eventstarttimestamp(from._internal_eventstarttimestamp());
  }
  if (from.transferspermitted() != 0) {
    _internal_set_transferspermitted(from._internal_transferspermitted());
  }
  if (from.eventendtimestamp() != 0) {
    _internal_set_eventendtimestamp(from._internal_eventendtimestamp());
  }
}

void TicketAdmission::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:instruments.TicketAdmission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TicketAdmission::CopyFrom(const TicketAdmission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instruments.TicketAdmission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TicketAdmission::IsInitialized() const {
  return true;
}

void TicketAdmission::InternalSwap(TicketAdmission* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  venue_.Swap(&other->venue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  area_.Swap(&other->area_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  seat_.Swap(&other->seat_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  eventname_.Swap(&other->eventname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  details_.Swap(&other->details_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  section_.Swap(&other->section_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  row_.Swap(&other->row_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TicketAdmission, eventendtimestamp_)
      + sizeof(TicketAdmission::eventendtimestamp_)
      - PROTOBUF_FIELD_OFFSET(TicketAdmission, agerestriction_)>(
          reinterpret_cast<char*>(&agerestriction_),
          reinterpret_cast<char*>(&other->agerestriction_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TicketAdmission::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CasinoChip::InitAsDefaultInstance() {
  ::instruments::_CasinoChip_default_instance_._instance.get_mutable()->agerestriction_ = const_cast< ::instruments::AgeRestrictionField*>(
      ::instruments::AgeRestrictionField::internal_default_instance());
  ::instruments::_CasinoChip_default_instance_._instance.get_mutable()->facevalue_ = const_cast< ::instruments::CurrencyValueField*>(
      ::instruments::CurrencyValueField::internal_default_instance());
}
class CasinoChip::_Internal {
 public:
  static const ::instruments::AgeRestrictionField& agerestriction(const CasinoChip* msg);
  static const ::instruments::CurrencyValueField& facevalue(const CasinoChip* msg);
};

const ::instruments::AgeRestrictionField&
CasinoChip::_Internal::agerestriction(const CasinoChip* msg) {
  return *msg->agerestriction_;
}
const ::instruments::CurrencyValueField&
CasinoChip::_Internal::facevalue(const CasinoChip* msg) {
  return *msg->facevalue_;
}
CasinoChip::CasinoChip(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:instruments.CasinoChip)
}
CasinoChip::CasinoChip(const CasinoChip& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  usetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_usetype().empty()) {
    usetype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_usetype(),
      GetArena());
  }
  casinoname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_casinoname().empty()) {
    casinoname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_casinoname(),
      GetArena());
  }
  if (from._internal_has_agerestriction()) {
    agerestriction_ = new ::instruments::AgeRestrictionField(*from.agerestriction_);
  } else {
    agerestriction_ = nullptr;
  }
  if (from._internal_has_facevalue()) {
    facevalue_ = new ::instruments::CurrencyValueField(*from.facevalue_);
  } else {
    facevalue_ = nullptr;
  }
  ::memcpy(&expirationtimestamp_, &from.expirationtimestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&transferspermitted_) -
    reinterpret_cast<char*>(&expirationtimestamp_)) + sizeof(transferspermitted_));
  // @@protoc_insertion_point(copy_constructor:instruments.CasinoChip)
}

void CasinoChip::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CasinoChip_instruments_2eproto.base);
  usetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  casinoname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&agerestriction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transferspermitted_) -
      reinterpret_cast<char*>(&agerestriction_)) + sizeof(transferspermitted_));
}

CasinoChip::~CasinoChip() {
  // @@protoc_insertion_point(destructor:instruments.CasinoChip)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CasinoChip::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  usetype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  casinoname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete agerestriction_;
  if (this != internal_default_instance()) delete facevalue_;
}

void CasinoChip::ArenaDtor(void* object) {
  CasinoChip* _this = reinterpret_cast< CasinoChip* >(object);
  (void)_this;
}
void CasinoChip::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CasinoChip::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CasinoChip& CasinoChip::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CasinoChip_instruments_2eproto.base);
  return *internal_default_instance();
}


void CasinoChip::Clear() {
// @@protoc_insertion_point(message_clear_start:instruments.CasinoChip)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  usetype_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  casinoname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && agerestriction_ != nullptr) {
    delete agerestriction_;
  }
  agerestriction_ = nullptr;
  if (GetArena() == nullptr && facevalue_ != nullptr) {
    delete facevalue_;
  }
  facevalue_ = nullptr;
  ::memset(&expirationtimestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transferspermitted_) -
      reinterpret_cast<char*>(&expirationtimestamp_)) + sizeof(transferspermitted_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CasinoChip::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string UseType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_usetype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.CasinoChip.UseType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .instruments.AgeRestrictionField AgeRestriction = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_agerestriction(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 ExpirationTimestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          expirationtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool TransfersPermitted = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          transferspermitted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string CasinoName = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_casinoname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.CasinoChip.CasinoName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .instruments.CurrencyValueField FaceValue = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_facevalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CasinoChip::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instruments.CasinoChip)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UseType = 2;
  if (this->usetype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_usetype().data(), static_cast<int>(this->_internal_usetype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.CasinoChip.UseType");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_usetype(), target);
  }

  // .instruments.AgeRestrictionField AgeRestriction = 3;
  if (this->has_agerestriction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::agerestriction(this), target, stream);
  }

  // uint64 ExpirationTimestamp = 5;
  if (this->expirationtimestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_expirationtimestamp(), target);
  }

  // bool TransfersPermitted = 7;
  if (this->transferspermitted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_transferspermitted(), target);
  }

  // string CasinoName = 8;
  if (this->casinoname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_casinoname().data(), static_cast<int>(this->_internal_casinoname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.CasinoChip.CasinoName");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_casinoname(), target);
  }

  // .instruments.CurrencyValueField FaceValue = 9;
  if (this->has_facevalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::facevalue(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instruments.CasinoChip)
  return target;
}

size_t CasinoChip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instruments.CasinoChip)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string UseType = 2;
  if (this->usetype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_usetype());
  }

  // string CasinoName = 8;
  if (this->casinoname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_casinoname());
  }

  // .instruments.AgeRestrictionField AgeRestriction = 3;
  if (this->has_agerestriction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *agerestriction_);
  }

  // .instruments.CurrencyValueField FaceValue = 9;
  if (this->has_facevalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *facevalue_);
  }

  // uint64 ExpirationTimestamp = 5;
  if (this->expirationtimestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_expirationtimestamp());
  }

  // bool TransfersPermitted = 7;
  if (this->transferspermitted() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CasinoChip::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:instruments.CasinoChip)
  GOOGLE_DCHECK_NE(&from, this);
  const CasinoChip* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CasinoChip>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:instruments.CasinoChip)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:instruments.CasinoChip)
    MergeFrom(*source);
  }
}

void CasinoChip::MergeFrom(const CasinoChip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:instruments.CasinoChip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.usetype().size() > 0) {
    _internal_set_usetype(from._internal_usetype());
  }
  if (from.casinoname().size() > 0) {
    _internal_set_casinoname(from._internal_casinoname());
  }
  if (from.has_agerestriction()) {
    _internal_mutable_agerestriction()->::instruments::AgeRestrictionField::MergeFrom(from._internal_agerestriction());
  }
  if (from.has_facevalue()) {
    _internal_mutable_facevalue()->::instruments::CurrencyValueField::MergeFrom(from._internal_facevalue());
  }
  if (from.expirationtimestamp() != 0) {
    _internal_set_expirationtimestamp(from._internal_expirationtimestamp());
  }
  if (from.transferspermitted() != 0) {
    _internal_set_transferspermitted(from._internal_transferspermitted());
  }
}

void CasinoChip::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:instruments.CasinoChip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CasinoChip::CopyFrom(const CasinoChip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instruments.CasinoChip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CasinoChip::IsInitialized() const {
  return true;
}

void CasinoChip::InternalSwap(CasinoChip* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  usetype_.Swap(&other->usetype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  casinoname_.Swap(&other->casinoname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CasinoChip, transferspermitted_)
      + sizeof(CasinoChip::transferspermitted_)
      - PROTOBUF_FIELD_OFFSET(CasinoChip, agerestriction_)>(
          reinterpret_cast<char*>(&agerestriction_),
          reinterpret_cast<char*>(&other->agerestriction_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CasinoChip::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InformationServiceLicense::InitAsDefaultInstance() {
  ::instruments::_InformationServiceLicense_default_instance_._instance.get_mutable()->agerestriction_ = const_cast< ::instruments::AgeRestrictionField*>(
      ::instruments::AgeRestrictionField::internal_default_instance());
}
class InformationServiceLicense::_Internal {
 public:
  static const ::instruments::AgeRestrictionField& agerestriction(const InformationServiceLicense* msg);
};

const ::instruments::AgeRestrictionField&
InformationServiceLicense::_Internal::agerestriction(const InformationServiceLicense* msg) {
  return *msg->agerestriction_;
}
InformationServiceLicense::InformationServiceLicense(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:instruments.InformationServiceLicense)
}
InformationServiceLicense::InformationServiceLicense(const InformationServiceLicense& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  servicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_servicename().empty()) {
    servicename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_servicename(),
      GetArena());
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_url(),
      GetArena());
  }
  if (from._internal_has_agerestriction()) {
    agerestriction_ = new ::instruments::AgeRestrictionField(*from.agerestriction_);
  } else {
    agerestriction_ = nullptr;
  }
  ::memcpy(&expirationtimestamp_, &from.expirationtimestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&transferspermitted_) -
    reinterpret_cast<char*>(&expirationtimestamp_)) + sizeof(transferspermitted_));
  // @@protoc_insertion_point(copy_constructor:instruments.InformationServiceLicense)
}

void InformationServiceLicense::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InformationServiceLicense_instruments_2eproto.base);
  servicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&agerestriction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transferspermitted_) -
      reinterpret_cast<char*>(&agerestriction_)) + sizeof(transferspermitted_));
}

InformationServiceLicense::~InformationServiceLicense() {
  // @@protoc_insertion_point(destructor:instruments.InformationServiceLicense)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InformationServiceLicense::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  servicename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete agerestriction_;
}

void InformationServiceLicense::ArenaDtor(void* object) {
  InformationServiceLicense* _this = reinterpret_cast< InformationServiceLicense* >(object);
  (void)_this;
}
void InformationServiceLicense::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InformationServiceLicense::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InformationServiceLicense& InformationServiceLicense::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InformationServiceLicense_instruments_2eproto.base);
  return *internal_default_instance();
}


void InformationServiceLicense::Clear() {
// @@protoc_insertion_point(message_clear_start:instruments.InformationServiceLicense)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servicename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && agerestriction_ != nullptr) {
    delete agerestriction_;
  }
  agerestriction_ = nullptr;
  ::memset(&expirationtimestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transferspermitted_) -
      reinterpret_cast<char*>(&expirationtimestamp_)) + sizeof(transferspermitted_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InformationServiceLicense::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .instruments.AgeRestrictionField AgeRestriction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_agerestriction(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 ExpirationTimestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          expirationtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ServiceName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_servicename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.InformationServiceLicense.ServiceName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool TransfersPermitted = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          transferspermitted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string URL = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.InformationServiceLicense.URL"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InformationServiceLicense::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instruments.InformationServiceLicense)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .instruments.AgeRestrictionField AgeRestriction = 1;
  if (this->has_agerestriction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::agerestriction(this), target, stream);
  }

  // uint64 ExpirationTimestamp = 2;
  if (this->expirationtimestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_expirationtimestamp(), target);
  }

  // string ServiceName = 3;
  if (this->servicename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_servicename().data(), static_cast<int>(this->_internal_servicename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.InformationServiceLicense.ServiceName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_servicename(), target);
  }

  // bool TransfersPermitted = 4;
  if (this->transferspermitted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_transferspermitted(), target);
  }

  // string URL = 5;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.InformationServiceLicense.URL");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instruments.InformationServiceLicense)
  return target;
}

size_t InformationServiceLicense::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instruments.InformationServiceLicense)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ServiceName = 3;
  if (this->servicename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_servicename());
  }

  // string URL = 5;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // .instruments.AgeRestrictionField AgeRestriction = 1;
  if (this->has_agerestriction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *agerestriction_);
  }

  // uint64 ExpirationTimestamp = 2;
  if (this->expirationtimestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_expirationtimestamp());
  }

  // bool TransfersPermitted = 4;
  if (this->transferspermitted() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InformationServiceLicense::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:instruments.InformationServiceLicense)
  GOOGLE_DCHECK_NE(&from, this);
  const InformationServiceLicense* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InformationServiceLicense>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:instruments.InformationServiceLicense)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:instruments.InformationServiceLicense)
    MergeFrom(*source);
  }
}

void InformationServiceLicense::MergeFrom(const InformationServiceLicense& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:instruments.InformationServiceLicense)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servicename().size() > 0) {
    _internal_set_servicename(from._internal_servicename());
  }
  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.has_agerestriction()) {
    _internal_mutable_agerestriction()->::instruments::AgeRestrictionField::MergeFrom(from._internal_agerestriction());
  }
  if (from.expirationtimestamp() != 0) {
    _internal_set_expirationtimestamp(from._internal_expirationtimestamp());
  }
  if (from.transferspermitted() != 0) {
    _internal_set_transferspermitted(from._internal_transferspermitted());
  }
}

void InformationServiceLicense::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:instruments.InformationServiceLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InformationServiceLicense::CopyFrom(const InformationServiceLicense& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instruments.InformationServiceLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InformationServiceLicense::IsInitialized() const {
  return true;
}

void InformationServiceLicense::InternalSwap(InformationServiceLicense* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  servicename_.Swap(&other->servicename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InformationServiceLicense, transferspermitted_)
      + sizeof(InformationServiceLicense::transferspermitted_)
      - PROTOBUF_FIELD_OFFSET(InformationServiceLicense, agerestriction_)>(
          reinterpret_cast<char*>(&agerestriction_),
          reinterpret_cast<char*>(&other->agerestriction_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InformationServiceLicense::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreditNote::InitAsDefaultInstance() {
  ::instruments::_CreditNote_default_instance_._instance.get_mutable()->facevalue_ = const_cast< ::instruments::FixedCurrencyValueField*>(
      ::instruments::FixedCurrencyValueField::internal_default_instance());
}
class CreditNote::_Internal {
 public:
  static const ::instruments::FixedCurrencyValueField& facevalue(const CreditNote* msg);
};

const ::instruments::FixedCurrencyValueField&
CreditNote::_Internal::facevalue(const CreditNote* msg) {
  return *msg->facevalue_;
}
CreditNote::CreditNote(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:instruments.CreditNote)
}
CreditNote::CreditNote(const CreditNote& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_facevalue()) {
    facevalue_ = new ::instruments::FixedCurrencyValueField(*from.facevalue_);
  } else {
    facevalue_ = nullptr;
  }
  ::memcpy(&expirationtimestamp_, &from.expirationtimestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&transferspermitted_) -
    reinterpret_cast<char*>(&expirationtimestamp_)) + sizeof(transferspermitted_));
  // @@protoc_insertion_point(copy_constructor:instruments.CreditNote)
}

void CreditNote::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreditNote_instruments_2eproto.base);
  ::memset(&facevalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transferspermitted_) -
      reinterpret_cast<char*>(&facevalue_)) + sizeof(transferspermitted_));
}

CreditNote::~CreditNote() {
  // @@protoc_insertion_point(destructor:instruments.CreditNote)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreditNote::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete facevalue_;
}

void CreditNote::ArenaDtor(void* object) {
  CreditNote* _this = reinterpret_cast< CreditNote* >(object);
  (void)_this;
}
void CreditNote::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreditNote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreditNote& CreditNote::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreditNote_instruments_2eproto.base);
  return *internal_default_instance();
}


void CreditNote::Clear() {
// @@protoc_insertion_point(message_clear_start:instruments.CreditNote)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && facevalue_ != nullptr) {
    delete facevalue_;
  }
  facevalue_ = nullptr;
  ::memset(&expirationtimestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transferspermitted_) -
      reinterpret_cast<char*>(&expirationtimestamp_)) + sizeof(transferspermitted_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreditNote::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .instruments.FixedCurrencyValueField FaceValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_facevalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 ExpirationTimestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          expirationtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool TransfersPermitted = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          transferspermitted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreditNote::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instruments.CreditNote)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .instruments.FixedCurrencyValueField FaceValue = 2;
  if (this->has_facevalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::facevalue(this), target, stream);
  }

  // uint64 ExpirationTimestamp = 3;
  if (this->expirationtimestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_expirationtimestamp(), target);
  }

  // bool TransfersPermitted = 4;
  if (this->transferspermitted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_transferspermitted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instruments.CreditNote)
  return target;
}

size_t CreditNote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instruments.CreditNote)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .instruments.FixedCurrencyValueField FaceValue = 2;
  if (this->has_facevalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *facevalue_);
  }

  // uint64 ExpirationTimestamp = 3;
  if (this->expirationtimestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_expirationtimestamp());
  }

  // bool TransfersPermitted = 4;
  if (this->transferspermitted() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreditNote::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:instruments.CreditNote)
  GOOGLE_DCHECK_NE(&from, this);
  const CreditNote* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreditNote>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:instruments.CreditNote)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:instruments.CreditNote)
    MergeFrom(*source);
  }
}

void CreditNote::MergeFrom(const CreditNote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:instruments.CreditNote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_facevalue()) {
    _internal_mutable_facevalue()->::instruments::FixedCurrencyValueField::MergeFrom(from._internal_facevalue());
  }
  if (from.expirationtimestamp() != 0) {
    _internal_set_expirationtimestamp(from._internal_expirationtimestamp());
  }
  if (from.transferspermitted() != 0) {
    _internal_set_transferspermitted(from._internal_transferspermitted());
  }
}

void CreditNote::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:instruments.CreditNote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreditNote::CopyFrom(const CreditNote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instruments.CreditNote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreditNote::IsInitialized() const {
  return true;
}

void CreditNote::InternalSwap(CreditNote* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreditNote, transferspermitted_)
      + sizeof(CreditNote::transferspermitted_)
      - PROTOBUF_FIELD_OFFSET(CreditNote, facevalue_)>(
          reinterpret_cast<char*>(&facevalue_),
          reinterpret_cast<char*>(&other->facevalue_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreditNote::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RewardPoint::InitAsDefaultInstance() {
  ::instruments::_RewardPoint_default_instance_._instance.get_mutable()->agerestriction_ = const_cast< ::instruments::AgeRestrictionField*>(
      ::instruments::AgeRestrictionField::internal_default_instance());
}
class RewardPoint::_Internal {
 public:
  static const ::instruments::AgeRestrictionField& agerestriction(const RewardPoint* msg);
};

const ::instruments::AgeRestrictionField&
RewardPoint::_Internal::agerestriction(const RewardPoint* msg) {
  return *msg->agerestriction_;
}
RewardPoint::RewardPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:instruments.RewardPoint)
}
RewardPoint::RewardPoint(const RewardPoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  programname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_programname().empty()) {
    programname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_programname(),
      GetArena());
  }
  details_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_details().empty()) {
    details_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_details(),
      GetArena());
  }
  if (from._internal_has_agerestriction()) {
    agerestriction_ = new ::instruments::AgeRestrictionField(*from.agerestriction_);
  } else {
    agerestriction_ = nullptr;
  }
  ::memcpy(&expirationtimestamp_, &from.expirationtimestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&transferspermitted_) -
    reinterpret_cast<char*>(&expirationtimestamp_)) + sizeof(transferspermitted_));
  // @@protoc_insertion_point(copy_constructor:instruments.RewardPoint)
}

void RewardPoint::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RewardPoint_instruments_2eproto.base);
  programname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  details_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&agerestriction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transferspermitted_) -
      reinterpret_cast<char*>(&agerestriction_)) + sizeof(transferspermitted_));
}

RewardPoint::~RewardPoint() {
  // @@protoc_insertion_point(destructor:instruments.RewardPoint)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RewardPoint::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  programname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  details_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete agerestriction_;
}

void RewardPoint::ArenaDtor(void* object) {
  RewardPoint* _this = reinterpret_cast< RewardPoint* >(object);
  (void)_this;
}
void RewardPoint::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RewardPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RewardPoint& RewardPoint::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RewardPoint_instruments_2eproto.base);
  return *internal_default_instance();
}


void RewardPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:instruments.RewardPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  programname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  details_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && agerestriction_ != nullptr) {
    delete agerestriction_;
  }
  agerestriction_ = nullptr;
  ::memset(&expirationtimestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transferspermitted_) -
      reinterpret_cast<char*>(&expirationtimestamp_)) + sizeof(transferspermitted_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RewardPoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .instruments.AgeRestrictionField AgeRestriction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_agerestriction(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ProgramName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_programname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.RewardPoint.ProgramName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 ExpirationTimestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          expirationtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Details = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_details();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.RewardPoint.Details"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool TransfersPermitted = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          transferspermitted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RewardPoint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instruments.RewardPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .instruments.AgeRestrictionField AgeRestriction = 1;
  if (this->has_agerestriction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::agerestriction(this), target, stream);
  }

  // string ProgramName = 2;
  if (this->programname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_programname().data(), static_cast<int>(this->_internal_programname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.RewardPoint.ProgramName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_programname(), target);
  }

  // uint64 ExpirationTimestamp = 4;
  if (this->expirationtimestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_expirationtimestamp(), target);
  }

  // string Details = 5;
  if (this->details().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_details().data(), static_cast<int>(this->_internal_details().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.RewardPoint.Details");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_details(), target);
  }

  // bool TransfersPermitted = 6;
  if (this->transferspermitted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_transferspermitted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instruments.RewardPoint)
  return target;
}

size_t RewardPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instruments.RewardPoint)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ProgramName = 2;
  if (this->programname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_programname());
  }

  // string Details = 5;
  if (this->details().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_details());
  }

  // .instruments.AgeRestrictionField AgeRestriction = 1;
  if (this->has_agerestriction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *agerestriction_);
  }

  // uint64 ExpirationTimestamp = 4;
  if (this->expirationtimestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_expirationtimestamp());
  }

  // bool TransfersPermitted = 6;
  if (this->transferspermitted() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RewardPoint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:instruments.RewardPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const RewardPoint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RewardPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:instruments.RewardPoint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:instruments.RewardPoint)
    MergeFrom(*source);
  }
}

void RewardPoint::MergeFrom(const RewardPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:instruments.RewardPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.programname().size() > 0) {
    _internal_set_programname(from._internal_programname());
  }
  if (from.details().size() > 0) {
    _internal_set_details(from._internal_details());
  }
  if (from.has_agerestriction()) {
    _internal_mutable_agerestriction()->::instruments::AgeRestrictionField::MergeFrom(from._internal_agerestriction());
  }
  if (from.expirationtimestamp() != 0) {
    _internal_set_expirationtimestamp(from._internal_expirationtimestamp());
  }
  if (from.transferspermitted() != 0) {
    _internal_set_transferspermitted(from._internal_transferspermitted());
  }
}

void RewardPoint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:instruments.RewardPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RewardPoint::CopyFrom(const RewardPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instruments.RewardPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RewardPoint::IsInitialized() const {
  return true;
}

void RewardPoint::InternalSwap(RewardPoint* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  programname_.Swap(&other->programname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  details_.Swap(&other->details_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RewardPoint, transferspermitted_)
      + sizeof(RewardPoint::transferspermitted_)
      - PROTOBUF_FIELD_OFFSET(RewardPoint, agerestriction_)>(
          reinterpret_cast<char*>(&agerestriction_),
          reinterpret_cast<char*>(&other->agerestriction_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RewardPoint::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AgeRestrictionField::InitAsDefaultInstance() {
}
class AgeRestrictionField::_Internal {
 public:
};

AgeRestrictionField::AgeRestrictionField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:instruments.AgeRestrictionField)
}
AgeRestrictionField::AgeRestrictionField(const AgeRestrictionField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lower_, &from.lower_,
    static_cast<size_t>(reinterpret_cast<char*>(&upper_) -
    reinterpret_cast<char*>(&lower_)) + sizeof(upper_));
  // @@protoc_insertion_point(copy_constructor:instruments.AgeRestrictionField)
}

void AgeRestrictionField::SharedCtor() {
  ::memset(&lower_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upper_) -
      reinterpret_cast<char*>(&lower_)) + sizeof(upper_));
}

AgeRestrictionField::~AgeRestrictionField() {
  // @@protoc_insertion_point(destructor:instruments.AgeRestrictionField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AgeRestrictionField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AgeRestrictionField::ArenaDtor(void* object) {
  AgeRestrictionField* _this = reinterpret_cast< AgeRestrictionField* >(object);
  (void)_this;
}
void AgeRestrictionField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgeRestrictionField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgeRestrictionField& AgeRestrictionField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AgeRestrictionField_instruments_2eproto.base);
  return *internal_default_instance();
}


void AgeRestrictionField::Clear() {
// @@protoc_insertion_point(message_clear_start:instruments.AgeRestrictionField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lower_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upper_) -
      reinterpret_cast<char*>(&lower_)) + sizeof(upper_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgeRestrictionField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 Lower = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          lower_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Upper = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          upper_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgeRestrictionField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instruments.AgeRestrictionField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Lower = 1;
  if (this->lower() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_lower(), target);
  }

  // uint32 Upper = 2;
  if (this->upper() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_upper(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instruments.AgeRestrictionField)
  return target;
}

size_t AgeRestrictionField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instruments.AgeRestrictionField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Lower = 1;
  if (this->lower() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_lower());
  }

  // uint32 Upper = 2;
  if (this->upper() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_upper());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgeRestrictionField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:instruments.AgeRestrictionField)
  GOOGLE_DCHECK_NE(&from, this);
  const AgeRestrictionField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgeRestrictionField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:instruments.AgeRestrictionField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:instruments.AgeRestrictionField)
    MergeFrom(*source);
  }
}

void AgeRestrictionField::MergeFrom(const AgeRestrictionField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:instruments.AgeRestrictionField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lower() != 0) {
    _internal_set_lower(from._internal_lower());
  }
  if (from.upper() != 0) {
    _internal_set_upper(from._internal_upper());
  }
}

void AgeRestrictionField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:instruments.AgeRestrictionField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgeRestrictionField::CopyFrom(const AgeRestrictionField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instruments.AgeRestrictionField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgeRestrictionField::IsInitialized() const {
  return true;
}

void AgeRestrictionField::InternalSwap(AgeRestrictionField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AgeRestrictionField, upper_)
      + sizeof(AgeRestrictionField::upper_)
      - PROTOBUF_FIELD_OFFSET(AgeRestrictionField, lower_)>(
          reinterpret_cast<char*>(&lower_),
          reinterpret_cast<char*>(&other->lower_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AgeRestrictionField::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CurrencyValueField::InitAsDefaultInstance() {
}
class CurrencyValueField::_Internal {
 public:
};

CurrencyValueField::CurrencyValueField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:instruments.CurrencyValueField)
}
CurrencyValueField::CurrencyValueField(const CurrencyValueField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  currencycode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_currencycode().empty()) {
    currencycode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_currencycode(),
      GetArena());
  }
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&precision_) -
    reinterpret_cast<char*>(&value_)) + sizeof(precision_));
  // @@protoc_insertion_point(copy_constructor:instruments.CurrencyValueField)
}

void CurrencyValueField::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CurrencyValueField_instruments_2eproto.base);
  currencycode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&value_)) + sizeof(precision_));
}

CurrencyValueField::~CurrencyValueField() {
  // @@protoc_insertion_point(destructor:instruments.CurrencyValueField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CurrencyValueField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  currencycode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CurrencyValueField::ArenaDtor(void* object) {
  CurrencyValueField* _this = reinterpret_cast< CurrencyValueField* >(object);
  (void)_this;
}
void CurrencyValueField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CurrencyValueField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CurrencyValueField& CurrencyValueField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CurrencyValueField_instruments_2eproto.base);
  return *internal_default_instance();
}


void CurrencyValueField::Clear() {
// @@protoc_insertion_point(message_clear_start:instruments.CurrencyValueField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currencycode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&value_)) + sizeof(precision_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CurrencyValueField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 Value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string CurrencyCode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_currencycode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.CurrencyValueField.CurrencyCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Precision = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          precision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CurrencyValueField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instruments.CurrencyValueField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Value = 1;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_value(), target);
  }

  // string CurrencyCode = 2;
  if (this->currencycode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currencycode().data(), static_cast<int>(this->_internal_currencycode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.CurrencyValueField.CurrencyCode");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_currencycode(), target);
  }

  // uint32 Precision = 3;
  if (this->precision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_precision(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instruments.CurrencyValueField)
  return target;
}

size_t CurrencyValueField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instruments.CurrencyValueField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string CurrencyCode = 2;
  if (this->currencycode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currencycode());
  }

  // uint64 Value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_value());
  }

  // uint32 Precision = 3;
  if (this->precision() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_precision());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CurrencyValueField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:instruments.CurrencyValueField)
  GOOGLE_DCHECK_NE(&from, this);
  const CurrencyValueField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CurrencyValueField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:instruments.CurrencyValueField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:instruments.CurrencyValueField)
    MergeFrom(*source);
  }
}

void CurrencyValueField::MergeFrom(const CurrencyValueField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:instruments.CurrencyValueField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.currencycode().size() > 0) {
    _internal_set_currencycode(from._internal_currencycode());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
  if (from.precision() != 0) {
    _internal_set_precision(from._internal_precision());
  }
}

void CurrencyValueField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:instruments.CurrencyValueField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CurrencyValueField::CopyFrom(const CurrencyValueField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instruments.CurrencyValueField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CurrencyValueField::IsInitialized() const {
  return true;
}

void CurrencyValueField::InternalSwap(CurrencyValueField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  currencycode_.Swap(&other->currencycode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CurrencyValueField, precision_)
      + sizeof(CurrencyValueField::precision_)
      - PROTOBUF_FIELD_OFFSET(CurrencyValueField, value_)>(
          reinterpret_cast<char*>(&value_),
          reinterpret_cast<char*>(&other->value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CurrencyValueField::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FixedCurrencyValueField::InitAsDefaultInstance() {
}
class FixedCurrencyValueField::_Internal {
 public:
};

FixedCurrencyValueField::FixedCurrencyValueField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:instruments.FixedCurrencyValueField)
}
FixedCurrencyValueField::FixedCurrencyValueField(const FixedCurrencyValueField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  currencycode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_currencycode().empty()) {
    currencycode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_currencycode(),
      GetArena());
  }
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&precision_) -
    reinterpret_cast<char*>(&value_)) + sizeof(precision_));
  // @@protoc_insertion_point(copy_constructor:instruments.FixedCurrencyValueField)
}

void FixedCurrencyValueField::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FixedCurrencyValueField_instruments_2eproto.base);
  currencycode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&value_)) + sizeof(precision_));
}

FixedCurrencyValueField::~FixedCurrencyValueField() {
  // @@protoc_insertion_point(destructor:instruments.FixedCurrencyValueField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FixedCurrencyValueField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  currencycode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FixedCurrencyValueField::ArenaDtor(void* object) {
  FixedCurrencyValueField* _this = reinterpret_cast< FixedCurrencyValueField* >(object);
  (void)_this;
}
void FixedCurrencyValueField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FixedCurrencyValueField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FixedCurrencyValueField& FixedCurrencyValueField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FixedCurrencyValueField_instruments_2eproto.base);
  return *internal_default_instance();
}


void FixedCurrencyValueField::Clear() {
// @@protoc_insertion_point(message_clear_start:instruments.FixedCurrencyValueField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currencycode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&value_)) + sizeof(precision_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FixedCurrencyValueField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 Value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string CurrencyCode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_currencycode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "instruments.FixedCurrencyValueField.CurrencyCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Precision = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          precision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FixedCurrencyValueField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instruments.FixedCurrencyValueField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Value = 1;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_value(), target);
  }

  // string CurrencyCode = 2;
  if (this->currencycode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currencycode().data(), static_cast<int>(this->_internal_currencycode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instruments.FixedCurrencyValueField.CurrencyCode");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_currencycode(), target);
  }

  // uint32 Precision = 3;
  if (this->precision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_precision(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instruments.FixedCurrencyValueField)
  return target;
}

size_t FixedCurrencyValueField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instruments.FixedCurrencyValueField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string CurrencyCode = 2;
  if (this->currencycode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currencycode());
  }

  // uint64 Value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_value());
  }

  // uint32 Precision = 3;
  if (this->precision() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_precision());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FixedCurrencyValueField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:instruments.FixedCurrencyValueField)
  GOOGLE_DCHECK_NE(&from, this);
  const FixedCurrencyValueField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FixedCurrencyValueField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:instruments.FixedCurrencyValueField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:instruments.FixedCurrencyValueField)
    MergeFrom(*source);
  }
}

void FixedCurrencyValueField::MergeFrom(const FixedCurrencyValueField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:instruments.FixedCurrencyValueField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.currencycode().size() > 0) {
    _internal_set_currencycode(from._internal_currencycode());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
  if (from.precision() != 0) {
    _internal_set_precision(from._internal_precision());
  }
}

void FixedCurrencyValueField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:instruments.FixedCurrencyValueField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FixedCurrencyValueField::CopyFrom(const FixedCurrencyValueField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instruments.FixedCurrencyValueField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FixedCurrencyValueField::IsInitialized() const {
  return true;
}

void FixedCurrencyValueField::InternalSwap(FixedCurrencyValueField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  currencycode_.Swap(&other->currencycode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FixedCurrencyValueField, precision_)
      + sizeof(FixedCurrencyValueField::precision_)
      - PROTOBUF_FIELD_OFFSET(FixedCurrencyValueField, value_)>(
          reinterpret_cast<char*>(&value_),
          reinterpret_cast<char*>(&other->value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FixedCurrencyValueField::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RateField::InitAsDefaultInstance() {
}
class RateField::_Internal {
 public:
};

RateField::RateField(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:instruments.RateField)
}
RateField::RateField(const RateField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&precision_) -
    reinterpret_cast<char*>(&value_)) + sizeof(precision_));
  // @@protoc_insertion_point(copy_constructor:instruments.RateField)
}

void RateField::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&value_)) + sizeof(precision_));
}

RateField::~RateField() {
  // @@protoc_insertion_point(destructor:instruments.RateField)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RateField::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RateField::ArenaDtor(void* object) {
  RateField* _this = reinterpret_cast< RateField* >(object);
  (void)_this;
}
void RateField::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RateField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RateField& RateField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RateField_instruments_2eproto.base);
  return *internal_default_instance();
}


void RateField::Clear() {
// @@protoc_insertion_point(message_clear_start:instruments.RateField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&value_)) + sizeof(precision_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RateField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 Precision = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          precision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 Value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RateField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instruments.RateField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Precision = 1;
  if (this->precision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_precision(), target);
  }

  // uint64 Value = 2;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instruments.RateField)
  return target;
}

size_t RateField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instruments.RateField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 Value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_value());
  }

  // uint32 Precision = 1;
  if (this->precision() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_precision());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RateField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:instruments.RateField)
  GOOGLE_DCHECK_NE(&from, this);
  const RateField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RateField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:instruments.RateField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:instruments.RateField)
    MergeFrom(*source);
  }
}

void RateField::MergeFrom(const RateField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:instruments.RateField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
  if (from.precision() != 0) {
    _internal_set_precision(from._internal_precision());
  }
}

void RateField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:instruments.RateField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RateField::CopyFrom(const RateField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instruments.RateField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RateField::IsInitialized() const {
  return true;
}

void RateField::InternalSwap(RateField* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RateField, precision_)
      + sizeof(RateField::precision_)
      - PROTOBUF_FIELD_OFFSET(RateField, value_)>(
          reinterpret_cast<char*>(&value_),
          reinterpret_cast<char*>(&other->value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RateField::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace instruments
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::instruments::Membership* Arena::CreateMaybeMessage< ::instruments::Membership >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instruments::Membership >(arena);
}
template<> PROTOBUF_NOINLINE ::instruments::Currency* Arena::CreateMaybeMessage< ::instruments::Currency >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instruments::Currency >(arena);
}
template<> PROTOBUF_NOINLINE ::instruments::ShareCommon* Arena::CreateMaybeMessage< ::instruments::ShareCommon >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instruments::ShareCommon >(arena);
}
template<> PROTOBUF_NOINLINE ::instruments::BondFixedRate* Arena::CreateMaybeMessage< ::instruments::BondFixedRate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instruments::BondFixedRate >(arena);
}
template<> PROTOBUF_NOINLINE ::instruments::DiscountCoupon* Arena::CreateMaybeMessage< ::instruments::DiscountCoupon >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instruments::DiscountCoupon >(arena);
}
template<> PROTOBUF_NOINLINE ::instruments::DeprecatedLoyaltyPoints* Arena::CreateMaybeMessage< ::instruments::DeprecatedLoyaltyPoints >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instruments::DeprecatedLoyaltyPoints >(arena);
}
template<> PROTOBUF_NOINLINE ::instruments::TicketAdmission* Arena::CreateMaybeMessage< ::instruments::TicketAdmission >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instruments::TicketAdmission >(arena);
}
template<> PROTOBUF_NOINLINE ::instruments::CasinoChip* Arena::CreateMaybeMessage< ::instruments::CasinoChip >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instruments::CasinoChip >(arena);
}
template<> PROTOBUF_NOINLINE ::instruments::InformationServiceLicense* Arena::CreateMaybeMessage< ::instruments::InformationServiceLicense >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instruments::InformationServiceLicense >(arena);
}
template<> PROTOBUF_NOINLINE ::instruments::CreditNote* Arena::CreateMaybeMessage< ::instruments::CreditNote >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instruments::CreditNote >(arena);
}
template<> PROTOBUF_NOINLINE ::instruments::RewardPoint* Arena::CreateMaybeMessage< ::instruments::RewardPoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instruments::RewardPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::instruments::AgeRestrictionField* Arena::CreateMaybeMessage< ::instruments::AgeRestrictionField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instruments::AgeRestrictionField >(arena);
}
template<> PROTOBUF_NOINLINE ::instruments::CurrencyValueField* Arena::CreateMaybeMessage< ::instruments::CurrencyValueField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instruments::CurrencyValueField >(arena);
}
template<> PROTOBUF_NOINLINE ::instruments::FixedCurrencyValueField* Arena::CreateMaybeMessage< ::instruments::FixedCurrencyValueField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instruments::FixedCurrencyValueField >(arena);
}
template<> PROTOBUF_NOINLINE ::instruments::RateField* Arena::CreateMaybeMessage< ::instruments::RateField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instruments::RateField >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
