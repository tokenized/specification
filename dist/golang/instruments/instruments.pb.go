// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: instruments.proto

package instruments

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Message - Membership (MBR)
type Membership struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgeRestriction      *AgeRestrictionField `protobuf:"bytes,1,opt,name=AgeRestriction,proto3" json:"AgeRestriction,omitempty"`            // AgeRestriction
	ValidFrom           uint64               `protobuf:"varint,2,opt,name=ValidFrom,proto3" json:"ValidFrom,omitempty"`                     // Timestamp
	ExpirationTimestamp uint64               `protobuf:"varint,3,opt,name=ExpirationTimestamp,proto3" json:"ExpirationTimestamp,omitempty"` // Timestamp
	ID                  string               `protobuf:"bytes,4,opt,name=ID,proto3" json:"ID,omitempty"`                                    // varchar
	MembershipClass     string               `protobuf:"bytes,5,opt,name=MembershipClass,proto3" json:"MembershipClass,omitempty"`          // varchar
	RoleType            string               `protobuf:"bytes,6,opt,name=RoleType,proto3" json:"RoleType,omitempty"`                        // varchar
	MembershipType      string               `protobuf:"bytes,7,opt,name=MembershipType,proto3" json:"MembershipType,omitempty"`            // varchar
	Description         string               `protobuf:"bytes,8,opt,name=Description,proto3" json:"Description,omitempty"`                  // varchar
	TransfersPermitted  bool                 `protobuf:"varint,9,opt,name=TransfersPermitted,proto3" json:"TransfersPermitted,omitempty"`   // bool
}

func (x *Membership) Reset() {
	*x = Membership{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instruments_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Membership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Membership) ProtoMessage() {}

func (x *Membership) ProtoReflect() protoreflect.Message {
	mi := &file_instruments_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Membership.ProtoReflect.Descriptor instead.
func (*Membership) Descriptor() ([]byte, []int) {
	return file_instruments_proto_rawDescGZIP(), []int{0}
}

func (x *Membership) GetAgeRestriction() *AgeRestrictionField {
	if x != nil {
		return x.AgeRestriction
	}
	return nil
}

func (x *Membership) GetValidFrom() uint64 {
	if x != nil {
		return x.ValidFrom
	}
	return 0
}

func (x *Membership) GetExpirationTimestamp() uint64 {
	if x != nil {
		return x.ExpirationTimestamp
	}
	return 0
}

func (x *Membership) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Membership) GetMembershipClass() string {
	if x != nil {
		return x.MembershipClass
	}
	return ""
}

func (x *Membership) GetRoleType() string {
	if x != nil {
		return x.RoleType
	}
	return ""
}

func (x *Membership) GetMembershipType() string {
	if x != nil {
		return x.MembershipType
	}
	return ""
}

func (x *Membership) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Membership) GetTransfersPermitted() bool {
	if x != nil {
		return x.TransfersPermitted
	}
	return false
}

// Message - Currency (CCY)
type Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyCode      string `protobuf:"bytes,1,opt,name=CurrencyCode,proto3" json:"CurrencyCode,omitempty"`           // CurrencyType
	MonetaryAuthority string `protobuf:"bytes,2,opt,name=MonetaryAuthority,proto3" json:"MonetaryAuthority,omitempty"` // varchar
	Precision         uint64 `protobuf:"varint,4,opt,name=Precision,proto3" json:"Precision,omitempty"`                // uint
}

func (x *Currency) Reset() {
	*x = Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instruments_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Currency) ProtoMessage() {}

func (x *Currency) ProtoReflect() protoreflect.Message {
	mi := &file_instruments_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Currency.ProtoReflect.Descriptor instead.
func (*Currency) Descriptor() ([]byte, []int) {
	return file_instruments_proto_rawDescGZIP(), []int{1}
}

func (x *Currency) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *Currency) GetMonetaryAuthority() string {
	if x != nil {
		return x.MonetaryAuthority
	}
	return ""
}

func (x *Currency) GetPrecision() uint64 {
	if x != nil {
		return x.Precision
	}
	return 0
}

// Message - Share - Common (SHC)
type ShareCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticker             string `protobuf:"bytes,1,opt,name=Ticker,proto3" json:"Ticker,omitempty"`                          // fixedchar
	ISIN               string `protobuf:"bytes,2,opt,name=ISIN,proto3" json:"ISIN,omitempty"`                              // fixedchar
	Description        string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`                // varchar
	TransfersPermitted bool   `protobuf:"varint,4,opt,name=TransfersPermitted,proto3" json:"TransfersPermitted,omitempty"` // bool
}

func (x *ShareCommon) Reset() {
	*x = ShareCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instruments_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareCommon) ProtoMessage() {}

func (x *ShareCommon) ProtoReflect() protoreflect.Message {
	mi := &file_instruments_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareCommon.ProtoReflect.Descriptor instead.
func (*ShareCommon) Descriptor() ([]byte, []int) {
	return file_instruments_proto_rawDescGZIP(), []int{2}
}

func (x *ShareCommon) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *ShareCommon) GetISIN() string {
	if x != nil {
		return x.ISIN
	}
	return ""
}

func (x *ShareCommon) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ShareCommon) GetTransfersPermitted() bool {
	if x != nil {
		return x.TransfersPermitted
	}
	return false
}

// Message - Bond - Fixed Rate (BFR)
type BondFixedRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                       string               `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                                                   // varchar
	BondType                   string               `protobuf:"bytes,2,opt,name=BondType,proto3" json:"BondType,omitempty"`                                           // fixedchar
	ISIN                       string               `protobuf:"bytes,3,opt,name=ISIN,proto3" json:"ISIN,omitempty"`                                                   // varchar
	Collateral                 string               `protobuf:"bytes,4,opt,name=Collateral,proto3" json:"Collateral,omitempty"`                                       // varchar
	ParValue                   *CurrencyValueField  `protobuf:"bytes,5,opt,name=ParValue,proto3" json:"ParValue,omitempty"`                                           // CurrencyValue
	InterestRate               *RateField           `protobuf:"bytes,6,opt,name=InterestRate,proto3" json:"InterestRate,omitempty"`                                   // Rate
	InterestPaymentInitialDate uint64               `protobuf:"varint,7,opt,name=InterestPaymentInitialDate,proto3" json:"InterestPaymentInitialDate,omitempty"`      // TimestampSeconds
	InterestPaymentDateDeltas  []uint64             `protobuf:"varint,8,rep,packed,name=InterestPaymentDateDeltas,proto3" json:"InterestPaymentDateDeltas,omitempty"` // Seconds[]
	LatePaymentPenaltyRate     *RateField           `protobuf:"bytes,9,opt,name=LatePaymentPenaltyRate,proto3" json:"LatePaymentPenaltyRate,omitempty"`               // Rate
	LatePaymentWindow          uint64               `protobuf:"varint,10,opt,name=LatePaymentWindow,proto3" json:"LatePaymentWindow,omitempty"`                       // TimestampSeconds
	LatePaymentPenaltyPeriod   uint64               `protobuf:"varint,11,opt,name=LatePaymentPenaltyPeriod,proto3" json:"LatePaymentPenaltyPeriod,omitempty"`         // TimestampSeconds
	MaturityDate               uint64               `protobuf:"varint,12,opt,name=MaturityDate,proto3" json:"MaturityDate,omitempty"`                                 // Timestamp
	AgeRestriction             *AgeRestrictionField `protobuf:"bytes,13,opt,name=AgeRestriction,proto3" json:"AgeRestriction,omitempty"`                              // AgeRestriction
	TransfersPermitted         bool                 `protobuf:"varint,14,opt,name=TransfersPermitted,proto3" json:"TransfersPermitted,omitempty"`                     // bool
}

func (x *BondFixedRate) Reset() {
	*x = BondFixedRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instruments_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BondFixedRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BondFixedRate) ProtoMessage() {}

func (x *BondFixedRate) ProtoReflect() protoreflect.Message {
	mi := &file_instruments_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BondFixedRate.ProtoReflect.Descriptor instead.
func (*BondFixedRate) Descriptor() ([]byte, []int) {
	return file_instruments_proto_rawDescGZIP(), []int{3}
}

func (x *BondFixedRate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BondFixedRate) GetBondType() string {
	if x != nil {
		return x.BondType
	}
	return ""
}

func (x *BondFixedRate) GetISIN() string {
	if x != nil {
		return x.ISIN
	}
	return ""
}

func (x *BondFixedRate) GetCollateral() string {
	if x != nil {
		return x.Collateral
	}
	return ""
}

func (x *BondFixedRate) GetParValue() *CurrencyValueField {
	if x != nil {
		return x.ParValue
	}
	return nil
}

func (x *BondFixedRate) GetInterestRate() *RateField {
	if x != nil {
		return x.InterestRate
	}
	return nil
}

func (x *BondFixedRate) GetInterestPaymentInitialDate() uint64 {
	if x != nil {
		return x.InterestPaymentInitialDate
	}
	return 0
}

func (x *BondFixedRate) GetInterestPaymentDateDeltas() []uint64 {
	if x != nil {
		return x.InterestPaymentDateDeltas
	}
	return nil
}

func (x *BondFixedRate) GetLatePaymentPenaltyRate() *RateField {
	if x != nil {
		return x.LatePaymentPenaltyRate
	}
	return nil
}

func (x *BondFixedRate) GetLatePaymentWindow() uint64 {
	if x != nil {
		return x.LatePaymentWindow
	}
	return 0
}

func (x *BondFixedRate) GetLatePaymentPenaltyPeriod() uint64 {
	if x != nil {
		return x.LatePaymentPenaltyPeriod
	}
	return 0
}

func (x *BondFixedRate) GetMaturityDate() uint64 {
	if x != nil {
		return x.MaturityDate
	}
	return 0
}

func (x *BondFixedRate) GetAgeRestriction() *AgeRestrictionField {
	if x != nil {
		return x.AgeRestriction
	}
	return nil
}

func (x *BondFixedRate) GetTransfersPermitted() bool {
	if x != nil {
		return x.TransfersPermitted
	}
	return false
}

// Message - Discount Coupon (COU)
type DiscountCoupon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedeemingEntity     string              `protobuf:"bytes,1,opt,name=RedeemingEntity,proto3" json:"RedeemingEntity,omitempty"`          // varchar
	ValidFromTimestamp  uint64              `protobuf:"varint,2,opt,name=ValidFromTimestamp,proto3" json:"ValidFromTimestamp,omitempty"`   // Timestamp
	ExpirationTimestamp uint64              `protobuf:"varint,3,opt,name=ExpirationTimestamp,proto3" json:"ExpirationTimestamp,omitempty"` // Timestamp
	CouponName          string              `protobuf:"bytes,6,opt,name=CouponName,proto3" json:"CouponName,omitempty"`                    // varchar
	TransfersPermitted  bool                `protobuf:"varint,8,opt,name=TransfersPermitted,proto3" json:"TransfersPermitted,omitempty"`   // bool
	FaceValue           *CurrencyValueField `protobuf:"bytes,9,opt,name=FaceValue,proto3" json:"FaceValue,omitempty"`                      // CurrencyValue
	RedemptionVenue     string              `protobuf:"bytes,10,opt,name=RedemptionVenue,proto3" json:"RedemptionVenue,omitempty"`         // varchar
	Details             string              `protobuf:"bytes,11,opt,name=Details,proto3" json:"Details,omitempty"`                         // varchar
}

func (x *DiscountCoupon) Reset() {
	*x = DiscountCoupon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instruments_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountCoupon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountCoupon) ProtoMessage() {}

func (x *DiscountCoupon) ProtoReflect() protoreflect.Message {
	mi := &file_instruments_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountCoupon.ProtoReflect.Descriptor instead.
func (*DiscountCoupon) Descriptor() ([]byte, []int) {
	return file_instruments_proto_rawDescGZIP(), []int{4}
}

func (x *DiscountCoupon) GetRedeemingEntity() string {
	if x != nil {
		return x.RedeemingEntity
	}
	return ""
}

func (x *DiscountCoupon) GetValidFromTimestamp() uint64 {
	if x != nil {
		return x.ValidFromTimestamp
	}
	return 0
}

func (x *DiscountCoupon) GetExpirationTimestamp() uint64 {
	if x != nil {
		return x.ExpirationTimestamp
	}
	return 0
}

func (x *DiscountCoupon) GetCouponName() string {
	if x != nil {
		return x.CouponName
	}
	return ""
}

func (x *DiscountCoupon) GetTransfersPermitted() bool {
	if x != nil {
		return x.TransfersPermitted
	}
	return false
}

func (x *DiscountCoupon) GetFaceValue() *CurrencyValueField {
	if x != nil {
		return x.FaceValue
	}
	return nil
}

func (x *DiscountCoupon) GetRedemptionVenue() string {
	if x != nil {
		return x.RedemptionVenue
	}
	return ""
}

func (x *DiscountCoupon) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// Message - Deprecated Loyalty Points (LOY)
type DeprecatedLoyaltyPoints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgeRestriction      *AgeRestrictionField `protobuf:"bytes,1,opt,name=AgeRestriction,proto3" json:"AgeRestriction,omitempty"`            // AgeRestriction
	ProgramName         string               `protobuf:"bytes,2,opt,name=ProgramName,proto3" json:"ProgramName,omitempty"`                  // varchar
	ExpirationTimestamp uint64               `protobuf:"varint,4,opt,name=ExpirationTimestamp,proto3" json:"ExpirationTimestamp,omitempty"` // Timestamp
	Details             string               `protobuf:"bytes,5,opt,name=Details,proto3" json:"Details,omitempty"`                          // varchar
	TransfersPermitted  bool                 `protobuf:"varint,6,opt,name=TransfersPermitted,proto3" json:"TransfersPermitted,omitempty"`   // bool
}

func (x *DeprecatedLoyaltyPoints) Reset() {
	*x = DeprecatedLoyaltyPoints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instruments_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeprecatedLoyaltyPoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeprecatedLoyaltyPoints) ProtoMessage() {}

func (x *DeprecatedLoyaltyPoints) ProtoReflect() protoreflect.Message {
	mi := &file_instruments_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeprecatedLoyaltyPoints.ProtoReflect.Descriptor instead.
func (*DeprecatedLoyaltyPoints) Descriptor() ([]byte, []int) {
	return file_instruments_proto_rawDescGZIP(), []int{5}
}

func (x *DeprecatedLoyaltyPoints) GetAgeRestriction() *AgeRestrictionField {
	if x != nil {
		return x.AgeRestriction
	}
	return nil
}

func (x *DeprecatedLoyaltyPoints) GetProgramName() string {
	if x != nil {
		return x.ProgramName
	}
	return ""
}

func (x *DeprecatedLoyaltyPoints) GetExpirationTimestamp() uint64 {
	if x != nil {
		return x.ExpirationTimestamp
	}
	return 0
}

func (x *DeprecatedLoyaltyPoints) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *DeprecatedLoyaltyPoints) GetTransfersPermitted() bool {
	if x != nil {
		return x.TransfersPermitted
	}
	return false
}

// Message - Ticket (Admission) (TIC)
type TicketAdmission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgeRestriction      *AgeRestrictionField `protobuf:"bytes,1,opt,name=AgeRestriction,proto3" json:"AgeRestriction,omitempty"`            // AgeRestriction
	Venue               string               `protobuf:"bytes,3,opt,name=Venue,proto3" json:"Venue,omitempty"`                              // varchar
	Area                string               `protobuf:"bytes,5,opt,name=Area,proto3" json:"Area,omitempty"`                                // varchar
	Seat                string               `protobuf:"bytes,6,opt,name=Seat,proto3" json:"Seat,omitempty"`                                // varchar
	EventStartTimestamp uint64               `protobuf:"varint,7,opt,name=EventStartTimestamp,proto3" json:"EventStartTimestamp,omitempty"` // Timestamp
	EventName           string               `protobuf:"bytes,10,opt,name=EventName,proto3" json:"EventName,omitempty"`                     // varchar
	TransfersPermitted  bool                 `protobuf:"varint,11,opt,name=TransfersPermitted,proto3" json:"TransfersPermitted,omitempty"`  // bool
	Details             string               `protobuf:"bytes,12,opt,name=Details,proto3" json:"Details,omitempty"`                         // varchar
	Section             string               `protobuf:"bytes,13,opt,name=Section,proto3" json:"Section,omitempty"`                         // varchar
	Row                 string               `protobuf:"bytes,14,opt,name=Row,proto3" json:"Row,omitempty"`                                 // varchar
	EventEndTimestamp   uint64               `protobuf:"varint,15,opt,name=EventEndTimestamp,proto3" json:"EventEndTimestamp,omitempty"`    // Timestamp
}

func (x *TicketAdmission) Reset() {
	*x = TicketAdmission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instruments_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketAdmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketAdmission) ProtoMessage() {}

func (x *TicketAdmission) ProtoReflect() protoreflect.Message {
	mi := &file_instruments_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketAdmission.ProtoReflect.Descriptor instead.
func (*TicketAdmission) Descriptor() ([]byte, []int) {
	return file_instruments_proto_rawDescGZIP(), []int{6}
}

func (x *TicketAdmission) GetAgeRestriction() *AgeRestrictionField {
	if x != nil {
		return x.AgeRestriction
	}
	return nil
}

func (x *TicketAdmission) GetVenue() string {
	if x != nil {
		return x.Venue
	}
	return ""
}

func (x *TicketAdmission) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *TicketAdmission) GetSeat() string {
	if x != nil {
		return x.Seat
	}
	return ""
}

func (x *TicketAdmission) GetEventStartTimestamp() uint64 {
	if x != nil {
		return x.EventStartTimestamp
	}
	return 0
}

func (x *TicketAdmission) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *TicketAdmission) GetTransfersPermitted() bool {
	if x != nil {
		return x.TransfersPermitted
	}
	return false
}

func (x *TicketAdmission) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *TicketAdmission) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

func (x *TicketAdmission) GetRow() string {
	if x != nil {
		return x.Row
	}
	return ""
}

func (x *TicketAdmission) GetEventEndTimestamp() uint64 {
	if x != nil {
		return x.EventEndTimestamp
	}
	return 0
}

// Message - Casino Chip (CHP)
type CasinoChip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UseType             string               `protobuf:"bytes,2,opt,name=UseType,proto3" json:"UseType,omitempty"`                          // fixedchar
	AgeRestriction      *AgeRestrictionField `protobuf:"bytes,3,opt,name=AgeRestriction,proto3" json:"AgeRestriction,omitempty"`            // AgeRestriction
	ExpirationTimestamp uint64               `protobuf:"varint,5,opt,name=ExpirationTimestamp,proto3" json:"ExpirationTimestamp,omitempty"` // Timestamp
	TransfersPermitted  bool                 `protobuf:"varint,7,opt,name=TransfersPermitted,proto3" json:"TransfersPermitted,omitempty"`   // bool
	CasinoName          string               `protobuf:"bytes,8,opt,name=CasinoName,proto3" json:"CasinoName,omitempty"`                    // varchar
	FaceValue           *CurrencyValueField  `protobuf:"bytes,9,opt,name=FaceValue,proto3" json:"FaceValue,omitempty"`                      // CurrencyValue
}

func (x *CasinoChip) Reset() {
	*x = CasinoChip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instruments_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CasinoChip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasinoChip) ProtoMessage() {}

func (x *CasinoChip) ProtoReflect() protoreflect.Message {
	mi := &file_instruments_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasinoChip.ProtoReflect.Descriptor instead.
func (*CasinoChip) Descriptor() ([]byte, []int) {
	return file_instruments_proto_rawDescGZIP(), []int{7}
}

func (x *CasinoChip) GetUseType() string {
	if x != nil {
		return x.UseType
	}
	return ""
}

func (x *CasinoChip) GetAgeRestriction() *AgeRestrictionField {
	if x != nil {
		return x.AgeRestriction
	}
	return nil
}

func (x *CasinoChip) GetExpirationTimestamp() uint64 {
	if x != nil {
		return x.ExpirationTimestamp
	}
	return 0
}

func (x *CasinoChip) GetTransfersPermitted() bool {
	if x != nil {
		return x.TransfersPermitted
	}
	return false
}

func (x *CasinoChip) GetCasinoName() string {
	if x != nil {
		return x.CasinoName
	}
	return ""
}

func (x *CasinoChip) GetFaceValue() *CurrencyValueField {
	if x != nil {
		return x.FaceValue
	}
	return nil
}

// Message - Information Service License (ISL)
type InformationServiceLicense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgeRestriction      *AgeRestrictionField `protobuf:"bytes,1,opt,name=AgeRestriction,proto3" json:"AgeRestriction,omitempty"`            // AgeRestriction
	ExpirationTimestamp uint64               `protobuf:"varint,2,opt,name=ExpirationTimestamp,proto3" json:"ExpirationTimestamp,omitempty"` // Timestamp
	ServiceName         string               `protobuf:"bytes,3,opt,name=ServiceName,proto3" json:"ServiceName,omitempty"`                  // varchar
	TransfersPermitted  bool                 `protobuf:"varint,4,opt,name=TransfersPermitted,proto3" json:"TransfersPermitted,omitempty"`   // bool
	URL                 string               `protobuf:"bytes,5,opt,name=URL,proto3" json:"URL,omitempty"`                                  // varchar
}

func (x *InformationServiceLicense) Reset() {
	*x = InformationServiceLicense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instruments_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InformationServiceLicense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InformationServiceLicense) ProtoMessage() {}

func (x *InformationServiceLicense) ProtoReflect() protoreflect.Message {
	mi := &file_instruments_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InformationServiceLicense.ProtoReflect.Descriptor instead.
func (*InformationServiceLicense) Descriptor() ([]byte, []int) {
	return file_instruments_proto_rawDescGZIP(), []int{8}
}

func (x *InformationServiceLicense) GetAgeRestriction() *AgeRestrictionField {
	if x != nil {
		return x.AgeRestriction
	}
	return nil
}

func (x *InformationServiceLicense) GetExpirationTimestamp() uint64 {
	if x != nil {
		return x.ExpirationTimestamp
	}
	return 0
}

func (x *InformationServiceLicense) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *InformationServiceLicense) GetTransfersPermitted() bool {
	if x != nil {
		return x.TransfersPermitted
	}
	return false
}

func (x *InformationServiceLicense) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

// Message - Credit Note (CRN)
type CreditNote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string              `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                                // varchar
	FaceValue           *CurrencyValueField `protobuf:"bytes,2,opt,name=FaceValue,proto3" json:"FaceValue,omitempty"`                      // CurrencyValue
	ExpirationTimestamp uint64              `protobuf:"varint,3,opt,name=ExpirationTimestamp,proto3" json:"ExpirationTimestamp,omitempty"` // Timestamp
}

func (x *CreditNote) Reset() {
	*x = CreditNote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instruments_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNote) ProtoMessage() {}

func (x *CreditNote) ProtoReflect() protoreflect.Message {
	mi := &file_instruments_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNote.ProtoReflect.Descriptor instead.
func (*CreditNote) Descriptor() ([]byte, []int) {
	return file_instruments_proto_rawDescGZIP(), []int{9}
}

func (x *CreditNote) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreditNote) GetFaceValue() *CurrencyValueField {
	if x != nil {
		return x.FaceValue
	}
	return nil
}

func (x *CreditNote) GetExpirationTimestamp() uint64 {
	if x != nil {
		return x.ExpirationTimestamp
	}
	return 0
}

// Message - Reward Point (RPT)
type RewardPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgeRestriction      *AgeRestrictionField `protobuf:"bytes,1,opt,name=AgeRestriction,proto3" json:"AgeRestriction,omitempty"`            // AgeRestriction
	ProgramName         string               `protobuf:"bytes,2,opt,name=ProgramName,proto3" json:"ProgramName,omitempty"`                  // varchar
	ExpirationTimestamp uint64               `protobuf:"varint,4,opt,name=ExpirationTimestamp,proto3" json:"ExpirationTimestamp,omitempty"` // Timestamp
	Details             string               `protobuf:"bytes,5,opt,name=Details,proto3" json:"Details,omitempty"`                          // varchar
	TransfersPermitted  bool                 `protobuf:"varint,6,opt,name=TransfersPermitted,proto3" json:"TransfersPermitted,omitempty"`   // bool
}

func (x *RewardPoint) Reset() {
	*x = RewardPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instruments_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardPoint) ProtoMessage() {}

func (x *RewardPoint) ProtoReflect() protoreflect.Message {
	mi := &file_instruments_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardPoint.ProtoReflect.Descriptor instead.
func (*RewardPoint) Descriptor() ([]byte, []int) {
	return file_instruments_proto_rawDescGZIP(), []int{10}
}

func (x *RewardPoint) GetAgeRestriction() *AgeRestrictionField {
	if x != nil {
		return x.AgeRestriction
	}
	return nil
}

func (x *RewardPoint) GetProgramName() string {
	if x != nil {
		return x.ProgramName
	}
	return ""
}

func (x *RewardPoint) GetExpirationTimestamp() uint64 {
	if x != nil {
		return x.ExpirationTimestamp
	}
	return 0
}

func (x *RewardPoint) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *RewardPoint) GetTransfersPermitted() bool {
	if x != nil {
		return x.TransfersPermitted
	}
	return false
}

// Field - Age Restriction
type AgeRestrictionField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lower uint32 `protobuf:"varint,1,opt,name=Lower,proto3" json:"Lower,omitempty"` // uint
	Upper uint32 `protobuf:"varint,2,opt,name=Upper,proto3" json:"Upper,omitempty"` // uint
}

func (x *AgeRestrictionField) Reset() {
	*x = AgeRestrictionField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instruments_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgeRestrictionField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgeRestrictionField) ProtoMessage() {}

func (x *AgeRestrictionField) ProtoReflect() protoreflect.Message {
	mi := &file_instruments_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgeRestrictionField.ProtoReflect.Descriptor instead.
func (*AgeRestrictionField) Descriptor() ([]byte, []int) {
	return file_instruments_proto_rawDescGZIP(), []int{11}
}

func (x *AgeRestrictionField) GetLower() uint32 {
	if x != nil {
		return x.Lower
	}
	return 0
}

func (x *AgeRestrictionField) GetUpper() uint32 {
	if x != nil {
		return x.Upper
	}
	return 0
}

// Field - Currency Value
type CurrencyValueField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value        uint64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value,omitempty"`              // uint
	CurrencyCode string `protobuf:"bytes,2,opt,name=CurrencyCode,proto3" json:"CurrencyCode,omitempty"` // CurrencyType
	Precision    uint32 `protobuf:"varint,3,opt,name=Precision,proto3" json:"Precision,omitempty"`      // uint
}

func (x *CurrencyValueField) Reset() {
	*x = CurrencyValueField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instruments_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyValueField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyValueField) ProtoMessage() {}

func (x *CurrencyValueField) ProtoReflect() protoreflect.Message {
	mi := &file_instruments_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyValueField.ProtoReflect.Descriptor instead.
func (*CurrencyValueField) Descriptor() ([]byte, []int) {
	return file_instruments_proto_rawDescGZIP(), []int{12}
}

func (x *CurrencyValueField) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *CurrencyValueField) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *CurrencyValueField) GetPrecision() uint32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

// Field - Rate
type RateField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Precision uint32 `protobuf:"varint,1,opt,name=Precision,proto3" json:"Precision,omitempty"` // uint
	Value     uint64 `protobuf:"varint,2,opt,name=Value,proto3" json:"Value,omitempty"`         // uint
}

func (x *RateField) Reset() {
	*x = RateField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instruments_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateField) ProtoMessage() {}

func (x *RateField) ProtoReflect() protoreflect.Message {
	mi := &file_instruments_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateField.ProtoReflect.Descriptor instead.
func (*RateField) Descriptor() ([]byte, []int) {
	return file_instruments_proto_rawDescGZIP(), []int{13}
}

func (x *RateField) GetPrecision() uint32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *RateField) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_instruments_proto protoreflect.FileDescriptor

var file_instruments_proto_rawDesc = []byte{
	0x0a, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0xf6, 0x02, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12,
	0x48, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0e, 0x41, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x30, 0x0a, 0x13, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x08, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x6f,
	0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x50, 0x72, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0x8b, 0x01, 0x0a,
	0x0b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x53, 0x49, 0x4e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x49, 0x53, 0x49, 0x4e, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x22, 0xc2, 0x05, 0x0a, 0x0d, 0x42,
	0x6f, 0x6e, 0x64, 0x46, 0x69, 0x78, 0x65, 0x64, 0x52, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x42, 0x6f, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x42, 0x6f, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x53, 0x49, 0x4e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x53, 0x49, 0x4e,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x12, 0x3b, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x08, 0x50, 0x61, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a,
	0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0c, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x04, 0x52, 0x19, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x12, 0x4e, 0x0a, 0x16, 0x4c, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52,
	0x16, 0x4c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x6e, 0x61,
	0x6c, 0x74, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x4c, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x11, 0x4c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x3a, 0x0a, 0x18, 0x4c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x4c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52,
	0x0e, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2e, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x22,
	0x81, 0x03, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x69, 0x6e, 0x67, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x64,
	0x65, 0x65, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x12,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x46,
	0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x30, 0x0a, 0x13,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x3d,
	0x0a, 0x09, 0x46, 0x61, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x09, 0x46, 0x61, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x6e, 0x75, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x4a, 0x04, 0x08,
	0x07, 0x10, 0x08, 0x22, 0x87, 0x02, 0x0a, 0x17, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x48, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0e, 0x41, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0xa5, 0x03,
	0x0a, 0x0f, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x48, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0e, 0x41, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x56,
	0x65, 0x6e, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x65, 0x6e, 0x75,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x65, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x41, 0x72, 0x65, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x52, 0x6f, 0x77, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x52, 0x6f, 0x77, 0x12,
	0x2c, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4a, 0x04, 0x08,
	0x02, 0x10, 0x03, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x08, 0x10, 0x09, 0x4a,
	0x04, 0x08, 0x09, 0x10, 0x0a, 0x22, 0xc3, 0x02, 0x0a, 0x0a, 0x43, 0x61, 0x73, 0x69, 0x6e, 0x6f,
	0x43, 0x68, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x55, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48,
	0x0a, 0x0e, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0e, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61,
	0x73, 0x69, 0x6e, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x61, 0x73, 0x69, 0x6e, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x46, 0x61,
	0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x09,
	0x46, 0x61, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a,
	0x04, 0x08, 0x04, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x22, 0xfb, 0x01, 0x0a, 0x19,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x41, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x0e, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x13, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x22, 0x91, 0x01, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x09,
	0x46, 0x61, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x52, 0x09, 0x46, 0x61, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xfb, 0x01,
	0x0a, 0x0b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x48, 0x0a,
	0x0e, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0e, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0x41, 0x0a, 0x13, 0x41,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x70, 0x70, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x55, 0x70, 0x70, 0x65, 0x72, 0x22, 0x6c,
	0x0a, 0x12, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x09,
	0x52, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x72,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x3c, 0x5a,
	0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x69, 0x7a, 0x65, 0x64, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_instruments_proto_rawDescOnce sync.Once
	file_instruments_proto_rawDescData = file_instruments_proto_rawDesc
)

func file_instruments_proto_rawDescGZIP() []byte {
	file_instruments_proto_rawDescOnce.Do(func() {
		file_instruments_proto_rawDescData = protoimpl.X.CompressGZIP(file_instruments_proto_rawDescData)
	})
	return file_instruments_proto_rawDescData
}

var file_instruments_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_instruments_proto_goTypes = []interface{}{
	(*Membership)(nil),                // 0: instruments.Membership
	(*Currency)(nil),                  // 1: instruments.Currency
	(*ShareCommon)(nil),               // 2: instruments.ShareCommon
	(*BondFixedRate)(nil),             // 3: instruments.BondFixedRate
	(*DiscountCoupon)(nil),            // 4: instruments.DiscountCoupon
	(*DeprecatedLoyaltyPoints)(nil),   // 5: instruments.DeprecatedLoyaltyPoints
	(*TicketAdmission)(nil),           // 6: instruments.TicketAdmission
	(*CasinoChip)(nil),                // 7: instruments.CasinoChip
	(*InformationServiceLicense)(nil), // 8: instruments.InformationServiceLicense
	(*CreditNote)(nil),                // 9: instruments.CreditNote
	(*RewardPoint)(nil),               // 10: instruments.RewardPoint
	(*AgeRestrictionField)(nil),       // 11: instruments.AgeRestrictionField
	(*CurrencyValueField)(nil),        // 12: instruments.CurrencyValueField
	(*RateField)(nil),                 // 13: instruments.RateField
}
var file_instruments_proto_depIdxs = []int32{
	11, // 0: instruments.Membership.AgeRestriction:type_name -> instruments.AgeRestrictionField
	12, // 1: instruments.BondFixedRate.ParValue:type_name -> instruments.CurrencyValueField
	13, // 2: instruments.BondFixedRate.InterestRate:type_name -> instruments.RateField
	13, // 3: instruments.BondFixedRate.LatePaymentPenaltyRate:type_name -> instruments.RateField
	11, // 4: instruments.BondFixedRate.AgeRestriction:type_name -> instruments.AgeRestrictionField
	12, // 5: instruments.DiscountCoupon.FaceValue:type_name -> instruments.CurrencyValueField
	11, // 6: instruments.DeprecatedLoyaltyPoints.AgeRestriction:type_name -> instruments.AgeRestrictionField
	11, // 7: instruments.TicketAdmission.AgeRestriction:type_name -> instruments.AgeRestrictionField
	11, // 8: instruments.CasinoChip.AgeRestriction:type_name -> instruments.AgeRestrictionField
	12, // 9: instruments.CasinoChip.FaceValue:type_name -> instruments.CurrencyValueField
	11, // 10: instruments.InformationServiceLicense.AgeRestriction:type_name -> instruments.AgeRestrictionField
	12, // 11: instruments.CreditNote.FaceValue:type_name -> instruments.CurrencyValueField
	11, // 12: instruments.RewardPoint.AgeRestriction:type_name -> instruments.AgeRestrictionField
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_instruments_proto_init() }
func file_instruments_proto_init() {
	if File_instruments_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_instruments_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Membership); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instruments_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instruments_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instruments_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BondFixedRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instruments_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscountCoupon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instruments_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeprecatedLoyaltyPoints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instruments_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketAdmission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instruments_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CasinoChip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instruments_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InformationServiceLicense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instruments_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditNote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instruments_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instruments_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgeRestrictionField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instruments_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyValueField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instruments_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_instruments_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_instruments_proto_goTypes,
		DependencyIndexes: file_instruments_proto_depIdxs,
		MessageInfos:      file_instruments_proto_msgTypes,
	}.Build()
	File_instruments_proto = out.File
	file_instruments_proto_rawDesc = nil
	file_instruments_proto_goTypes = nil
	file_instruments_proto_depIdxs = nil
}
